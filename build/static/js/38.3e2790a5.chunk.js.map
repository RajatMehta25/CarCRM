{"version":3,"sources":["pages/ServiceManagement/TaxiSingleManagement.js"],"names":["useStyles","makeStyles","theme","root","flexWrap","margin","spacing","extendedIcon","marginRight","paperHeading","padding","table","minWidth","textMiddle","verticalAlign","iconMargin","color","backgroundColor","iconcolor","headingButton","display","flexDirection","justifyContent","headingAlignment","alignItems","width","gap","textAlign","Marginbutton","container","paperPaddingRightLeft","IOSSwitch","styled","props","focusVisibleClassName","disableRipple","height","transitionDuration","transform","palette","mode","opacity","border","grey","boxSizing","borderRadius","transition","transitions","create","duration","TaxiSingleManagement","classes","useState","selectedLanguage","setSelectedLanguage","puffLoader","useUploadImage","ImageUploadUrl","uploadForm","isSuccess","progress","tableData","setTableData","selectedTaxiData","setSelectedTaxiData","selectedTaxiDataAddEdit","setSelectedTaxiDataAddEdit","setDeletingImage","isFareTaxiSingle","isAddEditTaxiSingle","modalState","setModalState","isLoading","setIsLoading","React","page","setPage","rowsPerPage","setRowsPerPage","totalUserListCount","settotalUserListCount","limit","search","setSearch","name","languages","find","ele","filterLanguageValue","lang","_id","value","title","file1","ImageLink","get","description","objectId","languageObjectId","setLanguageInputs","useEffect","getCategoriesContent","a","axios","data","console","log","docs","totalDocs","reduce","c","label","length","status","language","statusSwitch","e","category","baseRate","put","isActive","target","checked","toast","success","position","POSITION","TOP_RIGHT","error","SearchTaxiSingle","call","timer","d","args","clearTimeout","setTimeout","myDeb","toLowerCase","addNewTaxiSingle","values","post","icon","message","EditTaxiSingle","DeleteImage","imageID","split","Axios","EditFareTaxiSingle","distanceRate","adminCommission","cancellationFee","timeRate","adminCancellationFee","messages","errors","response","err","map","param","msg","setValue","handleChange","event","newValue","langs","imageVerificationAlert","condition","Swal","fire","customClass","text","updateLanguageData","getTabValue","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","onDragEnd","destination","movedItems","source","index","arr","newArray","i","id","className","elevation","style","classNames","onChange","searchVal","onCancelSearch","placeholder","fontSize","arrow","onClick","minHeight","stickyHeader","size","fontWeight","droppableId","provided","snapshot","droppableProps","ref","innerRef","sort","b","key","draggableId","isDragging","draggableStyle","draggableProps","dragHandleProps","background","component","scope","textTransform","src","alt","require","whiteSpace","isSearchable","options","TextToDisplay","Loading","bottom","right","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","maxWidth","isOpen","onClose","reason","backgroundModal","backgroundModalContent","fontFamily","top","cursor","content","initialValues","validate","handleValidateManageFare","onSubmit","formikBag","field","type","setFieldValue","touched","nativeEvent","code","charCodeAt","enableReinitialize","handleValidateAddEditSingleTaxi","indicatorColor","textColor","centered","undefined","accept","files","file","img","Image","URL","createObjectURL","onload","left","zIndex","loading"],"mappings":"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","file":"static/js/38.3e2790a5.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport classNames from \"classnames\";\r\nimport axios from \"../../axios\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { get } from \"lodash\";\r\nimport Axios from \"axios\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { toast } from \"react-toastify\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { Input, Modal } from \"../../components/index\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport { useUploadImage } from \"../../services/Imagecustomhook\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n// import Switch from '@mui/material/Switch';\r\n// import { styled } from '@mui/material/styles';\r\n// import Skeleton from \"react-loading-skeleton\";\r\n// import \"react-loading-skeleton/dist/skeleton.css\";\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Switch,\r\n  styled,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport { handleValidateManageFare, handleValidateAddEditSingleTaxi } from \"../../utils/validators\";\r\n\r\n// import { Delete } from '@material-ui/icons';\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport BlockIcon from \"@material-ui/icons/Block\";\r\n// import ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n\r\n// For Table\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport { orderBy } from \"lodash\";\r\n\r\n//history\r\nimport { useHistory } from \"react-router-dom\";\r\n// import AddEditCategory from \"../AccountManagement/Account_Details\";\r\n\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { DeleteOutline, WidgetsOutlined } from \"@material-ui/icons\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"./ServiceManagement.css\";\r\nimport NoDataFound from \"../../components/NoDataFound\";\r\nimport PuffLoader from \"react-spinners/PuffLoader\";\r\nimport RSelect from \"react-select\";\r\n// import Select from \"../../components/Select\";\r\nimport { ImageUploadUrl } from \"../../statics/constants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexWrap: \"wrap\",\r\n    // marginTop: '5rem',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  paperHeading: {\r\n    padding: \"1rem 0rem\",\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  textMiddle: {\r\n    verticalAlign: \"middle !important\",\r\n  },\r\n  iconMargin: {\r\n    margin: \"0.5rem\",\r\n    color: \"#fff\",\r\n    backgroundColor: \"#696969\",\r\n  },\r\n  iconcolor: {\r\n    margin: \"0.5rem\",\r\n    color: \"#fff\",\r\n    backgroundColor: \"#0e3f37 !important\",\r\n  },\r\n  headingButton: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    padding: \"10px\",\r\n  },\r\n  headingAlignment: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    // padding: \"0 2rem 0 2rem\"\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n    [\"@media (max-width:780px)\"]: {\r\n      // eslint-disable-line no-useless-computed-key\r\n      flexDirection: \"column\",\r\n      width: \"100%\",\r\n      gap: \"1rem\",\r\n      justifyContent: \"center\",\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n  Marginbutton: {\r\n    margin: \"0.5rem\",\r\n  },\r\n  container: {\r\n    // minHeight: \"50vh\",\r\n    // maxHeight: \"58vh\",\r\n  },\r\n  paperPaddingRightLeft: {\r\n    padding: \"0rem 1rem\",\r\n  },\r\n}));\r\n\r\nconst IOSSwitch = styled((props) => <Switch focusVisibleClassName=\".Mui-focusVisible\" disableRipple {...props} />)(\r\n  ({ theme }) => ({\r\n    width: 42,\r\n    height: 26,\r\n    padding: 0,\r\n    \"& .MuiSwitch-switchBase\": {\r\n      padding: 0,\r\n      margin: 2,\r\n      transitionDuration: \"300ms\",\r\n      \"&.Mui-checked\": {\r\n        transform: \"translateX(16px)\",\r\n        color: \"#fff\",\r\n        \"& + .MuiSwitch-track\": {\r\n          backgroundColor: theme.palette.mode === \"dark\" ? \"#32cd32\" : \"#32cd32\",\r\n          opacity: 1,\r\n          border: 0,\r\n        },\r\n        \"&.Mui-disabled + .MuiSwitch-track\": {\r\n          opacity: 0.5,\r\n        },\r\n      },\r\n      \"&.Mui-focusVisible .MuiSwitch-thumb\": {\r\n        color: \"#33cf4d\",\r\n        border: \"6px solid #fff\",\r\n      },\r\n      \"&.Mui-disabled .MuiSwitch-thumb\": {\r\n        color: theme.palette.mode === \"light\" ? theme.palette.grey[100] : theme.palette.grey[600],\r\n      },\r\n      \"&.Mui-disabled + .MuiSwitch-track\": {\r\n        opacity: theme.palette.mode === \"light\" ? 0.7 : 0.3,\r\n      },\r\n    },\r\n    \"& .MuiSwitch-thumb\": {\r\n      boxSizing: \"border-box\",\r\n      width: 22,\r\n      height: 22,\r\n    },\r\n    \"& .MuiSwitch-track\": {\r\n      borderRadius: 26 / 2,\r\n      backgroundColor: theme.palette.mode === \"light\" ? \"#E9E9EA\" : \"#f70f07\",\r\n      opacity: 1,\r\n      transition: theme.transitions.create([\"background-color\"], {\r\n        duration: 500,\r\n      }),\r\n    },\r\n  })\r\n);\r\n\r\nexport default function TaxiSingleManagement(props) {\r\n  const classes = useStyles();\r\n\r\n  // const history=useHistory();\r\n\r\n  const [selectedLanguage, setSelectedLanguage] = useState({});\r\n  const [puffLoader, setPuffLoader] = useState(false);\r\n  const { isSuccess, uploadForm, progress } = useUploadImage(`${ImageUploadUrl}/fileUpload`);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [selectedTaxiData, setSelectedTaxiData] = useState(\"\");\r\n  const [selectedTaxiDataAddEdit, setSelectedTaxiDataAddEdit] = useState(null);\r\n  const [deletingImage, setDeletingImage] = useState(false);\r\n  const [modalState, setModalState] = useState({\r\n    isFareTaxiSingle: \"\",\r\n    isAddEditTaxiSingle: \"\",\r\n  });\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // status switch\r\n  const [checked, setChecked] = useState(true);\r\n\r\n  // For Pagination\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [totalUserListCount, settotalUserListCount] = useState(0);\r\n  const [limit, setLimit] = useState(10);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [showSearch, setShowSearch] = useState(false);\r\n  const [LanguageInputs, setLanguageInputs] = useState({\r\n    name: selectedTaxiDataAddEdit?.languages.find(\r\n      (ele) => filterLanguageValue(ele.lang) === selectedLanguage[selectedTaxiDataAddEdit?._id]?.value\r\n    )?.title,\r\n    file1: \"\",\r\n    ImageLink: get(selectedTaxiDataAddEdit, \"icon\", \"\"),\r\n    description: selectedTaxiDataAddEdit?.languages.find(\r\n      (ele) => filterLanguageValue(ele.lang) === selectedLanguage[selectedTaxiDataAddEdit?._id]?.value\r\n    )?.description,\r\n    objectId: get(selectedTaxiDataAddEdit, \"_id\", \"\"),\r\n    languageObjectId: selectedTaxiDataAddEdit?.languages.find(\r\n      (ele) => filterLanguageValue(ele.lang) === selectedLanguage[selectedTaxiDataAddEdit?._id]?.value\r\n    )?._id,\r\n    lang: selectedTaxiDataAddEdit?.languages.find(\r\n      (ele) => filterLanguageValue(ele.lang) === selectedLanguage[selectedTaxiDataAddEdit?._id]?.value\r\n    )?.lang,\r\n  });\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    // console.log(event);\r\n    // console.log(newPage);\r\n    console.log(newPage);\r\n    console.log({ event, newPage });\r\n    getCategoriesContent(newPage + 1, rowsPerPage, search);\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    getCategoriesContent(0, event.target.value, search);\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    console.log({ event });\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCategoriesContent(page, limit, search);\r\n  }, []);\r\n  // useEffect(()=>{},[LanguageInputs])\r\n\r\n  //get content\r\n  const getCategoriesContent = async (page = 1, limit = 10, search = \"\") => {\r\n    setIsLoading(true);\r\n    try {\r\n      const { data } = await axios.get(`/private/vehicleCategory?page=${page}&limit=${limit}&search=${search}`);\r\n      console.log(data);\r\n      setTableData([...data.data.docs]);\r\n      // setSearchedData(data.data.docs);\r\n      settotalUserListCount(data.data.totalDocs);\r\n      setSearch(search);\r\n      setIsLoading(false);\r\n      setSelectedLanguage(data.data.docs.reduce((a, c) => ((a[c._id] = { label: \"English\", value: \"English\" }), a), {}));\r\n      // console.log(data.data.docs.reduce((a, c) => (console.log(a)));\r\n      if (data.data.docs.length === 0 || data.status === 500) {\r\n        // toast.error(\"No Data Found\", {\r\n        //   position: toast.POSITION.TOP_RIGHT,\r\n        // });\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  // edit category itself\r\n\r\n  // const EditTaxiSingle = (category) => {\r\n  //   props.history.push({\r\n  //     pathname: \"/adminPanel/AddEditTaxiSingle\",\r\n  //     state: category,\r\n  //   });\r\n  // };\r\n\r\n  //edit  categories attribute\r\n  function filterLanguageValue(language) {\r\n    switch (language) {\r\n      case \"en\":\r\n        return \"English\";\r\n\r\n      case \"es\":\r\n        return \"Spanish\";\r\n      case \"zh\":\r\n        return \"Chinese\";\r\n      case \"ko\":\r\n        return \"Korean\";\r\n      default:\r\n        return \"English\";\r\n    }\r\n  }\r\n  const EditAttributeContent = (category) => {\r\n    console.log(tableData);\r\n    props.history.push({\r\n      pathname: \"/EditCategoryAttributes\",\r\n      state: category,\r\n    });\r\n\r\n    // delete category\r\n  };\r\n  const DeleteTaxiSingle = async (category) => {\r\n    try {\r\n      Swal.fire({\r\n        title: \"Are you sure?\",\r\n        text: \"You won't be able to revert this!\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, delete it!\",\r\n      }).then(async (result) => {\r\n        if (result.isConfirmed) {\r\n          const { data } = await axios.delete(\r\n            `/private/vehicleCategory/${category._id}`\r\n            // , {\r\n            // icon: category.icon,\r\n            // title: category.title,\r\n            // }\r\n          );\r\n          console.log(data);\r\n          getCategoriesContent(page, limit, search);\r\n          toast.success(\"Deleted\", {\r\n            position: toast.POSITION.TOP_RIGHT,\r\n          });\r\n          // Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n        } else {\r\n          toast.error(\"You have cancelled the operation\", {\r\n            position: toast.POSITION.TOP_RIGHT,\r\n          });\r\n        }\r\n      });\r\n\r\n      // if (window.confirm(\"Are you sure you want to delete this taxi?\")) {\r\n      //   const { data } = await axios.delete(\r\n      //     `/private/vehicleCategory/${category._id}`\r\n      //     // , {\r\n      //     // icon: category.icon,\r\n      //     // title: category.title,\r\n      //     // }\r\n      //   );\r\n      //   console.log(data);\r\n      //   getCategoriesContent(page, limit, search);\r\n      //   toast.success(\"Deleted\", {\r\n      //     position: toast.POSITION.TOP_RIGHT,\r\n      //   });\r\n      // } else {\r\n      //   toast.error(\"You have cancelled the operation\", {\r\n      //     position: toast.POSITION.TOP_RIGHT,\r\n      //   });\r\n      // }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(error, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    }\r\n  };\r\n\r\n  // status switch\r\n\r\n  const statusSwitch = async (e, category) => {\r\n    if (category.baseRate !== null || undefined) {\r\n      try {\r\n        const { data } = await axios.put(`/private/vehicleCategory/${category._id}`, {\r\n          isActive: e.target.checked,\r\n        });\r\n\r\n        console.log(data);\r\n        // console.log(e.target.checked);\r\n        toast.success(data.data.isActive ? \"Activated\" : \"Deactivated\", {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n        getCategoriesContent();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      toast.error(\"Please add fare first\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n      // props.history.push({\r\n      //   pathname: \"/adminPanel/FareTaxiSingle\",\r\n      //   state: category,\r\n      // });\r\n      setModalState({\r\n        isFareTaxiSingle: true,\r\n      });\r\n      setSelectedTaxiData(category);\r\n    }\r\n  };\r\n\r\n  // For Search\r\n  const [searched, setSearched] = useState(\"\");\r\n  const [searchedData, setSearchedData] = useState([]);\r\n\r\n  const requestSearch = (searchedVal) => {\r\n    console.log(searchedVal);\r\n\r\n    const filteredRows = searchedData.filter((row) => {\r\n      let name = row.sect_name;\r\n      return name.toLowerCase().includes(searchedVal.toLowerCase());\r\n    });\r\n    setTableData(filteredRows);\r\n  };\r\n\r\n  const cancelSearch = () => {\r\n    getCategoriesContent(page, limit, \"\");\r\n  };\r\n  const ManageTaxiSingle = (category) => {\r\n    props.history.push({\r\n      pathname: \"/adminPanel/FareTaxiSingle\",\r\n      state: category,\r\n    });\r\n  };\r\n\r\n  function myDeb(call, d = 1000) {\r\n    let timer;\r\n    return function (...args) {\r\n      clearTimeout(timer);\r\n      timer = setTimeout(() => {\r\n        call(...args);\r\n      }, d);\r\n    };\r\n  }\r\n\r\n  const SearchTaxiSingle = myDeb((search) => {\r\n    getCategoriesContent(page, limit, search.toLowerCase());\r\n  });\r\n\r\n  console.log(modalState);\r\n  const addNewTaxiSingle = async (values) => {\r\n    try {\r\n      console.log(values);\r\n\r\n      const { data } = await axios.post(\"/private/vehicleCategory\", {\r\n        title: values.name,\r\n        icon: values.ImageLink,\r\n        description: values.description,\r\n      });\r\n      // props.history.push({\r\n      //   pathname: \"/adminPanel/TaxiSingleManagement\",\r\n      // });\r\n      setSelectedTaxiDataAddEdit(null);\r\n      setModalState({ isAddEditTaxiSingle: false });\r\n      toast.success(data.message, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n      getCategoriesContent();\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const EditTaxiSingle = async (values) => {\r\n    if (selectedTaxiDataAddEdit?.icon === values.ImageLink) {\r\n      try {\r\n        console.log(values);\r\n        // DeleteImage();\r\n\r\n        const { data } = await axios.put(`/private/vehicleCategory/${selectedTaxiDataAddEdit?._id}`, {\r\n          // title: values.name,\r\n          icon: values.ImageLink,\r\n          // description: values.description,\r\n        });\r\n\r\n        // props.history.push({\r\n        //   pathname: \"/adminPanel/TaxiSingleManagement\",\r\n        // });\r\n        // setSelectedTaxiDataAddEdit(null);\r\n        // setModalState({ isAddEditTaxiSingle: false });\r\n        // toast.success(data.message, {\r\n        //   position: toast.POSITION.TOP_RIGHT,\r\n        // });\r\n        // getCategoriesContent();\r\n        console.log(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      try {\r\n        console.log(values);\r\n        // DeleteImage();\r\n\r\n        const { data } = await axios.put(`/private/vehicleCategory/${selectedTaxiDataAddEdit?._id}`, {\r\n          title: values.name,\r\n          icon: values.ImageLink,\r\n          description: values.description,\r\n        });\r\n\r\n        // props.history.push({\r\n        //   pathname: \"/adminPanel/TaxiSingleManagement\",\r\n        // });\r\n        await DeleteImage();\r\n        setSelectedTaxiDataAddEdit(null);\r\n        setModalState({ isAddEditTaxiSingle: false });\r\n        toast.success(data.message, {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n        // getCategoriesContent();\r\n        console.log(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n  const DeleteImage = async () => {\r\n    console.log(selectedTaxiDataAddEdit);\r\n    setDeletingImage(true);\r\n    let imageID = !selectedTaxiDataAddEdit ? \"\" : selectedTaxiDataAddEdit?.icon.split(\"/\")[3];\r\n    console.log(imageID);\r\n    try {\r\n      const { data } = await Axios.get(`http://18.221.140.83:3000/fileDelete/${imageID}`);\r\n      setDeletingImage(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const EditFareTaxiSingle = async (values) => {\r\n    try {\r\n      console.log(values);\r\n\r\n      const { data } = await axios.put(`/private/vehicleCategory/fare/${selectedTaxiData._id}`, {\r\n        baseRate: values.baseRate,\r\n        distanceRate: values.distanceRate,\r\n        adminCommission: values.adminCommission,\r\n        cancellationFee: values.cancellationFee,\r\n        timeRate: values.timeRate,\r\n        adminCancellationFee: values.adminCancellationFee,\r\n        // driverCancellationFee: values.driverCancellationFee,\r\n        // \"ajk\",\r\n        // values.timeRate || state.timeRate,\r\n        // is_active: state.is_active,\r\n      });\r\n      // props.history.push({\r\n      //   pathname: \"/adminPanel/TaxiSingleManagement\",\r\n      // });\r\n      setSelectedTaxiData(\"\");\r\n      setModalState({ isFareTaxiSingle: false });\r\n      toast.success(data.messages, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n      getCategoriesContent();\r\n      console.log(data);\r\n    } catch (error) {\r\n      const errors = error.response.data.errors;\r\n      console.log(errors);\r\n      var err = {};\r\n      errors.map((e) => {\r\n        err[e.param] = e.msg;\r\n      });\r\n      //  toast.success(errors.messages, {\r\n      //    position: toast.POSITION.TOP_RIGHT,\r\n      //  });\r\n    }\r\n  };\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    let checkEnglish = selectedTaxiDataAddEdit?.languages.find((ele) => filterLanguageValue(ele.lang) === \"English\");\r\n    let checkSpanish = selectedTaxiDataAddEdit?.languages.find((ele) => filterLanguageValue(ele.lang) === \"Spanish\");\r\n    let checkKorean = selectedTaxiDataAddEdit?.languages.find((ele) => filterLanguageValue(ele.lang) === \"Korean\");\r\n    let checkChinese = selectedTaxiDataAddEdit?.languages.find((ele) => filterLanguageValue(ele.lang) === \"Chinese\");\r\n    switch (newValue) {\r\n      case 0:\r\n        setSelectedLanguage((langs) => ({\r\n          ...langs,\r\n          [selectedTaxiDataAddEdit?._id]: { label: \"English\", value: \"English\" },\r\n        }));\r\n        // setSelectedLanguage({ ...selectedLanguage, selectedLanguage?.find((ele)=>(ele)) });\r\n        // setLanguageInputs({\r\n        //   ...LanguageInputs,\r\n        //   name: checkEnglish?.title,\r\n        //   file1: \"\",\r\n        //   ImageLink: get(selectedTaxiDataAddEdit, \"icon\", \"\"),\r\n        //   description: checkEnglish?.description,\r\n        //   objectId: get(selectedTaxiDataAddEdit, \"_id\", \"\"),\r\n        //   languageObjectId: checkEnglish?._id,\r\n        // });\r\n        break;\r\n      case 1:\r\n        setSelectedLanguage((langs) => ({\r\n          ...langs,\r\n          [selectedTaxiDataAddEdit?._id]: { label: \"Spanish\", value: \"Spanish\" },\r\n        }));\r\n        // setLanguageInputs({\r\n        //   ...LanguageInputs,\r\n        //   name: checkSpanish?.title,\r\n        //   file1: \"\",\r\n        //   ImageLink: get(selectedTaxiDataAddEdit, \"icon\", \"\"),\r\n        //   description: checkSpanish?.description,\r\n        //   objectId: get(selectedTaxiDataAddEdit, \"_id\", \"\"),\r\n        //   languageObjectId: checkSpanish?._id,\r\n        // });\r\n        break;\r\n      case 2:\r\n        setSelectedLanguage((langs) => ({\r\n          ...langs,\r\n          [selectedTaxiDataAddEdit?._id]: { label: \"Korean\", value: \"Korean\" },\r\n        }));\r\n        // setLanguageInputs({\r\n        //   ...LanguageInputs,\r\n        //   name: checkKorean?.title,\r\n        //   file1: \"\",\r\n        //   ImageLink: get(selectedTaxiDataAddEdit, \"icon\", \"\"),\r\n        //   description: checkKorean?.description,\r\n        //   objectId: get(selectedTaxiDataAddEdit, \"_id\", \"\"),\r\n        //   languageObjectId: checkKorean?._id,\r\n        // });\r\n        break;\r\n      case 3:\r\n        setSelectedLanguage((langs) => ({\r\n          ...langs,\r\n          [selectedTaxiDataAddEdit?._id]: { label: \"Chinese\", value: \"Chinese\" },\r\n        }));\r\n        // setLanguageInputs({\r\n        //   ...LanguageInputs,\r\n        //   name: checkChinese?.title,\r\n        //   file1: \"\",\r\n        //   ImageLink: get(selectedTaxiDataAddEdit, \"icon\", \"\"),\r\n        //   description: checkChinese?.description,\r\n        //   objectId: get(selectedTaxiDataAddEdit, \"_id\", \"\"),\r\n        //   languageObjectId: checkChinese?._id,\r\n        // });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const imageVerificationAlert = (condition) => {\r\n    if (condition) {\r\n      Swal.fire({\r\n        customClass: {\r\n          container: \"my_swal\",\r\n        },\r\n        icon: \"success\",\r\n        title: \"Success.\",\r\n        text: \"Image Dimensions Accepted!\",\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        customClass: {\r\n          container: \"my_swal\",\r\n        },\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: \"Image Dimensions not Accepted!\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateLanguageData = async (values) => {\r\n    console.log(values);\r\n    try {\r\n      const { data } = await axios.put(`/private/VehicleLanguagesUpdate`, {\r\n        objectId: values.objectId,\r\n        lang: values.lang,\r\n        title: values.name,\r\n        description: values.description,\r\n      });\r\n      toast.success(data.messages, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n      setSelectedTaxiDataAddEdit(null);\r\n      setModalState({ isAddEditTaxiSingle: false });\r\n      getCategoriesContent();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  // const setTabValue = (value) => {\r\n  //   console.log(value);\r\n  //   switch (value) {\r\n  //     case \"English\":\r\n  //       setValue(0);\r\n  //       break;\r\n  //     case \"Spanish\":\r\n  //       setValue(1);\r\n  //       break;\r\n  //     case \"Korean\":\r\n  //       setValue(2);\r\n  //       break;\r\n  //     case \"Chinese\":\r\n  //       setValue(3);\r\n  //       break;\r\n\r\n  //     default:\r\n  //       break;\r\n  //   }\r\n  // };\r\n\r\n  const getTabValue = (value) => {\r\n    switch (value) {\r\n      case \"English\":\r\n        return 0;\r\n      case \"Spanish\":\r\n        return 1;\r\n      case \"Korean\":\r\n        return 2;\r\n      case \"Chinese\":\r\n        return 3;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n    return result;\r\n  };\r\n  const getItemStyle = (isDragging, draggableStyle) => ({\r\n    background: isDragging ? \"#757ce8\" : \"white\",\r\n    ...draggableStyle,\r\n  });\r\n\r\n  const onDragEnd = async (result) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n    let movedItems = reorder(tableData, result.source.index, result.destination.index);\r\n    let arr = [];\r\n    arr = movedItems;\r\n    console.log(\"moveeeeeeeeeed\", arr);\r\n    setTableData(movedItems);\r\n    console.log(movedItems);\r\n    const newArray = arr.map((ele, i) => ({ id: ele._id, position: i }));\r\n    console.log(newArray);\r\n    //  const attValues = {\r\n    //    category_id: categoryId,\r\n    //    fields: movedItems,\r\n    //  };\r\n    //  console.log(attValues);\r\n    //  if (attValues) {\r\n    try {\r\n      const { data } = await axios.put(\"/private/vehiclePostionChange\", {\r\n        data: newArray,\r\n      });\r\n      //      console.log(data);\r\n      getCategoriesContent();\r\n\r\n      toast.success(`${data.message}`, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    } catch (error) {\r\n      toast.error(`${error.response.data.message}`, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    }\r\n    // } else {\r\n    // return \"\";\r\n    //  }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page-content\">\r\n        <div className={classes.root}>\r\n          <Paper elevation={0} style={{ backgroundColor: \"transparent\" }}>\r\n            <div className={classes.paperPaddingRightLeft}>\r\n              <div className=\"\">\r\n                <Paper\r\n                  elevation={0}\r\n                  style={{ backgroundColor: \"transparent\" }}\r\n                  className={classNames(classes.paperHeading, classes.headingAlignment)}\r\n                >\r\n               \r\n\r\n              \r\n                  <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", gap: \"1rem\" }}>\r\n                    \r\n                  \r\n                    <SearchBar\r\n                      className={\"heightfix  \"}\r\n                      style={{ borderRadius: \"25px\" }}\r\n                      onChange={(searchVal) => SearchTaxiSingle(searchVal)}\r\n                      onCancelSearch={() => cancelSearch()}\r\n                      placeholder=\"Search by Vehicle Name\"\r\n                    />\r\n                  \r\n                  </div>\r\n                  <Tooltip title={<span style={{ color: \"white\", fontSize: \"16px\" }}>Add Vehicle Type</span>} arrow>\r\n                      <IconButton\r\n                        className=\"buttoncss\"\r\n                        style={{ backgroundColor: \"#0059cd\", color: \"#fff\" }}\r\n                        onClick={() => {\r\n                          setModalState({ isAddEditTaxiSingle: true });\r\n                          setSelectedTaxiDataAddEdit(null);\r\n                        }}\r\n                      >\r\n                        <AddIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                </Paper>\r\n\r\n                {/* //new design */}\r\n\r\n                {/* <br /> */}\r\n\r\n                {/* status end */}\r\n\r\n                <Paper>\r\n                  <TableContainer className={classes.container} style={{ minHeight: tableData.length > 0 ? \"50vh\" : \"\" }}>\r\n                    <Table className={classes.table} stickyHeader size=\"small\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell style={{ fontWeight: \"bold\" }}>Sr. No.</TableCell>\r\n                          <TableCell style={{ fontWeight: \"bold\" }}> Vehicle Name</TableCell>\r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Vehicle Image</TableCell>\r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Vehicle Description</TableCell>\r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Status</TableCell>\r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Actions</TableCell>\r\n                          {/* <TableCell>User Type</TableCell>\r\n                              <TableCell>Status</TableCell> */}\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <DragDropContext onDragEnd={onDragEnd}>\r\n                        <Droppable droppableId=\"droppable\">\r\n                          {(provided, snapshot) => (\r\n                            <TableBody {...provided.droppableProps} ref={provided.innerRef}>\r\n                              {/* {isLoading ? (\r\n                          <TableRow>\r\n                            <Skeleton\r\n                              style={{ width: \"70vw\", borderRadius: \"20px\" }}\r\n                              highlightColor=\"#fff\"\r\n                              height=\"1rem\"\r\n                              count={2}\r\n                              baseColor=\"#ebebeb\"\r\n                            />\r\n                          </TableRow>\r\n                        ) : (\r\n                          false\r\n                        )} */}\r\n                              {tableData\r\n                                .sort((a, b) => (a.position > b.position ? 1 : -1))\r\n                                // .slice(\r\n                                //   page * rowsPerPage,\r\n                                //   page * rowsPerPage + rowsPerPage\r\n                                // )\r\n                                // .reverse()\r\n                                .map((category, index) => (\r\n                                  <Draggable\r\n                                    key={category.position}\r\n                                    draggableId={\"q-\" + category.position}\r\n                                    index={category.position}\r\n                                  >\r\n                                    {(provided, snapshot) => (\r\n                                      <TableRow\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.draggableProps}\r\n                                        {...provided.dragHandleProps}\r\n                                        style={getItemStyle(snapshot.isDragging, provided.draggableProps.style)}\r\n                                      >\r\n                                        <TableCell component=\"th\" scope=\"row\" className={classes.textMiddle}>\r\n                                          {index + 1 + page * rowsPerPage}\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.textMiddle} style={{ textTransform: \"capitalize\" }}>\r\n                                          {\r\n                                            category?.languages.find(\r\n                                              (ele) => filterLanguageValue(ele.lang) === selectedLanguage[category._id]?.value\r\n                                            )?.title\r\n                                          }\r\n                                          {/* {console.log(category?.languages.find((ele) => ele.lang === selectedLanguage[category._id]?.value)?..title)} */}\r\n                                        </TableCell>\r\n\r\n                                        <TableCell style={{ textAlign: \"center\" }}>\r\n                                          {category.icon ? (\r\n                                            <img src={category.icon} alt=\"image\" style={{ width: \"35px\", height: \"35px\" }} />\r\n                                          ) : (\r\n                                            <img\r\n                                              src={require(\"../../assets/images/logo/happyTaxi.png\")}\r\n                                              alt=\"image\"\r\n                                              style={{ width: \"35px\", height: \"35px\" }}\r\n                                            />\r\n                                          )}\r\n                                        </TableCell>\r\n                                        <TableCell\r\n                                          className={classes.textMiddle}\r\n                                          style={{ textAlign: \"center\", textTransform: \"capitalize\" }}\r\n                                        >\r\n                                          {\r\n                                            category?.languages.find(\r\n                                              (ele) => filterLanguageValue(ele.lang) === selectedLanguage[category._id]?.value\r\n                                            )?.description\r\n                                          }\r\n                                        </TableCell>\r\n                                        <TableCell className={classes.textMiddle} style={{ textAlign: \"center\" }}>\r\n                                          <Tooltip\r\n                                            title={\r\n                                              <span className=\"TooltipCustomSize\">{`${\r\n                                                category?.isActive ? \"Active\" : \"Inactive\"\r\n                                              }`}</span>\r\n                                            }\r\n                                            arrow\r\n                                          >\r\n                                            <Button>\r\n                                              <IOSSwitch\r\n                                                onChange={(e) => {\r\n                                                  statusSwitch(e, category);\r\n                                                }}\r\n                                                checked={category.isActive}\r\n                                              />\r\n                                            </Button>\r\n                                          </Tooltip>\r\n                                        </TableCell>\r\n\r\n                                        <TableCell\r\n                                          className={classes.textMiddle}\r\n                                          style={{ textAlign: \"center\", whiteSpace: \"nowrap\" }}\r\n                                        >\r\n                                          <div className=\"mx-2\" style={{ display: \"inline-block\", width: \"150px\" }}>\r\n                                            {\" \"}\r\n                                            <RSelect\r\n                                              placeholder=\"Language\"\r\n                                              isSearchable={false}\r\n                                              options={category?.languages.map((ele) => ({\r\n                                                label: filterLanguageValue(ele.lang),\r\n                                                value: filterLanguageValue(ele.lang),\r\n                                              }))}\r\n                                              value={selectedLanguage[category._id]}\r\n                                              onChange={(e) => {\r\n                                                setSelectedLanguage((langs) => ({ ...langs, [category._id]: e }));\r\n                                                // setTabValue(e.value);\r\n                                              }}\r\n                                            />\r\n                                          </div>\r\n                                          <Button\r\n                                            className=\"WidgetButton\"\r\n                                            onClick={() => {\r\n                                              setSelectedTaxiData(category);\r\n                                              setModalState({\r\n                                                isFareTaxiSingle: true,\r\n                                              });\r\n                                            }}\r\n                                          >\r\n                                            <Tooltip title={<span className=\"TooltipCustomSize\">Manage</span>} arrow>\r\n                                              <WidgetsOutlined />\r\n                                            </Tooltip>\r\n                                          </Button>\r\n                                          <Button\r\n                                            className=\"EditButton mx-2\"\r\n                                            onClick={() => {\r\n                                              setModalState({ isAddEditTaxiSingle: true });\r\n                                              setSelectedTaxiDataAddEdit(category);\r\n                                            }}\r\n                                          >\r\n                                            <Tooltip title={<span className=\"TooltipCustomSize\">Edit</span>} arrow>\r\n                                              <EditIcon />\r\n                                            </Tooltip>\r\n                                          </Button>\r\n\r\n                                          {/* <Button className=\"DeleteButton\" onClick={() => DeleteTaxiSingle(category)}>\r\n                                  <Tooltip title={<span className=\"TooltipCustomSize\">Delete</span>} arrow>\r\n                                    <DeleteOutline />\r\n                                  </Tooltip>\r\n                                </Button> */}\r\n                                        </TableCell>\r\n                                      </TableRow>\r\n                                    )}\r\n                                  </Draggable>\r\n                                ))}\r\n                              {provided.placeholder}\r\n                            </TableBody>\r\n                          )}\r\n                        </Droppable>\r\n                      </DragDropContext>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  {tableData.length === 0 ? (\r\n                    <NoDataFound TextToDisplay=\"No Data Found.\" fontSize=\"24px\" Loading={isLoading} />\r\n                  ) : (\r\n                    false\r\n                  )}\r\n                  <TablePagination\r\n                   style={{position:\"fixed\",bottom:4,backgroundColor:\"white\",right:27}}\r\n                    rowsPerPageOptions={totalUserListCount >= 100 ? [10, 25, 100] : totalUserListCount > 10 ? [10, 25] : [10]}\r\n                    component=\"div\"\r\n                    count={totalUserListCount}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            </div>\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n      {console.log(\"fixed\", selectedLanguage[selectedTaxiDataAddEdit?._id]?.value)}\r\n      {/* FareTaxi Single */}\r\n      <Modal\r\n        maxWidth=\"lg\"\r\n        width=\"840px\"\r\n        isOpen={modalState.isFareTaxiSingle}\r\n        // onClose={() => {\r\n        //   setModalState({\r\n        //     isFareTaxiSingle: false,\r\n        //   });\r\n        //   setSelectedTaxiData(\"\");\r\n        // }}\r\n        onClose={(event, reason) => {\r\n          if (reason && (reason === \"backdropClick\" || \"escapeKeyDown\")) {\r\n            console.log(reason);\r\n            setModalState({\r\n              isFareTaxiSingle: true,\r\n            });\r\n          } else {\r\n            setModalState({\r\n              isFareTaxiSingle: false,\r\n            });\r\n            setSelectedTaxiData(\"\");\r\n          }\r\n          // setModalState({\r\n          //   isAddEditTaxiSingle: false,\r\n          // });\r\n          // setSelectedTaxiDataAddEdit(null);\r\n        }}\r\n        backgroundModal={false}\r\n        backgroundModalContent={false}\r\n        title={\r\n          <div>\r\n            <div\r\n              className=\"my-3\"\r\n              style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"22px\", fontFamily: \"'DM Sans', sans-serif\" }}\r\n            >\r\n              Single Taxi Trip Fare\r\n            </div>\r\n            <div className=\"closeicon\">\r\n              <AiOutlineClose\r\n                style={{\r\n                  fontSize: \"1.5rem\",\r\n                  position: \"absolute\",\r\n                  top: 16,\r\n                  right: 16,\r\n                  color: \"#fff\",\r\n                  borderRadius: \"50%\",\r\n                  backgroundColor: \"red\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => {\r\n                  setModalState({\r\n                    isFareTaxiSingle: false,\r\n                  });\r\n                  setSelectedTaxiData(\"\");\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        }\r\n        content={\r\n          <>\r\n            <Formik\r\n              initialValues={{\r\n                baseRate: get(selectedTaxiData, \"baseRate\", \"\"),\r\n                timeRate: get(selectedTaxiData, \"timeRate\", \"\"),\r\n                distanceRate: get(selectedTaxiData, \"distanceRate\", \"\"),\r\n                adminCommission: get(selectedTaxiData, \"adminCommission\", \"\"),\r\n                cancellationFee: get(selectedTaxiData, \"cancellationFee\", \"\"),\r\n                adminCancellationFee: get(selectedTaxiData, \"adminCancellationFee\", \"\"),\r\n                // driverCancellationFee: get(selectedTaxiData, \"driverCancellationFee\", \"\"),\r\n              }}\r\n              validate={(values) => handleValidateManageFare(values)}\r\n              onSubmit={(values) => {\r\n                console.log(values);\r\n                if (selectedTaxiData !== \"\") {\r\n                  EditFareTaxiSingle(values);\r\n                } else {\r\n                  // addNewTaxiSingle(values);\r\n                  console.log(\"gadbad\");\r\n                }\r\n              }}\r\n            >\r\n              {(formikBag) => (\r\n                <Form style={{ width: \"100%\" }}>\r\n                  <div className=\"container\">\r\n                    {/* <div className=\"row my-3 justify-content-center\" style={{ fontSize: \"22px\", fontWeight: \"bold\" }}>\r\n                      <div className=\"col-6 d-flex flex-column \"> Manage Trip Fare</div>\r\n                      <div className=\"col-6 d-flex flex-column \"></div>\r\n                    </div> */}\r\n\r\n                    <div className=\"row my-3\">\r\n                      <div className=\"col-md-6\">\r\n                        <label>\r\n                          Base Rate <span style={{ color: \"#85BB65\", fontWeight: \"bold\" }}>(in USD)</span>:\r\n                        </label>\r\n                        <Field name=\"baseRate\">\r\n                          {({ field }) => (\r\n                            <Input\r\n                              {...field}\r\n                              type=\"number\"\r\n                              onChange={(e) => {\r\n                                formikBag.setFieldValue(\"baseRate\", e.target.value);\r\n                              }}\r\n                              error={formikBag.touched.baseRate && formikBag.errors.baseRate ? formikBag.errors.baseRate : null}\r\n                              className=\"form-control\"\r\n                              placeholder={\"Enter Base Rate\"}\r\n                            />\r\n                          )}\r\n                        </Field>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <label>\r\n                          Time Rate<span style={{ color: \"brown\", fontWeight: \"bold\" }}>(per min)</span>\r\n                          <span style={{ color: \"#85BB65\", fontWeight: \"bold\" }}>(in USD)</span>:\r\n                        </label>\r\n                        <Field name=\"timeRate\">\r\n                          {({ field }) => (\r\n                            <Input\r\n                              {...field}\r\n                              type=\"number\"\r\n                              onChange={(e) => {\r\n                                formikBag.setFieldValue(\"timeRate\", e.target.value);\r\n                              }}\r\n                              error={formikBag.touched.timeRate && formikBag.errors.timeRate ? formikBag.errors.timeRate : null}\r\n                              className=\"form-control\"\r\n                              placeholder={\"Enter Time Rate\"}\r\n                            />\r\n                          )}\r\n                        </Field>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row my-3\">\r\n                      <div className=\"col-md-6\">\r\n                        <label>\r\n                          Distance Rate<span style={{ color: \"brown\", fontWeight: \"bold\" }}>(per mile)</span>\r\n                          <span style={{ color: \"#85BB65\", fontWeight: \"bold\" }}>(in USD)</span>:\r\n                        </label>\r\n                        <Field name=\"distanceRate\">\r\n                          {({ field }) => (\r\n                            <Input\r\n                              {...field}\r\n                              type=\"number\"\r\n                              onChange={(e) => {\r\n                                formikBag.setFieldValue(\"distanceRate\", e.target.value);\r\n                              }}\r\n                              error={\r\n                                formikBag.touched.distanceRate && formikBag.errors.distanceRate\r\n                                  ? formikBag.errors.distanceRate\r\n                                  : null\r\n                              }\r\n                              className=\"form-control\"\r\n                              placeholder={\"Enter Distance Rate\"}\r\n                            />\r\n                          )}\r\n                        </Field>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <label>\r\n                          Admin Commission<span style={{ color: \"#e3941e\", fontWeight: \"bold\" }}>(in %)</span>:\r\n                        </label>\r\n                        <Field name=\"adminCommission\">\r\n                          {({ field }) => (\r\n                            <Input\r\n                              {...field}\r\n                              type=\"text\"\r\n                              onChange={(e) => {\r\n                                formikBag.setFieldValue(\"adminCommission\", e.target.value);\r\n                              }}\r\n                              error={\r\n                                formikBag.touched.adminCommission && formikBag.errors.adminCommission\r\n                                  ? formikBag.errors.adminCommission\r\n                                  : null\r\n                              }\r\n                              className=\"form-control\"\r\n                              placeholder={\"Enter Admin Commission\"}\r\n                            />\r\n                          )}\r\n                        </Field>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row my-3\">\r\n                      <div className=\"col-md-6\">\r\n                        <label>\r\n                          Total Cancellation Fee<span style={{ color: \"#e3941e\", fontWeight: \"bold\" }}>(in %)</span>:\r\n                        </label>\r\n                        <Field name=\"cancellationFee\">\r\n                          {({ field }) => (\r\n                            <Input\r\n                              {...field}\r\n                              type=\"text\"\r\n                              onChange={(e) => {\r\n                                formikBag.setFieldValue(\"cancellationFee\", e.target.value);\r\n                              }}\r\n                              error={\r\n                                formikBag.touched.cancellationFee && formikBag.errors.cancellationFee\r\n                                  ? formikBag.errors.cancellationFee\r\n                                  : null\r\n                              }\r\n                              className=\"form-control\"\r\n                              placeholder={\"Enter Cancellation Fee\"}\r\n                            />\r\n                          )}\r\n                        </Field>\r\n                      </div>\r\n                      <Tooltip\r\n                        title={\r\n                          <span style={{ fontSize: \"20px\" }}>\r\n                            eg. if total cancellation fee(in%)=20 then admin cancellation fee= X% of 20\r\n                          </span>\r\n                        }\r\n                        arrow\r\n                      >\r\n                        <div className=\"col-md-6\">\r\n                          <label>\r\n                            {\" \"}\r\n                            Admin Cancellation Fee<span style={{ color: \"#e3941e\", fontWeight: \"bold\" }}>(in %)</span>:\r\n                          </label>\r\n                          <Field name=\"adminCancellationFee\">\r\n                            {({ field }) => (\r\n                              <Input\r\n                                {...field}\r\n                                type=\"text\"\r\n                                onChange={(e) => {\r\n                                  if (e.nativeEvent.data) {\r\n                                    if (e.target.value > 100) {\r\n                                    } else {\r\n                                      let code = e.nativeEvent.data.charCodeAt(0);\r\n                                      if (code >= 48 && code <= 57) {\r\n                                        formikBag.setFieldValue(\"adminCancellationFee\", e.target.value);\r\n                                        // formikBag.setFieldValue(\"driverCancellationFee\", 100 - e.target.value);\r\n                                      }\r\n                                    }\r\n                                  } else {\r\n                                    formikBag.setFieldValue(\"adminCancellationFee\", e.target.value);\r\n                                    // formikBag.setFieldValue(\"driverCancellationFee\", 100 - e.target.value);\r\n                                  }\r\n                                }}\r\n                                error={\r\n                                  formikBag.touched.adminCancellationFee && formikBag.errors.adminCancellationFee\r\n                                    ? formikBag.errors.adminCancellationFee\r\n                                    : null\r\n                                }\r\n                                className=\"form-control\"\r\n                                placeholder={\"Enter Admin Cancellation Fee\"}\r\n                              />\r\n                            )}\r\n                          </Field>\r\n                        </div>\r\n                      </Tooltip>\r\n                    </div>\r\n\r\n                    {/* <div className=\"row my-3\">\r\n                      <div className=\"col-md-6\">\r\n                        <label> Driver Cancellation Fee(in %):</label>\r\n                        <Field name=\"driverCancellationFee\">\r\n                          {({ field }) => (\r\n                            <Input\r\n                              {...field}\r\n                              type=\"text\"\r\n                              onChange={(e) => {\r\n                                if (e.nativeEvent.data) {\r\n                                  if (e.target.value > 100) {\r\n                                  } else {\r\n                                    let code = e.nativeEvent.data.charCodeAt(0);\r\n                                    if (code >= 48 && code <= 57) {\r\n                                      formikBag.setFieldValue(\"driverCancellationFee\", e.target.value);\r\n                                      formikBag.setFieldValue(\"adminCancellationFee\", 100 - e.target.value);\r\n                                    }\r\n                                  }\r\n                                } else {\r\n                                  formikBag.setFieldValue(\"driverCancellationFee\", e.target.value);\r\n                                  formikBag.setFieldValue(\"adminCancellationFee\", 100 - e.target.value);\r\n                                }\r\n                              }}\r\n                              error={\r\n                                formikBag.touched.driverCancellationFee && formikBag.errors.driverCancellationFee\r\n                                  ? formikBag.errors.driverCancellationFee\r\n                                  : null\r\n                              }\r\n                              className=\"form-control\"\r\n                              placeholder={\"Enter Driver Cancellation Fee\"}\r\n                            />\r\n                          )}\r\n                        </Field>\r\n                      </div>\r\n                    </div> */}\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"buttoncss\"\r\n                      style={{\r\n                        borderRadius: \"1.5rem\",\r\n                        border: \"none\",\r\n                        fontSize: \"1rem\",\r\n                        width: \"10vw\",\r\n                        height: \"5vh\",\r\n                        backgroundColor: \"#006FFF\",\r\n                        color: \"#fff\",\r\n                        margin: \"2rem 0rem\",\r\n                      }}\r\n                    >\r\n                      SAVE\r\n                    </button>\r\n                  </div>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </>\r\n        }\r\n      />\r\n\r\n      {/* AddEdit Taxi Single */}\r\n      <Modal\r\n        maxWidth=\"lg\"\r\n        width=\"840px\"\r\n        isOpen={modalState.isAddEditTaxiSingle}\r\n        onClose={(event, reason) => {\r\n          if (reason && (reason === \"backdropClick\" || \"escapeKeyDown\")) {\r\n            console.log(reason);\r\n            setModalState({\r\n              isAddEditTaxiSingle: true,\r\n            });\r\n          } else {\r\n            setModalState({\r\n              isAddEditTaxiSingle: false,\r\n            });\r\n            setSelectedTaxiDataAddEdit(null);\r\n          }\r\n          // setModalState({\r\n          //   isAddEditTaxiSingle: false,\r\n          // });\r\n          // setSelectedTaxiDataAddEdit(null);\r\n        }}\r\n        backgroundModal={false}\r\n        backgroundModalContent={false}\r\n        title={\r\n          <div>\r\n            <div\r\n              className=\"my-3\"\r\n              style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"22px\", fontFamily: \"'DM Sans', sans-serif\" }}\r\n            >\r\n              {selectedTaxiDataAddEdit === null ? \"Add Vehicle Type\" : \"Edit Vehicle Type\"}\r\n            </div>\r\n            <div className=\"closeicon\">\r\n              <AiOutlineClose\r\n                style={{\r\n                  fontSize: \"1.5rem\",\r\n                  position: \"absolute\",\r\n                  top: 16,\r\n                  right: 16,\r\n                  color: \"#fff\",\r\n                  borderRadius: \"50%\",\r\n                  backgroundColor: \"red\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => {\r\n                  setModalState({\r\n                    isAddEditTaxiSingle: false,\r\n                  });\r\n                  setSelectedTaxiDataAddEdit(null);\r\n                  setLanguageInputs({});\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        }\r\n        content={\r\n          <>\r\n            <Formik\r\n              enableReinitialize\r\n              key={selectedLanguage}\r\n              initialValues={\r\n                // LanguageInputs\r\n                {\r\n                  name: selectedTaxiDataAddEdit?.languages.find(\r\n                    (ele) => filterLanguageValue(ele.lang) === selectedLanguage[selectedTaxiDataAddEdit?._id]?.value\r\n                  )?.title,\r\n                  file1: \"\",\r\n                  ImageLink: get(selectedTaxiDataAddEdit, \"icon\", \"\"),\r\n                  description: selectedTaxiDataAddEdit?.languages.find(\r\n                    (ele) => filterLanguageValue(ele.lang) === selectedLanguage[selectedTaxiDataAddEdit?._id]?.value\r\n                  )?.description,\r\n                  objectId: get(selectedTaxiDataAddEdit, \"_id\", \"\"),\r\n                  languageObjectId: selectedTaxiDataAddEdit?.languages.find(\r\n                    (ele) => filterLanguageValue(ele.lang) === selectedLanguage[selectedTaxiDataAddEdit?._id]?.value\r\n                  )?._id,\r\n                  lang: selectedTaxiDataAddEdit?.languages.find(\r\n                    (ele) => filterLanguageValue(ele.lang) === selectedLanguage[selectedTaxiDataAddEdit?._id]?.value\r\n                  )?.lang,\r\n                }\r\n              }\r\n              validate={(values) => handleValidateAddEditSingleTaxi(values, selectedTaxiDataAddEdit)}\r\n              onSubmit={(values) => {\r\n                console.log(values);\r\n                if (selectedTaxiDataAddEdit !== null) {\r\n                  EditTaxiSingle(values);\r\n                  updateLanguageData(values);\r\n                } else {\r\n                  addNewTaxiSingle(values);\r\n                  console.log(\"gadbad\");\r\n                }\r\n              }}\r\n            >\r\n              {(formikBag) => (\r\n                <Form style={{ width: \"100%\" }}>\r\n                  <div className=\"container\">\r\n                    <div className=\"row mt-2 mb-5 justify-content-center\">\r\n                      {selectedTaxiDataAddEdit !== null ? (\r\n                        <Tabs\r\n                          value={getTabValue(selectedLanguage[selectedTaxiDataAddEdit?._id]?.value)}\r\n                          onChange={handleChange}\r\n                          indicatorColor=\"primary\"\r\n                          textColor=\"primary\"\r\n                          centered\r\n                        >\r\n                          <Tab label=\"English\" />\r\n                          <Tab label=\"Spanish\" />\r\n                          <Tab label=\"Korean\" />\r\n                          <Tab label=\"Chinese\" />\r\n                        </Tabs>\r\n                      ) : (\r\n                        false\r\n                      )}\r\n                    </div>\r\n                    <div className=\"row my-3\">\r\n                      <div className=\"col-md-6\">\r\n                        <label>Vehicle Name :</label>\r\n                        <Field name=\"name\">\r\n                          {({ field }) => (\r\n                            <Input\r\n                              {...field}\r\n                              type=\"text\"\r\n                              onChange={(e) => {\r\n                                formikBag.setFieldValue(\"name\", e.target.value);\r\n                              }}\r\n                              error={formikBag.touched.name && formikBag.errors.name ? formikBag.errors.name : null}\r\n                              className=\"form-control\"\r\n                              placeholder={\"Enter Vehicle Name\"}\r\n                            />\r\n                          )}\r\n                        </Field>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <label>Description:</label>\r\n                        <Field name=\"description\">\r\n                          {({ field }) => (\r\n                            <>\r\n                              <Input\r\n                                {...field}\r\n                                type=\"textarea\"\r\n                                onChange={(e) => {\r\n                                  formikBag.setFieldValue(\"description\", e.target.value);\r\n                                }}\r\n                                error={\r\n                                  formikBag.touched.description && formikBag.errors.description\r\n                                    ? formikBag.errors.description\r\n                                    : null\r\n                                }\r\n                                className=\"form-control\"\r\n                                placeholder={\"Enter Description\"}\r\n                              />\r\n                              <div>\r\n                                <span>{formikBag?.values?.description?.length}/100</span>\r\n                              </div>\r\n                            </>\r\n                          )}\r\n                        </Field>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row my-3\">\r\n                      <div className=\"col-md-6\">\r\n                        <label>\r\n                          Vehicle Image<span style={{ color: \"#85BB65\", fontWeight: \"bold\" }}>(145x145)</span>:\r\n                        </label>\r\n                        <Field name=\"file1\">\r\n                          {({ field }) => (\r\n                            <Input\r\n                              {...field}\r\n                              type=\"file\"\r\n                              value={undefined}\r\n                              // onChange={(e) => {\r\n                              //   formikBag.setFieldValue(\"file1\", e.target.value);\r\n                              // }}\r\n                              accept=\"image/png, image/jpeg , image/jpg\"\r\n                              onChange={async (e) => {\r\n                                // if (!selectedTaxiDataAddEdit) {\r\n                                const [file] = e.target.files;\r\n                                console.log(file);\r\n                                if (file) {\r\n                                  const img = new Image();\r\n                                  console.log(URL.createObjectURL(file));\r\n                                  img.src = URL.createObjectURL(file);\r\n                                  img.onload = async () => {\r\n                                    if (img.width === 145 && img.height === 145) {\r\n                                      // alert(\"Image Dimensions accepted\");\r\n                                      imageVerificationAlert(true);\r\n                                      let data = await uploadForm(file);\r\n                                      formikBag.setFieldValue(\"file1\", file);\r\n                                      formikBag.setFieldValue(\"ImageLink\", data);\r\n                                      //  setProfileImagepath(data);\r\n                                    } else {\r\n                                      // alert(\"Image Dimensions not accepted\");\r\n                                      imageVerificationAlert(false);\r\n                                      formikBag.setFieldValue(\"file1\", \"\");\r\n                                      formikBag.setFieldValue(\"ImageLink\", \"\");\r\n                                      //  setProfileImagepath(\"\");\r\n                                    }\r\n                                  };\r\n                                }\r\n                                // } else {\r\n                                //   const [file] = e.target.files;\r\n                                //   console.log(file);\r\n                                //   if (file) {\r\n                                //     const img = new Image();\r\n                                //     console.log(URL.createObjectURL(file));\r\n                                //     img.src = URL.createObjectURL(file);\r\n                                //     img.onload = async () => {\r\n                                //       if (img.width === 145 && img.height === 145) {\r\n                                //         // alert(\"Image Dimensions accepted\");\r\n                                //         imageVerificationAlert(true);\r\n                                //         let data = await uploadForm(file);\r\n                                //         formikBag.setFieldValue(\"file1\", file);\r\n                                //         formikBag.setFieldValue(\"ImageLink\", data);\r\n                                //         // DeleteImage();\r\n                                //         //  setProfileImagepath(data);\r\n                                //       } else {\r\n                                //         // alert(\"Image Dimensions not accepted\");\r\n                                //         imageVerificationAlert(false);\r\n                                //         formikBag.setFieldValue(\"file1\", \"\");\r\n                                //         formikBag.setFieldValue(\"ImageLink\", \"\");\r\n                                //         //  setProfileImagepath(\"\");\r\n                                //       }\r\n                                //     };\r\n                                //   }\r\n                                // }\r\n                              }}\r\n                              error={formikBag.touched.file1 && formikBag.errors.file1 ? formikBag.errors.file1 : null}\r\n                              className=\"form-control\"\r\n                              placeholder={\"Enter Vehicle Image\"}\r\n                            />\r\n                          )}\r\n                        </Field>\r\n                      </div>\r\n\r\n                      <div className=\"col-md-6\">\r\n                        {/* <label>Preview:</label> */}\r\n                        <Field name=\"ImageLink\">\r\n                          {({ field }) => (\r\n                            <>\r\n                              <img\r\n                                {...field}\r\n                                alt=\"vehicle image\"\r\n                                src={formikBag.values.ImageLink}\r\n                                style={{\r\n                                  width: 145,\r\n                                  height: 145,\r\n                                }}\r\n                                // error={\r\n                                //   formikBag.touched.description && formikBag.errors.description\r\n                                //     ? formikBag.errors.description\r\n                                //     : null\r\n                                // }\r\n                                className=\"form-control\"\r\n                                // placeholder={\"Enter Description\"}\r\n                              />\r\n                            </>\r\n                          )}\r\n                        </Field>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"buttoncss\"\r\n                      style={{\r\n                        borderRadius: \"1.5rem\",\r\n                        border: \"none\",\r\n                        fontSize: \"1rem\",\r\n                        width: \"10vw\",\r\n                        height: \"5vh\",\r\n                        backgroundColor: \"#006FFF\",\r\n                        color: \"#fff\",\r\n                        margin: \"2rem 0rem\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      //  disabled={formikBag.values.ImageLink && !formikBag.errors ? false : true}\r\n                    >\r\n                      SAVE\r\n                    </button>\r\n                    {console.log(formikBag.errors)}\r\n                  </div>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </>\r\n        }\r\n      />\r\n      {puffLoader && (\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1400,\r\n            background: \"#0003\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <PuffLoader\r\n            color=\"#0059cd\"\r\n            loading={isLoading}\r\n            size={100}\r\n            // aria-label=\"Loading Spinner\"\r\n            // data-testid=\"loader\"\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}