{"version":3,"sources":["pages/Notification_Management/Notification_Management.js"],"names":["useStyles","makeStyles","theme","root","flexWrap","margin","spacing","extendedIcon","marginRight","paperHeading","padding","table","minWidth","textMiddle","verticalAlign","iconMargin","color","backgroundColor","iconcolor","headingButton","display","flexDirection","justifyContent","headingAlignment","alignItems","width","gap","textAlign","Marginbutton","container","paperPaddingRightLeft","Notification_Management","props","classes","useState","setDisplay","React","page","setPage","rowsPerPage","setRowsPerPage","users","setUsers","setAllUsers","type","setType","setSearchedData","totalUserListCount","settotalUserListCount","Incomplete","search","useEffect","typeFromCookie","Cookies","get","undefined","set","expires","getUsers","handleChangePage","event","newPage","a","console","log","limit","status","axios","data","docs","totalDocs","Submit","value","Notification","title","description","isEmpty","allNotificationsUser","post","user_type","user_id","toast","success","position","POSITION","TOP_RIGHT","setSelected","setSellerSelected","setDeliverySelected","error","selected","sellerSelected","deliverySelected","flat","filter","item","options","label","SearchUser","call","timer","d","args","clearTimeout","setTimeout","myDeb","Fragment","className","elevation","style","classNames","defaultValue","onChange","e","paperTableHeight","overflowX","stickyHeader","borderAll","borderFor","enableReinitialize","initialValues","validate","values","FeildManageValidatorNotification","validateOnChange","onSubmit","formikBag","name","field","htmlFor","setFieldValue","target","touched","errors","rows","height","borderRadius","borderColor","borderStyle","borderWidth","paddingInlineStart","onClick","searchBox","boxShadow","placeholder","searchVal","onCancelSearch","searchHeight","overflowY","textRight","indeterminate","length","checked","newSelecteds","map","n","_id","allUsers","user","index","isItemSelected","indexOf","key","hover","selectedIndex","newSelected","concat","slice","handleClick","role","tabIndex","component","scope","src","alt","count","onPageChange","onRowsPerPageChange","parseInt"],"mappings":"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","file":"static/js/49.ddf886b2.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n// import { Container, Row, Col } from \"reactstrap\";\r\nimport axios from \"../../axios\";\r\n// import axios from \"../../http-comman\";\r\nimport classNames from \"classnames\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Label from \"reactstrap/lib/Label\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n// import { TextareaAutosize, TextField } from '@material-ui/core';\r\n// import { lightGreen } from '@material-ui/core/colors';\r\n// import Button from '@material-ui/core/Button';\r\nimport { toast } from \"react-toastify\";\r\n// import { Row, Col } from \"reactstrap\";\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n// For Table\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\n// import TablePagination from '@material-ui/core/TablePagination';\r\n// import { autofill } from 'redux-form';\r\n// import { BsPersonFill } from 'react-icons/bs';\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport { get, isEmpty } from \"lodash\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport Input from \"../../components/Input\";\r\nimport { FeildManageValidatorNotification } from \"../../utils/validators\";\r\nimport TextArea from \"../../components/TextArea\";\r\n// import ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport RSelect from \"react-select\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexWrap: \"wrap\",\r\n    // marginTop: '5rem',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  paperHeading: {\r\n    padding: \"1rem 0rem\",\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  textMiddle: {\r\n    verticalAlign: \"middle !important\",\r\n  },\r\n  iconMargin: {\r\n    margin: \"0.5rem\",\r\n    color: \"#fff\",\r\n    backgroundColor: \"#696969\",\r\n  },\r\n  iconcolor: {\r\n    margin: \"0.5rem\",\r\n    color: \"#fff\",\r\n    backgroundColor: \"#0294b3 !important\",\r\n  },\r\n  headingButton: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    padding: \"10px\",\r\n  },\r\n  headingAlignment: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    // padding: \"0 2rem 0 2rem\"\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n    [\"@media (max-width:780px)\"]: {\r\n      // eslint-disable-line no-useless-computed-key\r\n      flexDirection: \"column\",\r\n      width: \"100%\",\r\n      gap: \"1rem\",\r\n      justifyContent: \"center\",\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n  Marginbutton: {\r\n    margin: \"0.5rem\",\r\n  },\r\n  container: {\r\n    // maxHeight: \"58vh\",\r\n  },\r\n  paperPaddingRightLeft: {\r\n    padding: \"0rem 1rem\",\r\n  },\r\n}));\r\n\r\nconst Notification_Management = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [display, setDisplay] = useState(false);\r\n  // For Pagination\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [type, setType] = useState(\"USER\");\r\n\r\n  // For Search\r\n  const [searched, setSearched] = useState(\"\");\r\n  const [searchedData, setSearchedData] = useState([]);\r\n\r\n  const [pagenumber, setPageNumber] = useState(1);\r\n  const [totalUserListCount, settotalUserListCount] = useState(90);\r\n  const [limit, setLimit] = useState(10);\r\n  const [Incomplete, setIncomplete] = useState(true);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [status, setStatus] = useState(\"approved\");\r\n\r\n  useEffect(() => {\r\n    const typeFromCookie = Cookies.get(\"type\");\r\n    if (typeFromCookie === null || typeFromCookie === undefined) {\r\n      Cookies.set(\"type\", \"USER\", {\r\n        expires: 365,\r\n      });\r\n    } else {\r\n    }\r\n    setType(typeFromCookie);\r\n    getUsers();\r\n    // Cookies.set(\"type\", \"USER\", {\r\n    //   expires: 365,\r\n    // });\r\n    // typeFromCookie === \"DRIVER\" ? getUsers(1) : getUsers();\r\n  }, [type]);\r\n\r\n  // useEffect(() => {\r\n  //   const typeFromCookie = Cookies.get(\"type\");\r\n  //   console.log(typeFromCookie);\r\n  //   setType(typeFromCookie);\r\n  //   getUsers(typeFromCookie === \"USER\" ? getUsers(0) : getUsers(1));\r\n  // }, [type]);\r\n\r\n  const handleChangePage = async (event, newPage) => {\r\n    console.log(newPage);\r\n    console.log({ event, newPage });\r\n    getUsers(newPage + 1, rowsPerPage, Incomplete, search);\r\n    console.log(\"checkpage\");\r\n    setPage(newPage);\r\n    // if (PaginationData.totalPages > newPage) {\r\n    //   try {\r\n    //     const { data } = await axios.get(`/userList?page=${newPage}&limit=10`);\r\n    //     console.log(data);\r\n    //     setTableData(data.data.docs);\r\n    //     setSearchedData(data.data.docs);\r\n    //     setPaginationData(data.data);\r\n    //     setPage(newPage);\r\n    //   } catch (err) {\r\n    //     console.log(err);\r\n    //   }\r\n    // } else {\r\n    //   toast.error(\"No More Data\");\r\n    // }\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    console.log(+event.target.value);\r\n    // setRowsPerPage(+event.target.value);\r\n    // setPage(0);\r\n    getUsers(0, event.target.value, Incomplete, search);\r\n    console.log(\"checkrows\");\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    console.log({ event });\r\n    setPage(0);\r\n  };\r\n\r\n  const requestSearch = (searchedVal) => {\r\n    // console.log(searchedVal);\r\n    if (type === \"USER\") {\r\n      const filteredRows = searchedData.filter((row) => {\r\n        // console.log(searchedVal);\r\n        //   console.log(row);\r\n        return row.first_name.toLowerCase().includes(searchedVal.toLowerCase());\r\n      });\r\n      setUsers(filteredRows);\r\n    } else if (type === \"DRIVER\") {\r\n      const filteredRows = searchedData.filter((row) => {\r\n        // console.log(searchedVal);\r\n        // console.log(row);\r\n        return row.name.toLowerCase().includes(searchedVal.toLowerCase());\r\n      });\r\n      setUsers(filteredRows);\r\n    }\r\n  };\r\n\r\n  const getUsers = async (page = 1, limit = 10, Incomplete = true, search = \"\", status = \"approved\") => {\r\n    if (type === \"USER\") {\r\n      try {\r\n        const { data } = await axios.get(\r\n          `/private/userList?page=${page}&limit=${limit}&incomplete=${Incomplete}&search=${search}`\r\n        );\r\n        setUsers([...data.data.docs]);\r\n        console.log(data.data.docs);\r\n        setSearchedData([...data.data.docs]);\r\n        // setType(\"USER\");\r\n        settotalUserListCount(data.data.totalDocs);\r\n        // Cookies.set(\"type\", \"USER\", {\r\n        //   expires: 365,\r\n        // });\r\n        console.log(data.data.docs);\r\n        console.log(\"user \");\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else if (type === \"DRIVER\") {\r\n      try {\r\n        const { data } = await axios.get(\r\n          `/private/driverList?page=${page}&limit=${limit}&status=${status}&search=${search}&JobStatus=3&serviceType=0`\r\n        );\r\n        setUsers([...data.data.docs]);\r\n        console.log(data.data.docs);\r\n        setSearchedData([...data.data.docs]);\r\n        // setType(\"DRIVER\");\r\n        settotalUserListCount(data.data.totalDocs);\r\n        // Cookies.set(\"type\", \"DRIVER\", {\r\n        //   expires: 365,\r\n        // });\r\n        console.log(data.data.docs);\r\n        console.log(\"driver\");\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   getUsers();\r\n  // }, []);\r\n\r\n  const cancelSearch = () => {\r\n    getUsers(page, rowsPerPage, Incomplete, \"\");\r\n  };\r\n\r\n  // console.log(checkId.map((val) => val.id));\r\n\r\n  const Submit = async (value) => {\r\n    console.log(value);\r\n\r\n    if (value.Notification === \"individual\") {\r\n      if (value.title && value.description && !isEmpty(allNotificationsUser)) {\r\n        try {\r\n          await axios.post(\"/private/send-notification\", {\r\n            user_type: type == \"USER\" ? \"user\" : \"driver\",\r\n            user_id: allNotificationsUser,\r\n            description: value.description,\r\n            title: value.title,\r\n            type: \"3\",\r\n          });\r\n          toast.success(\"Notification sent successfully!\", {\r\n            position: toast.POSITION.TOP_RIGHT,\r\n          });\r\n          // console.log(allNotificationsUser);\r\n          // console.log(value.description);\r\n          // console.log(value.title);\r\n          value.description = \"\";\r\n          value.title = \"\";\r\n          setSelected(\"\");\r\n          setSellerSelected(\"\");\r\n          setDeliverySelected(\"\");\r\n          // window.location.reload();\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      } else if (type === \"USER\" && isEmpty(allNotificationsUser)) {\r\n        toast.error(\"Please Select a User\", {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n      } else if (type === \"DRIVER\" && isEmpty(allNotificationsUser)) {\r\n        toast.error(\"Please Select a Driver\", {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n      }\r\n    }\r\n    if (value.Notification === \"All\") {\r\n      if (value.title && value.description) {\r\n        try {\r\n          await axios.post(\"/private/send-notification\", {\r\n            user_type: type == \"USER\" ? \"user\" : \"driver\",\r\n            user_id: [],\r\n            description: value.description,\r\n            title: value.title,\r\n            type: \"4\",\r\n          });\r\n          toast.success(\"Notification sent successfully!\", {\r\n            position: toast.POSITION.TOP_RIGHT,\r\n          });\r\n\r\n          // console.log(value.description);\r\n          // console.log(value.title);\r\n          value.description = \"\";\r\n          value.title = \"\";\r\n          setSelected(\"\");\r\n          setSellerSelected(\"\");\r\n          setDeliverySelected(\"\");\r\n          // window.location.reload();\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (value.Notification === \"Web\") {\r\n      if (value.title && value.description) {\r\n        try {\r\n          await axios.post(\"/private/send-notification\", {\r\n            user_type: type == \"USER\" ? \"user\" : \"driver\",\r\n            user_id: [],\r\n            description: value.description,\r\n            title: value.title,\r\n            type: \"5\",\r\n          });\r\n          toast.success(\"Notification sent successfully!\", {\r\n            position: toast.POSITION.TOP_RIGHT,\r\n          });\r\n          // console.log(allNotificationsUser);\r\n          // console.log(value.description);\r\n          // console.log(value.title);\r\n          value.description = \"\";\r\n          value.title = \"\";\r\n          setSelected(\"\");\r\n          setSellerSelected(\"\");\r\n          setDeliverySelected(\"\");\r\n          // window.location.reload();\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (value.Notification === \"Android\") {\r\n      if (value.title && value.description) {\r\n        try {\r\n          await axios.post(\"/private/send-notification\", {\r\n            user_type: type == \"USER\" ? \"user\" : \"driver\",\r\n            user_id: [],\r\n            description: value.description,\r\n            title: value.title,\r\n            type: \"1\",\r\n          });\r\n          toast.success(\"Notification sent successfully!\", {\r\n            position: toast.POSITION.TOP_RIGHT,\r\n          });\r\n          // console.log(allNotificationsUser);\r\n          // console.log(value.description);\r\n          // console.log(value.title);\r\n          value.description = \"\";\r\n          value.title = \"\";\r\n          setSelected(\"\");\r\n          setSellerSelected(\"\");\r\n          setDeliverySelected(\"\");\r\n          // window.location.reload();\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (value.Notification === \"iOS\") {\r\n      if (value.title && value.description) {\r\n        try {\r\n          await axios.post(\"/private/send-notification\", {\r\n            user_type: type == \"USER\" ? \"user\" : \"driver\",\r\n            user_id: [],\r\n            description: value.description,\r\n            title: value.title,\r\n            type: \"2\",\r\n          });\r\n          toast.success(\"Notification sent successfully!\", {\r\n            position: toast.POSITION.TOP_RIGHT,\r\n          });\r\n          // console.log(allNotificationsUser);\r\n          // console.log(value.description);\r\n          // console.log(value.title);\r\n          value.description = \"\";\r\n          value.title = \"\";\r\n          setSelected(\"\");\r\n          setSellerSelected(\"\");\r\n          setDeliverySelected(\"\");\r\n          // window.location.reload();\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    }\r\n\r\n    // setType(type);\r\n  };\r\n\r\n  //Select Checkbox\r\n\r\n  const [selected, setSelected] = React.useState([]);\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = users.map((n) => n._id);\r\n      setSelected(newSelecteds);\r\n      setAllUsers((allUsers) => [...allUsers, selected[0]]);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  // Seller code\r\n\r\n  //Select Checkbox\r\n\r\n  const [sellerSelected, setSellerSelected] = React.useState([]);\r\n\r\n  //  Delivery Boy Code\r\n\r\n  //Select Checkbox\r\n\r\n  const [deliverySelected, setDeliverySelected] = React.useState([]);\r\n\r\n  var allNotifications = [selected, sellerSelected, deliverySelected];\r\n  var allNotificationsUser = allNotifications.flat(2).filter((item) => item !== \"\");\r\n\r\n  const options = [\r\n    { label: \"USER\", value: \"USER\" },\r\n    { label: \"DRIVER\", value: \"DRIVER\" },\r\n  ];\r\n  // console.log(type);\r\n\r\n  function myDeb(call, d = 1000) {\r\n    let timer;\r\n    return function (...args) {\r\n      clearTimeout(timer);\r\n      timer = setTimeout(() => {\r\n        call(...args);\r\n      }, d);\r\n    };\r\n  }\r\n\r\n  const SearchUser = myDeb((search) => {\r\n    getUsers(page, rowsPerPage, Incomplete, search);\r\n  });\r\n\r\n  console.log(\"dkdkdk\", type);\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className={classes.root}>\r\n          <Paper elevation={0} style={{ backgroundColor: \"transparent\" }}>\r\n            <div className={classNames(classes.paperPaddingRightLeft)}>\r\n              <div>\r\n                <Paper\r\n                  elevation={0}\r\n                  style={{ backgroundColor: \"transparent\" }}\r\n                  className={classNames(classes.paperHeading, classes.headingButton)}\r\n                >\r\n                  {/* <Button\r\n                      variant=\"outlined\"\r\n                      aria-label=\"add\"\r\n                      className={classes.iconMargin}\r\n                      onClick={() => {\r\n                        if (window.confirm(\"Leave this page?\")) {\r\n                          props.history.push({\r\n                            pathname: \"/adminPanel/SubAdmin_Management\",\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <ArrowBackIcon />\r\n                    </Button> */}\r\n\r\n                  <h3 className=\"mb-0\"> </h3>\r\n                  <div style={{ width: \"200px\" }}>\r\n                    {\" \"}\r\n                    <RSelect\r\n                      options={options}\r\n                      defaultValue={Cookies.get(\"type\") === \"DRIVER\" ? options[1] : options[0]}\r\n                      // Cookies.get(\"type\") === \"DRIVER\" ? options[1] : options[0]\r\n\r\n                      onChange={(e) => {\r\n                        setType(e.value);\r\n                        Cookies.set(\"type\", `${e.value}`, {\r\n                          expires: 365,\r\n                        });\r\n                        console.log(e.value);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </Paper>\r\n                <Paper elevation={0} style={{ backgroundColor: \"transparent\" }}></Paper>\r\n                <Paper elevation={0} className={classes.paperTableHeight}>\r\n                  <TableContainer style={{ overflowX: \"hidden\" }}>\r\n                    <Table stickyHeader>\r\n                      <div className={classNames(\"row with_label\", classes.borderAll)}>\r\n                        <div\r\n                          className={\r\n                            display ? classNames(\"col-md-6\", classes.borderFor) : classNames(\"col-md-12\", classes.borderFor)\r\n                          }\r\n                        >\r\n                          <Formik\r\n                            enableReinitialize\r\n                            initialValues={{\r\n                              title: \"\",\r\n                              description: \"\",\r\n                              Notification: \"\",\r\n                            }}\r\n                            validate={(values) => FeildManageValidatorNotification(values)}\r\n                            validateOnChange\r\n                            onSubmit={Submit}\r\n                          >\r\n                            {(formikBag) => {\r\n                              return (\r\n                                <Form>\r\n                                  <div>\r\n                                    <Field name=\"title\">\r\n                                      {({ field }) => (\r\n                                        <div className=\"form-group mt-4 mx-3\">\r\n                                          <label htmlFor=\"title\">Notification Title</label>\r\n                                          <Input\r\n                                            {...field}\r\n                                            type=\"text\"\r\n                                            className=\"form-control py-5\"\r\n                                            value={formikBag.values.title}\r\n                                            // required\r\n                                            onChange={(e) => {\r\n                                              console.log(formikBag);\r\n                                              formikBag.setFieldValue(\"title\", e.target.value);\r\n                                            }}\r\n                                            error={\r\n                                              formikBag.touched.title && formikBag.errors.title ? formikBag.errors.title : null\r\n                                            }\r\n                                          />\r\n                                        </div>\r\n                                      )}\r\n                                    </Field>\r\n                                  </div>\r\n\r\n                                  <div>\r\n                                    <Field name=\"description\">\r\n                                      {({ field }) => (\r\n                                        <div className=\"mt-4 mx-3\">\r\n                                          <label>Notification Description</label>\r\n                                          <TextArea\r\n                                            {...field}\r\n                                            type=\"text\"\r\n                                            rows=\"10\"\r\n                                            value={formikBag.values.description}\r\n                                            className=\"form-control\"\r\n                                            onChange={(e) => {\r\n                                              formikBag.setFieldValue(\"description\", e.target.value);\r\n                                            }}\r\n                                            error={\r\n                                              formikBag.touched.description && formikBag.errors.description\r\n                                                ? formikBag.errors.description\r\n                                                : null\r\n                                            }\r\n                                          />\r\n                                        </div>\r\n                                      )}\r\n                                    </Field>\r\n                                  </div>\r\n                                  <div\r\n                                    // className=\"d-flex justify-content-around align-items-center\"\r\n                                    className={\r\n                                      // type === \"USER\"\r\n                                      //   ? \"d-flex justify-content-around align-items-center\"\r\n                                      //   : \"d-flex justify-content-center align-items-center\"\r\n                                      \"d-flex justify-content-around align-items-cente my-4\"\r\n                                    }\r\n                                  >\r\n                                    <div className=\"d-flex mx-2\">\r\n                                      <Field\r\n                                        type=\"radio\"\r\n                                        name=\"Notification\"\r\n                                        value=\"All\"\r\n                                        style={{\r\n                                          width: 20,\r\n                                          height: 20,\r\n                                          borderRadius: 5,\r\n                                          borderColor: \"#d3d3d3\",\r\n                                          borderStyle: \"solid\",\r\n                                          borderWidth: 1,\r\n                                          paddingInlineStart: 10,\r\n                                        }}\r\n                                        onClick={() => {\r\n                                          setDisplay(false);\r\n                                        }}\r\n                                      />\r\n                                      <label className=\"ml-1\">All</label>\r\n                                    </div>\r\n\r\n                                    <div\r\n                                      className={\r\n                                        // type === \"USER\" ? \"d-flex\" : \"d-none\"\r\n                                        \"d-flex\"\r\n                                      }\r\n                                    >\r\n                                      <Field\r\n                                        type=\"radio\"\r\n                                        name=\"Notification\"\r\n                                        value=\"Android\"\r\n                                        style={{\r\n                                          width: 20,\r\n                                          height: 20,\r\n                                          borderRadius: 5,\r\n                                          borderColor: \"#d3d3d3\",\r\n                                          borderStyle: \"solid\",\r\n                                          borderWidth: 1,\r\n                                          paddingInlineStart: 10,\r\n                                        }}\r\n                                        onClick={() => {\r\n                                          setDisplay(false);\r\n                                        }}\r\n                                      />\r\n                                      <label className=\"ml-1\">Android</label>\r\n                                    </div>\r\n                                    <div\r\n                                      className={\r\n                                        // type === \"USER\" ? \"d-flex\" : \"d-none\"\r\n                                        \"d-flex\"\r\n                                      }\r\n                                    >\r\n                                      <Field\r\n                                        type=\"radio\"\r\n                                        name=\"Notification\"\r\n                                        value=\"iOS\"\r\n                                        style={{\r\n                                          width: 20,\r\n                                          height: 20,\r\n                                          borderRadius: 5,\r\n                                          borderColor: \"#d3d3d3\",\r\n                                          borderStyle: \"solid\",\r\n                                          borderWidth: 1,\r\n                                          paddingInlineStart: 10,\r\n                                        }}\r\n                                        onClick={() => {\r\n                                          setDisplay(false);\r\n                                        }}\r\n                                      />\r\n                                      <label className=\"ml-1\">iOS</label>\r\n                                    </div>\r\n\r\n                                    {/* <div className=\"d-flex \"><Field type=\"radio\"   name=\"Notification\"     value=\"Web\"     style={{ width: 20, height: 20 ,borderRadius:5,borderColor:\"#d3d3d3\",borderStyle:\"solid\",borderWidth:1,paddingInlineStart:10 }} onClick={()=>{setDisplay(false)}}/><label className=\"ml-1\">Web</label></div> */}\r\n                                    <div className=\"d-flex mx-2\">\r\n                                      <Field\r\n                                        type=\"radio\"\r\n                                        name=\"Notification\"\r\n                                        value=\"individual\"\r\n                                        style={{\r\n                                          width: 20,\r\n                                          height: 20,\r\n                                          borderRadius: 5,\r\n                                          borderColor: \"#d3d3d3\",\r\n                                          borderStyle: \"solid\",\r\n                                          borderWidth: 1,\r\n                                          paddingInlineStart: 10,\r\n                                        }}\r\n                                        onClick={() => {\r\n                                          setDisplay(true);\r\n                                        }}\r\n                                      />\r\n                                      <label className=\"ml-1\">Individual</label>\r\n                                    </div>\r\n                                    <div\r\n                                      style={{\r\n                                        color: \"red\",\r\n                                        display: \"block\",\r\n                                      }}\r\n                                    >\r\n                                      {formikBag.errors.Notification ? formikBag.errors.Notification : null}\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"text-center\">\r\n                                    <button\r\n                                      type=\"submit\"\r\n                                      style={{\r\n                                        backgroundColor: \"#006FFF\",\r\n                                        color: \"#fff\",\r\n                                        // borderColor: \"#006FFF\",\r\n                                      }}\r\n                                      className=\"btn\"\r\n                                    >\r\n                                      Send Notification\r\n                                    </button>\r\n                                  </div>\r\n                                  <br />\r\n\r\n                                  <br />\r\n                                </Form>\r\n                              );\r\n                            }}\r\n                          </Formik>\r\n                        </div>\r\n\r\n                        {display && (\r\n                          <div className={classNames(\"col-md-6 \", classes.borderFor)}>\r\n                            <div className={classNames(classes.container, \"mt-4\")}>\r\n                              <Paper className={classes.searchBox}>\r\n                                <SearchBar\r\n                                  style={{ width: \"97%\", boxShadow: \"none\" }}\r\n                                  // value={searched}\r\n                                  placeholder={type === \"USER\" ? \"Search by User Name\" : \"Search by Driver Name\"}\r\n                                  onChange={(searchVal) => SearchUser(searchVal)}\r\n                                  onCancelSearch={() => cancelSearch()}\r\n                                  className={classes.searchHeight}\r\n                                />\r\n                              </Paper>\r\n                              <TableContainer\r\n                                className={classNames(\"mt-3\")}\r\n                                style={{\r\n                                  overflowY: \"scroll\",\r\n                                  overflowX: \"hidden\",\r\n                                  height: \"63vh\",\r\n                                }}\r\n                              >\r\n                                <Table stickyHeader>\r\n                                  <TableHead>\r\n                                    <TableRow>\r\n                                      <TableCell className={classes.textMiddle}></TableCell>\r\n                                      <TableCell className={classes.textRight}>\r\n                                        <div>\r\n                                          <b style={{ color: \"#B0B0B0\" }}>Select All</b>\r\n                                        </div>\r\n                                      </TableCell>\r\n                                      <TableCell className={classes.textMiddle}>\r\n                                        {console.log(users)}\r\n                                        <Checkbox\r\n                                          color=\"primary\"\r\n                                          // indeterminate={numSelected > 0 && numSelected < data.length  }\r\n                                          indeterminate={selected.length > 0 && selected.length < users.length}\r\n                                          checked={users.length > 0 && selected.length === users.length}\r\n                                          onChange={handleSelectAllClick}\r\n                                        />\r\n                                      </TableCell>\r\n                                    </TableRow>\r\n                                  </TableHead>\r\n                                  <TableBody>\r\n                                    {users\r\n                                      // .slice(\r\n                                      //   page * rowsPerPage,\r\n                                      //   page * rowsPerPage + rowsPerPage\r\n                                      // )\r\n                                      .map((user, index) => {\r\n                                        const isItemSelected = isSelected(user._id);\r\n\r\n                                        return (\r\n                                          <TableRow\r\n                                            key={user._id}\r\n                                            hover\r\n                                            onClick={(event) => handleClick(event, user._id)}\r\n                                            role=\"checkbox\"\r\n                                            tabIndex={-1}\r\n                                            selected={isItemSelected}\r\n                                          >\r\n                                            <TableCell component=\"th\" scope=\"row\" className={classes.textMiddle}>\r\n                                              {/* <BsPersonFill className={classes.personIcon}/> */}\r\n                                              {/* <img src={get(user,\"profile_image\",\"\")} alt=\"profile\" style={{width:\"30px\",height:\"30px\"}}/> */}\r\n                                              {/* <AccountCircleIcon />\r\n                                               */}\r\n                                              {type == \"DRIVER\" ? (\r\n                                                <img\r\n                                                  src={get(\r\n                                                    user,\r\n                                                    \"driver.profileImage\",\r\n                                                    \"https://upload.wikimedia.org/wikipedia/commons/9/99/Sample_User_Icon.png\"\r\n                                                  )}\r\n                                                  alt=\"profile\"\r\n                                                  style={{ width: \"30px\", height: \"30px\", borderRadius: \"50%\" }}\r\n                                                />\r\n                                              ) : (\r\n                                                <img\r\n                                                  src={get(\r\n                                                    user,\r\n                                                    \"profileImage\",\r\n                                                    \"https://upload.wikimedia.org/wikipedia/commons/9/99/Sample_User_Icon.png\"\r\n                                                  )}\r\n                                                  alt=\"profile\"\r\n                                                  style={{ width: \"30px\", height: \"30px\", borderRadius: \"50%\" }}\r\n                                                />\r\n                                              )}\r\n                                            </TableCell>\r\n                                            <TableCell className={classes.textMiddle}>\r\n                                              {type === \"USER\" ? get(user, \"username\", \"\") : get(user, \"driver.username\", \"\")}\r\n                                            </TableCell>\r\n                                            <TableCell className={classes.textMiddle}>\r\n                                              <Checkbox color=\"primary\" checked={isItemSelected} />\r\n                                            </TableCell>\r\n                                          </TableRow>\r\n                                        );\r\n                                      })}\r\n                                  </TableBody>\r\n                                </Table>\r\n                              </TableContainer>\r\n                              <TablePagination\r\n                                // rowsPerPageOptions={[10, 25, 100]}\r\n                                component=\"div\"\r\n                                count={totalUserListCount}\r\n                                rowsPerPage={rowsPerPage}\r\n                                page={page}\r\n                                onPageChange={handleChangePage}\r\n                                onRowsPerPageChange={handleChangeRowsPerPage}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </Paper>\r\n              </div>\r\n            </div>\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Notification_Management;\r\n"],"sourceRoot":""}