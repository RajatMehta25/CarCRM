{"version":3,"sources":["../node_modules/react-spinners/helpers/unitConverter.js","../node_modules/react-spinners/helpers/animation.js","../node_modules/react-spinners/BeatLoader.js","components/Select.js","pages/GiftCardManagement/GiftCardManagement.js"],"names":["Object","defineProperty","exports","value","cssValue","parseLengthAndUnit","cssUnit","cm","mm","in","px","pt","pc","em","ex","ch","rem","vw","vh","vmin","vmax","size","unit","valueString","match","toString","includes","parseFloat","parseInt","console","warn","concat","lengthWithunit","createAnimation","loaderName","frames","suffix","animationName","window","document","styleEl","createElement","head","appendChild","styleSheet","sheet","keyFrames","insertRule","__assign","this","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__createBinding","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__setModuleDefault","v","__importStar","mod","result","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","require","unitConverter_1","beat","default","_a","_b","loading","_c","color","_d","speedMultiplier","_e","cssOverride","_f","_g","margin","additionalprops","wrapper","display","style","backgroundColor","width","height","borderRadius","animation","animationFillMode","SelectInput","props","error","isClearable","isSearchable","paddingTop","fontSize","useStyles","makeStyles","theme","root","flexWrap","spacing","extendedIcon","marginRight","paperHeading","padding","table","minWidth","textMiddle","verticalAlign","iconMargin","iconcolor","headingButton","flexDirection","justifyContent","headingAlignment","alignItems","gap","textAlign","Marginbutton","container","paperPaddingRightLeft","styled","Switch","focusVisibleClassName","disableRipple","transitionDuration","transform","palette","mode","opacity","border","grey","boxSizing","transition","transitions","duration","BannerManagement","classes","useState","rselKey","setRselKey","nameEnglish","nameChinese","nameKorean","nameSpanish","category","file1","ImageLink","_id","selectedCard","setSelectedCard","selectedCategory","setSelectedCategory","CategoryOrCard","setCategoryOrCard","On","Off","OnOffButtonColor","setOnOffButtonColor","categoryList","setCategoryList","categoryListAll","setCategoryListAll","tableData","setTableData","OldtableData","setOldTableData","isLoading","setIsLoading","page","setPage","rowsPerPage","setRowsPerPage","totalUserListCount","settotalUserListCount","limit","search","setSearch","useUploadImage","ImageUploadUrl","uploadForm","isSuccess","progress","selectedBannerData","isAddEditCategory","isAddEditCard","modalState","setModalState","useEffect","getCategoriesContent","getCategoriesList","a","axios","data","log","status","timer","d","myDeb","toLowerCase","imageVerificationAlert","condition","Swal","fire","customClass","icon","title","text","addNew","values","post","languages","lang","image","categorieId","toast","success","message","position","POSITION","TOP_RIGHT","Edit","listing","map","ele","label","toUpperCase","l2","slice","unshift","DeleteCard","id","delete","DeleteCategory","Fragment","className","Paper","elevation","classNames","onChange","searchVal","searchedVal","filteredRows","filter","row","name","categories","requestSearch","onCancelSearch","placeholder","inputProps","maxLength","flex","cursor","onClick","visibility","zIndex","fontWeight","key","options","defaultValue","newdata","Tooltip","arrow","IconButton","TableContainer","minHeight","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","index","hover","component","scope","moment","createdAt","format","textTransform","whiteSpace","Button","DeleteOutline","overflow","small","large","alt","hideDownload","hideZoom","NoDataFound","TextToDisplay","Loading","TablePagination","bottom","right","rowsPerPageOptions","count","onPageChange","event","newPage","onRowsPerPageChange","target","maxWidth","isOpen","onClose","reason","backgroundModal","backgroundModalContent","fontFamily","top","content","enableReinitialize","initialValues","validate","handleValidateAddEditCard","onSubmit","formikBag","field","Select","setFieldValue","touched","errors","type","accept","files","file","img","Image","URL","createObjectURL","src","onload","handleValidateAddEditCategory"],"mappings":"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","file":"static/js/18.d81b02f8.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cssValue = exports.parseLengthAndUnit = void 0;\nvar cssUnit = {\n    cm: true,\n    mm: true,\n    in: true,\n    px: true,\n    pt: true,\n    pc: true,\n    em: true,\n    ex: true,\n    ch: true,\n    rem: true,\n    vw: true,\n    vh: true,\n    vmin: true,\n    vmax: true,\n    \"%\": true,\n};\n/**\n * If size is a number, append px to the value as default unit.\n * If size is a string, validate against list of valid units.\n * If unit is valid, return size as is.\n * If unit is invalid, console warn issue, replace with px as the unit.\n *\n * @param {(number | string)} size\n * @return {LengthObject} LengthObject\n */\nfunction parseLengthAndUnit(size) {\n    if (typeof size === \"number\") {\n        return {\n            value: size,\n            unit: \"px\",\n        };\n    }\n    var value;\n    var valueString = (size.match(/^[0-9.]*/) || \"\").toString();\n    if (valueString.includes(\".\")) {\n        value = parseFloat(valueString);\n    }\n    else {\n        value = parseInt(valueString, 10);\n    }\n    var unit = (size.match(/[^0-9]*$/) || \"\").toString();\n    if (cssUnit[unit]) {\n        return {\n            value: value,\n            unit: unit,\n        };\n    }\n    console.warn(\"React Spinners: \".concat(size, \" is not a valid css value. Defaulting to \").concat(value, \"px.\"));\n    return {\n        value: value,\n        unit: \"px\",\n    };\n}\nexports.parseLengthAndUnit = parseLengthAndUnit;\n/**\n * Take value as an input and return valid css value\n *\n * @param {(number | string)} value\n * @return {string} valid css value\n */\nfunction cssValue(value) {\n    var lengthWithunit = parseLengthAndUnit(value);\n    return \"\".concat(lengthWithunit.value).concat(lengthWithunit.unit);\n}\nexports.cssValue = cssValue;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createAnimation = void 0;\nvar createAnimation = function (loaderName, frames, suffix) {\n    var animationName = \"react-spinners-\".concat(loaderName, \"-\").concat(suffix);\n    if (typeof window == \"undefined\" || !window.document) {\n        return animationName;\n    }\n    var styleEl = document.createElement(\"style\");\n    document.head.appendChild(styleEl);\n    var styleSheet = styleEl.sheet;\n    var keyFrames = \"\\n    @keyframes \".concat(animationName, \" {\\n      \").concat(frames, \"\\n    }\\n  \");\n    if (styleSheet) {\n        styleSheet.insertRule(keyFrames, 0);\n    }\n    return animationName;\n};\nexports.createAnimation = createAnimation;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nvar unitConverter_1 = require(\"./helpers/unitConverter\");\nvar animation_1 = require(\"./helpers/animation\");\nvar beat = (0, animation_1.createAnimation)(\"BeatLoader\", \"50% {transform: scale(0.75);opacity: 0.2} 100% {transform: scale(1);opacity: 1}\", \"beat\");\nfunction BeatLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.size, size = _f === void 0 ? 15 : _f, _g = _a.margin, margin = _g === void 0 ? 2 : _g, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"size\", \"margin\"]);\n    var wrapper = __assign({ display: \"inherit\" }, cssOverride);\n    var style = function (i) {\n        return {\n            display: \"inline-block\",\n            backgroundColor: color,\n            width: (0, unitConverter_1.cssValue)(size),\n            height: (0, unitConverter_1.cssValue)(size),\n            margin: (0, unitConverter_1.cssValue)(margin),\n            borderRadius: \"100%\",\n            animation: \"\".concat(beat, \" \").concat(0.7 / speedMultiplier, \"s \").concat(i % 2 ? \"0s\" : \"\".concat(0.35 / speedMultiplier, \"s\"), \" infinite linear\"),\n            animationFillMode: \"both\",\n        };\n    };\n    if (!loading) {\n        return null;\n    }\n    return (React.createElement(\"span\", __assign({ style: wrapper }, additionalprops),\n        React.createElement(\"span\", { style: style(1) }),\n        React.createElement(\"span\", { style: style(2) }),\n        React.createElement(\"span\", { style: style(3) })));\n}\nexports.default = BeatLoader;\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nfunction SelectInput(props) {\r\n  const { error } = props;\r\n  return (\r\n    <div>\r\n      <Select\r\n        isClearable={false}\r\n        isSearchable={false}\r\n        // formatCreateLabel={(userInput) => `${userInput} (Add New Address)`}\r\n        {...props}\r\n      />\r\n      {error ? (\r\n        <p style={{ paddingTop: 5, fontSize: 13, color: \"red\" }}>{error}</p>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectInput;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport classNames from \"classnames\";\r\nimport axios from \"../../axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// import Switch from '@mui/material/Switch';\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n// import { styled } from '@mui/material/styles';\r\n// import Skeleton from \"react-loading-skeleton\";\r\n// import \"react-loading-skeleton/dist/skeleton.css\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Switch,\r\n  styled,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\n\r\n// import { Delete } from '@material-ui/icons';\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport BlockIcon from \"@material-ui/icons/Block\";\r\n// import ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n\r\n// For Table\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport { orderBy, get } from \"lodash\";\r\n\r\n//history\r\nimport { useHistory } from \"react-router-dom\";\r\n// import AddEditCategory from \"../AccountManagement/Account_Details\";\r\n\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { DeleteOutline, WidgetsOutlined } from \"@material-ui/icons\";\r\nimport ModalImage from \"react-modal-image\";\r\nimport { Input, Modal } from \"../../components/index\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport { useUploadImage } from \"../../services/Imagecustomhook\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Axios from \"axios\";\r\nimport { handleValidateAddEditCard ,handleValidateAddEditCategory} from \"../../utils/validators\";\r\nimport NoDataFound from \"../../components/NoDataFound\";\r\nimport PuffLoader from \"react-spinners/PuffLoader\";\r\nimport { ImageUploadUrl } from \"../../statics/constants\";\r\nimport GiftCardManagement3 from \"../GiftCardManagement/GiftCardManagement3\"\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\nimport SelectInput from \"../../components/Select\";\r\nimport RSelect from \"react-select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexWrap: \"wrap\",\r\n    // marginTop: '5rem',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  paperHeading: {\r\n    padding: \"0rem 0rem\",\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  textMiddle: {\r\n    verticalAlign: \"middle !important\",\r\n  },\r\n  iconMargin: {\r\n    margin: \"0.5rem\",\r\n    color: \"#fff\",\r\n    backgroundColor: \"#696969\",\r\n  },\r\n  iconcolor: {\r\n    margin: \"0.5rem\",\r\n    color: \"#fff\",\r\n    backgroundColor: \"#0e3f37 !important\",\r\n  },\r\n  headingButton: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    padding: \"10px\",\r\n  },\r\n  headingAlignment: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    // padding: \"0 2rem 0 2rem\"\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n    [\"@media (max-width:780px)\"]: {\r\n      // eslint-disable-line no-useless-computed-key\r\n      flexDirection: \"column\",\r\n      width: \"100%\",\r\n      gap: \"1rem\",\r\n      justifyContent: \"center\",\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n  Marginbutton: {\r\n    margin: \"0.5rem\",\r\n  },\r\n  container: {\r\n    // maxHeight: \"58vh\",\r\n    // height:\"auto\"\r\n  },\r\n  paperPaddingRightLeft: {\r\n    padding: \"0rem 1rem\",\r\n  },\r\n}));\r\n\r\nconst IOSSwitch = styled((props) => <Switch focusVisibleClassName=\".Mui-focusVisible\" disableRipple {...props} />)(\r\n  ({ theme }) => ({\r\n    width: 42,\r\n    height: 26,\r\n    padding: 0,\r\n    \"& .MuiSwitch-switchBase\": {\r\n      padding: 0,\r\n      margin: 2,\r\n      transitionDuration: \"300ms\",\r\n      \"&.Mui-checked\": {\r\n        transform: \"translateX(16px)\",\r\n        color: \"#fff\",\r\n        \"& + .MuiSwitch-track\": {\r\n          backgroundColor: theme.palette.mode === \"dark\" ? \"#32cd32\" : \"#32cd32\",\r\n          opacity: 1,\r\n          border: 0,\r\n        },\r\n        \"&.Mui-disabled + .MuiSwitch-track\": {\r\n          opacity: 0.5,\r\n        },\r\n      },\r\n      \"&.Mui-focusVisible .MuiSwitch-thumb\": {\r\n        color: \"#33cf4d\",\r\n        border: \"6px solid #fff\",\r\n      },\r\n      \"&.Mui-disabled .MuiSwitch-thumb\": {\r\n        color: theme.palette.mode === \"light\" ? theme.palette.grey[100] : theme.palette.grey[600],\r\n      },\r\n      \"&.Mui-disabled + .MuiSwitch-track\": {\r\n        opacity: theme.palette.mode === \"light\" ? 0.7 : 0.3,\r\n      },\r\n    },\r\n    \"& .MuiSwitch-thumb\": {\r\n      boxSizing: \"border-box\",\r\n      width: 22,\r\n      height: 22,\r\n    },\r\n    \"& .MuiSwitch-track\": {\r\n      borderRadius: 26 / 2,\r\n      backgroundColor: theme.palette.mode === \"light\" ? \"#E9E9EA\" : \"#f70f07\",\r\n      opacity: 1,\r\n      transition: theme.transitions.create([\"background-color\"], {\r\n        duration: 500,\r\n      }),\r\n    },\r\n  })\r\n);\r\n\r\nexport default function BannerManagement(props) {\r\n  const classes = useStyles();\r\n  const [rselKey, setRselKey] = useState(0);\r\n  // const history=useHistory();\r\n// const [selectedCard,setSelectedCard]=useState( {\r\n                \r\n//   name:\"\",\r\n//   category:\"\",\r\n//   file1: \"\",\r\n//   // ImageLink: get(selectedBannerData, \"image\", \"\"),\r\n//   ImageLink:\"\",\r\n//   _id:\"\"\r\n//   })\r\nconst [selectedCard,setSelectedCard]=useState( {\r\n                \r\n  nameEnglish:\"\",\r\n  nameChinese:\"\",\r\n  nameKorean:\"\",\r\n  nameSpanish:\"\",\r\n  category:\"\",\r\n  file1: \"\",\r\n  // ImageLink: get(selectedBannerData, \"image\", \"\"),\r\n  ImageLink:\"\",\r\n  _id:\"\"\r\n  }) \r\n  const [selectedCategory,setSelectedCategory]=useState( {\r\n                \r\n    nameEnglish:\"\",\r\n    nameChinese:\"\",\r\n    nameKorean:\"\",\r\n    nameSpanish:\"\",\r\n    _id:\"\"\r\n    }) \r\n  \r\n  const [CategoryOrCard, setCategoryOrCard] = useState(1);\r\n  const [OnOffButtonColor, setOnOffButtonColor] = useState({\r\n    On: true,\r\n    Off: false,\r\n  });\r\n  const [categoryList,setCategoryList]=useState([])\r\n  const [categoryListAll,setCategoryListAll]=useState([])\r\nconst[htmlContent,setHTMLContent]=useState()\r\n  const [tableData, setTableData] = useState([]);\r\n  const [OldtableData, setOldTableData] = useState([]);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // status switch\r\n  // const [checked, setChecked] = useState(true);\r\n\r\n  // For Pagination\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [totalUserListCount, settotalUserListCount] = useState(4);\r\n  const [limit, setLimit] = useState(10);\r\n  const [search, setSearch] = useState(\"\");\r\n  //\r\n  const { isSuccess, uploadForm, progress } = useUploadImage(`${ImageUploadUrl}/fileUpload`);\r\n  const [selectedBannerData, setSelectedBannerData] = useState(null);\r\n  const [modalState, setModalState] = useState({\r\n    isAddEditCategory: \"\",\r\n    isAddEditCard:\"\"\r\n  });\r\n  //\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    // console.log(event);\r\n    // console.log(newPage);\r\n    // console.log(newPage);\r\n    // console.log({ event, newPage });\r\n    // getCategoriesContent(newPage + 1, rowsPerPage, search);\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    // getCategoriesContent(0, event.target.value, search);\r\n    // setRowsPerPage(parseInt(event.target.value, 10));\r\n    // console.log({ event });\r\n    // setPage(0);\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCategoriesContent();\r\n    getCategoriesList()\r\n    setRselKey((k) => k + 1);\r\n  }, [CategoryOrCard]);\r\n\r\n  //get content\r\n  const getCategoriesContent = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n     \r\n      const { data } = await axios.get(\r\n        \r\n        CategoryOrCard==1? `/private/giftCardCategorieList`: `/private/giftCardList`\r\n      );\r\n      \r\n      console.log(data);\r\n      setTableData([...data.data]);\r\n      setOldTableData([...data.data]);\r\n      //   setSearchedData(data.data.docs);\r\n      setSearch(search);\r\n      settotalUserListCount(data.data.length);\r\n      setIsLoading(false);\r\n      if (data.data.length === 0 || data.status === 500) {\r\n        // toast.error(\"No Data Found\", {\r\n        //   position: toast.POSITION.TOP_RIGHT,\r\n        // });\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  // edit category itself\r\n\r\n  const EditBanner = (category) => {\r\n    props.history.push({\r\n      pathname: \"/adminPanel/AddEditBanner\",\r\n      state: category,\r\n    });\r\n  };\r\n\r\n  //edit  categories attribute\r\n\r\n  const EditAttributeContent = (category) => {\r\n    console.log(tableData);\r\n    props.history.push({\r\n      pathname: \"/EditCategoryAttributes\",\r\n      state: category,\r\n    });\r\n\r\n    // delete category\r\n  };\r\n  const DeleteBanner = async (category) => {\r\n    try {\r\n      Swal.fire({\r\n        title: \"Are you sure?\",\r\n        text: \"You won't be able to revert this!\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, delete it!\",\r\n      }).then(async (result) => {\r\n        if (result.isConfirmed) {\r\n          const { data } = await axios.delete(\r\n            `/private/banner/${category._id}`\r\n            // , {\r\n            // icon: category.icon,\r\n            // title: category.title,\r\n            // }\r\n          );\r\n          console.log(data);\r\n          getCategoriesContent();\r\n          toast.success(\"Deleted\", {\r\n            position: toast.POSITION.TOP_RIGHT,\r\n          });\r\n          // Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n        } else {\r\n          toast.error(\"You have cancelled the operation\", {\r\n            position: toast.POSITION.TOP_RIGHT,\r\n          });\r\n        }\r\n      });\r\n      // if (window.confirm(\"Are you sure you want to delete this Banner?\")) {\r\n      //   const { data } = await axios.delete(\r\n      //     `/private/banner/${category._id}`\r\n      //     // , {\r\n      //     // icon: category.icon,\r\n      //     // title: category.title,\r\n      //     // }\r\n      //   );\r\n      //   console.log(data);\r\n      //   getCategoriesContent();\r\n      //   toast.success(\"Deleted\", {\r\n      //     position: toast.POSITION.TOP_RIGHT,\r\n      //   });\r\n      // } else {\r\n      //   toast.error(\"You have cancelled the operation\", {\r\n      //     position: toast.POSITION.TOP_RIGHT,\r\n      //   });\r\n      // }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(error, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    }\r\n  };\r\n\r\n  // status switch\r\n\r\n  const statusSwitch = async (e, category) => {\r\n    try {\r\n      //   console.log(id);\r\n\r\n      const { data } = await axios.put(`/private/banner/${category._id}`, {\r\n        // percentage: category.percentage,\r\n        isActive: e.target.checked,\r\n      });\r\n      // props.history.push({\r\n      //     pathname: \"/Category_Management\",\r\n      //   });\r\n\r\n      getCategoriesContent();\r\n      toast.success(data.message, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // For Search\r\n  const [searched, setSearched] = useState(\"\");\r\n  const [searchedData, setSearchedData] = useState([]);\r\n\r\n  \r\n\r\n  const cancelSearch = () => {\r\n    getCategoriesContent();\r\n    // setSearched(\"\");\r\n    //  console.log(searchedData);\r\n    //  requestSearch()\r\n  };\r\n  const EditPetCategory = (category) => {\r\n    props.history.push({\r\n      pathname: \"/adminPanel/AddEditPetCategory\",\r\n      state: category,\r\n    });\r\n  };\r\n\r\n  const BlockPackageCategory = async (id) => {\r\n    if (window.confirm(\"Are you sure you want to block this package category?\")) {\r\n      try {\r\n        // console.log(category);\r\n        const { data } = await axios.delete(`/private/courierCategory/${id}?status=block`);\r\n        console.log(data);\r\n        getCategoriesContent(page, limit, search);\r\n        toast.success(\"Package Blocked\", {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      toast.error(\"Operation Cancelled\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    }\r\n  };\r\n\r\n  const UnBlockPackageCategory = async (id) => {\r\n    if (window.confirm(\"Are you sure you want to unblock this package category?\")) {\r\n      try {\r\n        // console.log(category);\r\n        const { data } = await axios.delete(`/private/courierCategory/${id}?status=unblock`);\r\n        console.log(data);\r\n        getCategoriesContent(page, limit, search);\r\n        toast.success(\"Package Unblocked\", {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      toast.error(\"Operation Cancelled\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    }\r\n  };\r\n  const getPackageFare = async () => {\r\n    try {\r\n      const { data } = await axios.get(`/private/courier`);\r\n      props.history.push({\r\n        pathname: \"/adminPanel/FarePackage\",\r\n        state: data.data,\r\n      });\r\n      console.log(data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  function myDeb(call, d = 1000) {\r\n    let timer;\r\n    return function (...args) {\r\n      clearTimeout(timer);\r\n      timer = setTimeout(() => {\r\n        call(...args);\r\n      }, d);\r\n    };\r\n  }\r\n\r\n  const SearchPackage = myDeb((search) => {\r\n    getCategoriesContent(page, limit, search.toLowerCase());\r\n  });\r\n\r\n  const sortData = () => {\r\n    let data = tableData.sort((objA, objB) => new Date(objB.createdAt) - new Date(objA.createdAt));\r\n    return data;\r\n  };\r\n  const imageVerificationAlert = (condition) => {\r\n    if (condition) {\r\n      Swal.fire({\r\n        customClass: {\r\n          container: \"my_swal\",\r\n        },\r\n        icon: \"success\",\r\n        title: \"Success.\",\r\n        text: \"Image Dimensions Accepted!\",\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        customClass: {\r\n          container: \"my_swal\",\r\n        },\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: \"Image Dimensions not Accepted!\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const addNew = async (values) => {\r\n    if(CategoryOrCard==0){\r\n    try {\r\n      console.log(values);\r\n\r\n      const { data } = await axios.post(`/private/giftCardAddEdit`, {\r\n  //  title:values.name,\r\n  languages: [\r\n    {\r\n        lang:\"en\",\r\n        title:values.nameEnglish\r\n    },\r\n     {\r\n        lang:\"zh\",\r\n        title:values.nameChinese\r\n    },\r\n     {\r\n        lang:\"ko\",\r\n        title:values.nameKorean\r\n     },\r\n     {\r\n        lang:\"es\",\r\n        title:values.nameSpanish\r\n    }\r\n],\r\n   image:values.ImageLink,\r\n   categorieId:values.category.value\r\n     }\r\n      );\r\n    \r\n     \r\n      getCategoriesContent();\r\n      toast.success(data.message, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n      // setSelectedBannerData(\"\");\r\n      setSelectedCard({\r\n                \r\n        // name:\"\",\r\n        nameEnglish:\"\",\r\n  nameChinese:\"\",\r\n  nameKorean:\"\",\r\n  nameSpanish:\"\",\r\n        category:\"\",\r\n        file1: \"\",\r\n        // ImageLink: get(selectedBannerData, \"image\", \"\"),\r\n        ImageLink:\"\",\r\n        _id:\"\"\r\n        })\r\n      setModalState({ isAddEditCard: false });\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }}else{\r\n      try {\r\n        console.log(values);\r\n  \r\n        const { data } = await axios.post(`/private/giftCardCategorieAddEdit`, {\r\n    //  title:values.name,\r\n    data: [\r\n      {\r\n          lang:\"en\",\r\n          title:values.nameEnglish\r\n      },\r\n       {\r\n          lang:\"zh\",\r\n          title:values.nameChinese\r\n      },\r\n       {\r\n          lang:\"ko\",\r\n          title:values.nameKorean\r\n       },\r\n       {\r\n          lang:\"es\",\r\n          title:values.nameSpanish\r\n      }\r\n  ],\r\n    \r\n       }\r\n        );\r\n      \r\n        setModalState({ isAddEditCategory: false });\r\n        getCategoriesContent();\r\n        toast.success(data.message, {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n        // setSelectedBannerData(\"\");\r\n        setSelectedCategory({\r\n          nameEnglish:\"\",\r\n          nameChinese:\"\",\r\n          nameKorean:\"\",\r\n          nameSpanish:\"\",\r\n          _id:\"\"\r\n        });\r\n       \r\n        console.log(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n  const Edit = async (values) => {\r\n    if(CategoryOrCard==0){\r\n    try {\r\n      console.log(values);\r\n\r\n      const { data } = await axios.post(`/private/giftCardAddEdit`, {\r\n        _id:values._id,\r\n  //  title:values.name,\r\n  languages: [\r\n    {\r\n        lang:\"en\",\r\n        title:values.nameEnglish\r\n    },\r\n     {\r\n        lang:\"zh\",\r\n        title:values.nameChinese\r\n    },\r\n     {\r\n        lang:\"ko\",\r\n        title:values.nameKorean\r\n     },\r\n     {\r\n        lang:\"es\",\r\n        title:values.nameSpanish\r\n    }\r\n],\r\n   image:values.ImageLink,\r\n   categorieId:values.category.value\r\n     }\r\n      );\r\n    \r\n     \r\n      getCategoriesContent();\r\n      toast.success(data.message, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n      // setSelectedBannerData(\"\");\r\n      setSelectedCard({\r\n                \r\n        // name:\"\",\r\n        nameEnglish:\"\",\r\n  nameChinese:\"\",\r\n  nameKorean:\"\",\r\n  nameSpanish:\"\",\r\n        category:\"\",\r\n        file1: \"\",\r\n        // ImageLink: get(selectedBannerData, \"image\", \"\"),\r\n        ImageLink:\"\",\r\n        _id:\"\"\r\n        })\r\n      setModalState({ isAddEditCard: false });\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }}else{\r\n      try {\r\n        console.log(values);\r\n  \r\n        const { data } = await axios.post(`/private/giftCardCategorieAddEdit`, {\r\n    //  title:values.name,\r\n    data: [\r\n      {\r\n          lang:\"en\",\r\n          title:values.nameEnglish\r\n      },\r\n       {\r\n          lang:\"zh\",\r\n          title:values.nameChinese\r\n      },\r\n       {\r\n          lang:\"ko\",\r\n          title:values.nameKorean\r\n       },\r\n       {\r\n          lang:\"es\",\r\n          title:values.nameSpanish\r\n      }\r\n  ],\r\n    _id:values._id\r\n       }\r\n        );\r\n      \r\n        setModalState({ isAddEditCategory: false });\r\n        getCategoriesContent();\r\n        toast.success(data.message, {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n        // setSelectedBannerData(\"\");\r\n        setSelectedCategory({\r\n                \r\n          // name:\"\",\r\n          nameEnglish:\"\",\r\n  nameChinese:\"\",\r\n  nameKorean:\"\",\r\n  nameSpanish:\"\",\r\n         \r\n          _id:\"\"\r\n          })\r\n      \r\n        console.log(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Edit Category . update api\r\n\r\n//   const EditBannerImage = async (values) => {\r\n//     if (selectedBannerData?.image === values.ImageLink) {\r\n//       try {\r\n//         console.log(values);\r\n\r\n//         const { data } = await axios.put(`/private/banner/${selectedBannerData._id}`, {\r\n//           image: values.ImageLink,\r\n//           isActive: selectedBannerData.isActive,\r\n//           // description: values.description || state.description,\r\n//           // is_active: state.is_active,\r\n//         });\r\n//         getCategoriesContent();\r\n//         toast.success(data.message, {\r\n//           position: toast.POSITION.TOP_RIGHT,\r\n//         });\r\n//         setSelectedBannerData(\"\");\r\n//         setModalState({ isAddEditBanner: false });\r\n//         console.log(data);\r\n//       } catch (error) {\r\n//         console.log(error);\r\n//       }\r\n//     } else {\r\n//       try {\r\n//         console.log(values);\r\n\r\n//         const { data } = await axios.put(`/private/banner/${selectedBannerData._id}`, {\r\n//           image: values.ImageLink,\r\n//           isActive: selectedBannerData.isActive,\r\n//           // description: values.description || state.description,\r\n//           // is_active: state.is_active,\r\n//         });\r\n//         await DeleteImage();\r\n//         getCategoriesContent();\r\n//         toast.success(data.message, {\r\n//           position: toast.POSITION.TOP_RIGHT,\r\n//         });\r\n//         setSelectedBannerData(\"\");\r\n//         setModalState({ isAddEditBanner: false });\r\n//         console.log(data);\r\n//       } catch (error) {\r\n//         console.log(error);\r\n//       }\r\n//     }\r\n//   };\r\n//   const DeleteImage = async () => {\r\n//     let imageID = !selectedBannerData ? \"\" : selectedBannerData?.image.split(\"/\")[3];\r\n//     console.log(imageID);\r\n//     try {\r\n//       const { data } = await Axios.get(`http://18.221.140.83:3000/fileDelete/${imageID}`);\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n\r\nconst getCategoriesList=async()=>{\r\n  const {data}=await axios.get(`/private/giftCardCategorieList`)\r\n  console.log(data)\r\n  let listing =data.data.map((ele)=>({label:(ele.languages[0].title).toUpperCase(),value:ele._id}))\r\n  setCategoryList(listing)\r\n  const l2 = listing.slice()\r\n  l2.unshift({label:\"All\",value:\"All\"})\r\n  setCategoryListAll(l2)\r\n}\r\nconst DeleteCard=async(id)=>{\r\n  const {data}=await axios.delete(`/private/giftCard/${id}`)\r\n  getCategoriesContent();\r\n  toast.success(data.message, {\r\n    position: toast.POSITION.TOP_RIGHT,\r\n  });\r\n}\r\n  const DeleteCategory=async(id)=>{\r\n    const {data}=await axios.delete(`/private/giftCardCategorie/${id}`)\r\n    getCategoriesContent();\r\n    toast.success(data.message, {\r\n      position: toast.POSITION.TOP_RIGHT,\r\n    });\r\n  \r\n  }\r\n\r\n  const requestSearch = (searchedVal) => {\r\n   if(CategoryOrCard==1){\r\n    const filteredRows = OldtableData.filter((row) => {\r\n     \r\n      let category=row.title;\r\n     \r\n      return (\r\n        \r\n        category.toLowerCase().includes(searchedVal.toLowerCase()) \r\n    \r\n      \r\n      );\r\n    });\r\n    setTableData(filteredRows);}else{\r\n      const filteredRows = OldtableData.filter((row) => {\r\n        let name = row.categories.title;\r\n        let category=row.title;\r\n       \r\n        return (\r\n          \r\n        \r\n          name.toLowerCase().includes(searchedVal.toLowerCase())\r\n        \r\n        );\r\n      });\r\n      setTableData(filteredRows);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className={classes.root}>\r\n          <Paper elevation={0} style={{ backgroundColor: \"transparent\" }}>\r\n            <div className={classes.paperPaddingRightLeft}>\r\n              <div className=\"\">\r\n                <Paper\r\n                  elevation={0}\r\n                  style={{ backgroundColor: \"transparent\",padding:\"1rem 0rem\" }}\r\n                  className={classNames(classes.paperHeading, classes.headingAlignment)}\r\n                >\r\n                   <SearchBar\r\n                        // value={searched}\r\n                        style={{  borderRadius: \"25px\" }}\r\n                        className={\"heightfix  \"}\r\n                         onChange={(searchVal) => requestSearch(searchVal)}\r\n                        onCancelSearch={() => cancelSearch()}\r\n                        placeholder={CategoryOrCard==1?\"Search by Category\":\"Seach by Name\"}\r\n                        inputProps={{ maxLength: 30 }}\r\n                      />\r\n                  <div className=\"\">\r\n                    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                      {\" \"}\r\n                      <h5\r\n                        style={{\r\n                          margin: 0,\r\n                          backgroundColor: CategoryOrCard == \"1\" ? \"#006FFF\" : \"#c4c4c4\",\r\n                          transition: \"1s\",\r\n                          color: \"#fff\",\r\n                          flex: 1,\r\n                          width: \"200px\",\r\n                          // fontSize: \"16px\",\r\n                          // borderRadius: \"15px\",\r\n                          // backgroundColor: OnOffButtonColor.On ? \"#006FFF\" : \"\",\r\n                          // width: \"200px\",\r\n                          borderRadius: \"5px 0px 0px 5px\",\r\n                          textAlign: \"center\",\r\n                          padding: \"10px\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        onClick={() => {\r\n                          setOnOffButtonColor({ ...OnOffButtonColor, On: true, Off: false });\r\n                          setCategoryOrCard(1);\r\n                         \r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        {isLoading && OnOffButtonColor.On ? (\r\n                          <BeatLoader color=\"#fff\" />\r\n                        ) : OnOffButtonColor.On ? (\r\n                          `Category (${totalUserListCount})`\r\n                        ) : (\r\n                          `Category`\r\n                        )}\r\n                      </h5>\r\n                      <h5\r\n                        style={{\r\n                          margin: 0,\r\n                          backgroundColor: CategoryOrCard == \"0\" ? \"#006FFF\" : \"#c4c4c4\",\r\n                          transition: \"1s\",\r\n                          color: \"#fff\",\r\n                          flex: 1,\r\n                          // width: \"200px\",\r\n                          width: \"200px\",\r\n                          textAlign: \"center\",\r\n                          borderRadius: \"0px 5px 5px 0px\",\r\n                          // fontSize: \"16px\",\r\n                          // borderRadius: \"15px\",\r\n                          // border: OnOffButtonColor.Off ? \"3px solid #006FFF\" : \"\",\r\n                          padding: \"10px\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        onClick={() => {\r\n                          setOnOffButtonColor({ ...OnOffButtonColor, On: false, Off: true });\r\n                          setCategoryOrCard(0);\r\n                         \r\n                        }}\r\n                      >\r\n                        {isLoading && OnOffButtonColor.Off ? (\r\n                          <BeatLoader color=\"#fff\" />\r\n                        ) : OnOffButtonColor.Off ? (\r\n                          `Gift Cards (${totalUserListCount})`\r\n                        ) : (\r\n                          `Gift Cards`\r\n                        )}\r\n                      </h5>\r\n                    </div>\r\n                  </div>\r\n                  {/* <SearchBar\r\n                    style={{ width: \"30%\", marginTop: 70 }}\r\n                    // value={searched}\r\n                    className=\"heightfix\"\r\n                    onChange={(searchVal) => SearchPackage(searchVal)}\r\n                    onCancelSearch={() => cancelSearch()}\r\n                    placeholder=\"Search by Tip\"\r\n                  /> */}\r\n                  {/* <Button\r\n                    variant=\"contained\"\r\n                    className=\"buttoncss\"\r\n                    style={{ backgroundColor: \"#0059cd\", color: \"#fff\" }}\r\n                    onClick={() => {\r\n                      getPackageFare();\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    <WidgetsOutlined />\r\n                    &nbsp; Manage fare\r\n                  </Button> */}\r\n                  {/* <Button\r\n                    variant=\"contained\"\r\n                    className=\"buttoncss\"\r\n                    style={{ backgroundColor: \"#0059cd\", color: \"#fff\" }}\r\n                    onClick={() => {\r\n                      props.history.push({\r\n                        pathname: \"/adminPanel/AddEditBanner\",\r\n                      });\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    Add Banner\r\n                  </Button> */}\r\n                  {/* <Tooltip title=\"Add Banner\" arrow>\r\n                    <IconButton\r\n                      className=\"buttoncss\"\r\n                      style={{ backgroundColor: \"#006FFF\", color: \"#fff\" }}\r\n                      onClick={() => {\r\n                        props.history.push({\r\n                          pathname: \"/adminPanel/AddEditBanner\",\r\n                        });\r\n                      }}\r\n                    >\r\n                      <AddIcon />\r\n                    </IconButton>\r\n                  </Tooltip> */}\r\n                   <div className=\"\" style={{display:\"flex\",gap:\"0.5rem\",alignItems:\"center\"}}>\r\n                    {/* {\r\n                    CategoryOrCard==0\r\n                    ? */}\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\nvisibility:CategoryOrCard==0?\"visible\":\"hidden\",\r\n                        // position: \"relative\",\r\n                        zIndex: 3,\r\n                      }}\r\n                      className={\"\"}\r\n                    >\r\n                      <span style={{ fontSize: \"16px\", fontWeight: \"700\" }}>Filter By Category :</span>&nbsp;\r\n                      <div className=\"customReactSelect\" style={{ width: \"200px\" }}>\r\n                        <RSelect\r\n                          key={rselKey}\r\n                          options={categoryListAll}\r\n                          isSearchable={false}\r\n                           defaultValue={\r\n                          {label:\"All\",value:\"All\"}\r\n                           }\r\n                          onChange={(e) => {\r\n                            if(e.value==\"All\"){\r\n                              setTableData(OldtableData)\r\n                            }else{\r\n                           let newdata= OldtableData.filter((ele)=>ele.categorieId==e.value)\r\n                            setTableData(newdata)}\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    {/* :\r\n                    false\r\n                    } */}\r\n                  <Tooltip title={<span style={{ color: \"white\", fontSize: \"16px\" }}>{CategoryOrCard==1?\"Add Category\":\"Add Card\"}</span>} arrow>\r\n                    <IconButton\r\n                      className=\"buttoncss \"\r\n                      style={{ backgroundColor: \"#0059cd\", color: \"#fff\" }}\r\n                      onClick={() => {\r\n                        // props.history.push({\r\n                        //   pathname: \"/adminPanel/AddEditBanner\",\r\n                        // });\r\n                        if(CategoryOrCard==1){\r\n                          setModalState({ isAddEditCategory: true });\r\n                        }else{\r\n                          setModalState({ isAddEditCard: true });\r\n                        }\r\n                        // setSelectedBannerData(null);\r\n                        // setModalState({ isAddEditBanner: true });\r\n                      }}\r\n                    >\r\n                      <AddIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  </div>\r\n                </Paper>\r\n\r\n                {/* //new design */}\r\n\r\n                {/* <br /> */}\r\n\r\n                {/* status end */}\r\n\r\n                <Paper>\r\n                  <TableContainer className={classes.container} style={{ minHeight: tableData.length > 0 ? \"50vh\" : \"\" }}>\r\n                   {CategoryOrCard==1? <Table className={classes.table} stickyHeader size=\"small\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell style={{ fontWeight: \"bold\" }}>Sr. No.</TableCell>\r\n                          {/* <TableCell style={{ fontWeight: \"bold\" }}>\r\n                            {\" \"}\r\n                            Tip Name\r\n                          </TableCell> */}\r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Created On</TableCell>\r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Category</TableCell>\r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Card Count</TableCell>\r\n                          {/* <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Image</TableCell> */}\r\n                         \r\n                        \r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Action</TableCell>\r\n                          {/* <TableCell>User Type</TableCell>\r\n                              <TableCell>Status</TableCell> */}\r\n                        </TableRow>\r\n                      </TableHead>\r\n\r\n                      <TableBody>\r\n                        {/* {isLoading ? (\r\n                          <TableRow>\r\n                            <Skeleton\r\n                              style={{ width: \"70vw\", borderRadius: \"20px\" }}\r\n                              highlightColor=\"#fff\"\r\n                              height=\"1rem\"\r\n                              count={2}\r\n                              baseColor=\"#ebebeb\"\r\n                            />\r\n                          </TableRow>\r\n                        ) : (\r\n                          false\r\n                        )} */}\r\n                        {tableData\r\n                          // sortData()\r\n                          .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                          //   .reverse()\r\n                          .map((category, index) => (\r\n                            <TableRow hover key={index}>\r\n                              <TableCell component=\"th\" scope=\"row\" className={classes.textMiddle}>\r\n                                {index + 1 + page * rowsPerPage}\r\n                              </TableCell>\r\n                              <TableCell className={classes.textMiddle} style={{ textAlign: \"center\" }}>\r\n                                {moment(category?.createdAt).format(\"DD/MM/YYYY\")}\r\n                              </TableCell>\r\n                              <TableCell className={classes.textMiddle} style={{ textAlign: \"center\",textTransform:\"uppercase\" }}>\r\n                                {get(category.languages[0],\"title\",\"N/A\")}\r\n                              </TableCell>\r\n                              <TableCell className={classes.textMiddle} style={{ textAlign: \"center\" }}>\r\n                                {get(category,\"card_count\",\"N/A\")}\r\n                              </TableCell>\r\n                              <TableCell className={classes.textMiddle} style={{ textAlign: \"center\", whiteSpace: \"nowrap\" }}>\r\n                              <Button\r\n                                  className=\"EditButton mx-2\"\r\n                                  onClick={() => {\r\n                                    setSelectedCategory(\r\n                                      {\r\n                \r\n                                        // name:category.title,\r\n                                        nameEnglish:category?.languages[0]?.title,\r\n  nameChinese:category?.languages[1]?.title,\r\n  nameKorean:category?.languages[2]?.title,\r\n  nameSpanish:category?.languages[3]?.title,\r\n  _id:category._id\r\n                                       \r\n                                        }\r\n                                    );\r\n                                    setModalState({ isAddEditCategory: true });\r\n                                  }}\r\n                                >\r\n                                  <Tooltip title={<span style={{ fontSize: \"16px\" }}>Manage</span>} arrow>\r\n                                    <EditIcon />\r\n                                  </Tooltip>\r\n                                </Button>\r\n                            <Button\r\n                                    // size=\"small\"\r\n                                    className=\"DeleteButton\"\r\n                                    onClick={() => DeleteCategory(category._id)}\r\n                                  >\r\n                                    <Tooltip title={<span style={{ fontSize: \"16px\" }}>Delete</span>} arrow>\r\n                                      <DeleteOutline />\r\n                                    </Tooltip>\r\n                                  </Button>\r\n                            \r\n                            \r\n                          \r\n                            </TableCell>\r\n                        \r\n\r\n                            </TableRow>\r\n                          ))}\r\n                      </TableBody>\r\n                    </Table>:\r\n                    <Table className={classes.table} stickyHeader size=\"small\">\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell style={{ fontWeight: \"bold\" }}>Sr. No.</TableCell>\r\n                        {/* <TableCell style={{ fontWeight: \"bold\" }}>\r\n                          {\" \"}\r\n                          Tip Name\r\n                        </TableCell> */}\r\n                        <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Created On</TableCell>\r\n                        {/* <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Category Id</TableCell> */}\r\n                        <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Category</TableCell>\r\n                      \r\n                        <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Name</TableCell>\r\n                        <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Image</TableCell>\r\n                        <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Action</TableCell>\r\n                       \r\n                      \r\n                      \r\n                      </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                   \r\n                      {tableData\r\n                        // sortData()\r\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                        //   .reverse()\r\n                        .map((category, index) => (\r\n                          <TableRow hover key={index}>\r\n                            <TableCell component=\"th\" scope=\"row\" className={classes.textMiddle}>\r\n                              {index + 1 + page * rowsPerPage}\r\n                            </TableCell>\r\n                            <TableCell className={classes.textMiddle} style={{ textAlign: \"center\" }}>\r\n                              {moment(category?.createdAt).format(\"DD/MM/YYYY\")}\r\n                            </TableCell>\r\n                            {/* <TableCell className={classes.textMiddle} style={{ textAlign: \"center\",textTransform:\"uppercase\" }}>\r\n                              {get(category,\"categorieId\",\"N/A\")}\r\n                            </TableCell> */}\r\n                            <TableCell className={classes.textMiddle} style={{ textAlign: \"center\",textTransform:\"uppercase\" }}>\r\n                              {get(category,\"categories.title\",\"N/A\")}\r\n                            </TableCell>\r\n                          \r\n                            <TableCell className={classes.textMiddle} style={{ textAlign: \"center\" }}>\r\n                              {get(category.languages[0],\"title\",\"N/A\")}\r\n                            </TableCell>\r\n                            <TableCell\r\n                              className={classes.textMiddle}\r\n                              style={{ textAlign: \"center\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}\r\n                            >\r\n                              <div\r\n                                className=\"\"\r\n                                style={{\r\n                                  width: \"40px\",\r\n                                  height: \"40px\",\r\n                                  display: \"flex\",\r\n                                  justifyContent: \"center\",\r\n                                  alignItems: \"center\",\r\n                                  overflow: \"hidden\",\r\n                                }}\r\n                              >\r\n                                <ModalImage\r\n                                  small={category?.image}\r\n                                  large={category?.image}\r\n                                  alt=\"Image Preview\"\r\n                                  hideDownload\r\n                                  hideZoom\r\n                                />\r\n                              </div>\r\n                            </TableCell>\r\n                          \r\n                          \r\n                            {/* <TableCell className={classes.textMiddle} style={{ textAlign: \"center\" }}>\r\n                              <Tooltip\r\n                                title={<span style={{ fontSize: \"16px\" }}>{category.isActive ? \"Active\" : \"Inactive\"}</span>}\r\n                                arrow\r\n                              >\r\n                                <Button>\r\n                                  <IOSSwitch\r\n                                    onChange={(e) => {\r\n                                      // statusSwitch(e, category);\r\n                                    }}\r\n                                    checked={category.isActive ? true : false}\r\n                                  />\r\n                                </Button>\r\n                              </Tooltip>\r\n                            </TableCell>  */}\r\n \r\n                            <TableCell className={classes.textMiddle} style={{ textAlign: \"center\", whiteSpace: \"nowrap\" }}>\r\n                            <Button\r\n                                  className=\"EditButton mx-2\"\r\n                                  onClick={() => {\r\n                                    setSelectedCard(\r\n                                      {\r\n                \r\n                                        // name:category.title,\r\n                                        nameEnglish:category?.languages[0]?.title,\r\n  nameChinese:category?.languages[1]?.title,\r\n  nameKorean:category?.languages[2]?.title,\r\n  nameSpanish:category?.languages[3]?.title,\r\n                                        category:categoryList.filter((ele)=>ele.value===category.categorieId),\r\n                                        file1: \"\",\r\n                                        // ImageLink: get(selectedBannerData, \"image\", \"\"),\r\n                                        ImageLink:category.image,\r\n                                        _id:category._id\r\n                                        }\r\n                                    );\r\n                                    setModalState({ isAddEditCard: true });\r\n                                  }}\r\n                                >\r\n                                  <Tooltip title={<span style={{ fontSize: \"16px\" }}>Manage</span>} arrow>\r\n                                    <EditIcon />\r\n                                  </Tooltip>\r\n                                </Button>\r\n                            <Button\r\n                                    // size=\"small\"\r\n                                    className=\"DeleteButton\"\r\n                                    onClick={() => DeleteCard(category._id)}\r\n                                  >\r\n                                    <Tooltip title={<span style={{ fontSize: \"16px\" }}>Delete</span>} arrow>\r\n                                      <DeleteOutline />\r\n                                    </Tooltip>\r\n                                  </Button>\r\n                            \r\n                            \r\n                          \r\n                            </TableCell>\r\n                           \r\n                          </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                    }\r\n                  </TableContainer>\r\n                  {tableData.length === 0 ? (\r\n                    <NoDataFound TextToDisplay=\"No Data Found.\" fontSize=\"24px\" Loading={isLoading} />\r\n                  ) : (\r\n                    false\r\n                  )}\r\n                  <TablePagination\r\n                   style={{position:\"fixed\",bottom:4,backgroundColor:\"white\",right:27}}\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={tableData.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            </div>\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n      {/* AddEdit Banner */}\r\n      <Modal\r\n        maxWidth=\"lg\"\r\n        width=\"840px\"\r\n        isOpen={CategoryOrCard==0&& modalState.isAddEditCard}\r\n        onClose={(event, reason) => {\r\n          if (reason && (reason === \"backdropClick\" || \"escapeKeyDown\")) {\r\n            console.log(reason);\r\n            setModalState({\r\n              isAddEditCard: true,\r\n            });\r\n          } else {\r\n            setModalState({\r\n              isAddEditCard: false,\r\n            });\r\n          setSelectedCard({\r\n                \r\n            // name:\"\",\r\n            nameEnglish:\"\",\r\n            nameChinese:\"\",\r\n            nameKorean:\"\",\r\n            nameSpanish:\"\",\r\n            category:\"\",\r\n            file1: \"\",\r\n            // ImageLink: get(selectedBannerData, \"image\", \"\"),\r\n            ImageLink:\"\",\r\n            _id:\"\"\r\n            })\r\n          }\r\n          // setModalState({\r\n          //   isAddEditTaxiSingle: false,\r\n          // });\r\n          // setSelectedTaxiDataAddEdit(null);\r\n        }}\r\n        backgroundModal={false}\r\n        backgroundModalContent={false}\r\n        title={\r\n          <div>\r\n            <div\r\n              className=\"my-3\"\r\n              style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"22px\", fontFamily: \"'DM Sans', sans-serif\" }}\r\n            >\r\n              {CategoryOrCard==0? selectedCard._id === \"\" ? \"Add Gift Card\" : \"Edit Gift Card\":selectedBannerData === null ? \"Add Category\" : \"Edit Category\"}\r\n            </div>\r\n            <div className=\"closeicon\">\r\n              <AiOutlineClose\r\n                style={{\r\n                  fontSize: \"1.5rem\",\r\n                  position: \"absolute\",\r\n                  top: 16,\r\n                  right: 16,\r\n                  color: \"#fff\",\r\n                  borderRadius: \"50%\",\r\n                  backgroundColor: \"red\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => {\r\n                  setModalState({\r\n                    isAddEditCard: false,\r\n                  });\r\n                  setSelectedCard({\r\n                \r\n                    // name:\"\",\r\n                    nameEnglish:\"\",\r\n                    nameChinese:\"\",\r\n                    nameKorean:\"\",\r\n                    nameSpanish:\"\",\r\n                    category:\"\",\r\n                    file1: \"\",\r\n                    // ImageLink: get(selectedBannerData, \"image\", \"\"),\r\n                    ImageLink:\"\",\r\n                    _id:\"\"\r\n                    });\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        }\r\n        content={\r\n            <>\r\n          \r\n            <Formik\r\n              enableReinitialize\r\n            //   key={selectedLanguage}\r\n              initialValues={\r\n                selectedCard\r\n                // LanguageInputs\r\n                // {\r\n                \r\n                // name:\"\",\r\n                // category:\"\",\r\n                // file1: \"\",\r\n                // // ImageLink: get(selectedBannerData, \"image\", \"\"),\r\n                // ImageLink:\"\"\r\n                // }\r\n              }\r\n              validate={(values) => handleValidateAddEditCard(values)}\r\n              onSubmit={(values) => {\r\n                console.log(values);\r\n                if (selectedCard._id !== \"\") {\r\n                  Edit(values);\r\n             \r\n                } else {\r\n                  addNew(values);\r\n              }\r\n              }}\r\n            >\r\n              {(formikBag) => (\r\n                <Form style={{ width: \"100%\" }}>\r\n                  <div className=\"container\">\r\n                   \r\n                    <div className=\"row my-3\">\r\n                      <div className=\"col-md-6\">\r\n                        <div className=\"my-2\">\r\n                        <label>Category :</label>\r\n                        <Field name=\"category\">\r\n                          {({ field }) => (\r\n                            <SelectInput\r\n                              {...field}\r\n                              // type=\"text\"\r\n                              options={categoryList}\r\n                              value={formikBag.values.category}\r\n                              onChange={(e) => {\r\n                                formikBag.setFieldValue(\"category\", e);\r\n                              }}\r\n                              error={formikBag.touched.category && formikBag.errors.category ? formikBag.errors.category : null}\r\n                              // className=\"form-control\"\r\n                              placeholder={\"Select Category\"}\r\n                            />\r\n                          )}\r\n                        </Field>\r\n                      </div>\r\n                  \r\n                      <div className=\"my-2\">\r\n                      <label>\r\n                          Image<span style={{ color: \"#85BB65\", fontWeight: \"bold\" }}>(300x250)</span>:\r\n                        </label>\r\n                        <Field name=\"file1\">\r\n                          {({ field }) => (\r\n                            <Input\r\n                              {...field}\r\n                              type=\"file\"\r\n                              value={undefined}\r\n                              // onChange={(e) => {\r\n                              //   formikBag.setFieldValue(\"file1\", e.target.value);\r\n                              // }}\r\n                              accept=\"image/*\"\r\n                              onChange={async (e) => {\r\n                                // if (!selectedTaxiDataAddEdit) {\r\n                                const [file] = e.target.files;\r\n                                console.log(file);\r\n                                if (file) {\r\n                                  const img = new Image();\r\n                                  console.log(URL.createObjectURL(file));\r\n                                  img.src = URL.createObjectURL(file);\r\n                                  img.onload = async () => {\r\n                                    if (img.width === 300 && img.height === 250) {\r\n                                      // alert(\"Image Dimensions accepted\");\r\n                                      imageVerificationAlert(true);\r\n                                      let data = await uploadForm(file);\r\n                                      formikBag.setFieldValue(\"file1\", file);\r\n                                      formikBag.setFieldValue(\"ImageLink\", data);\r\n                                      //  setProfileImagepath(data);\r\n                                    } else {\r\n                                      // alert(\"Image Dimensions not accepted\");\r\n                                      imageVerificationAlert(false);\r\n                                      formikBag.setFieldValue(\"file1\", \"\");\r\n                                      formikBag.setFieldValue(\"ImageLink\", \"\");\r\n                                      //  setProfileImagepath(\"\");\r\n                                    }\r\n                                  };\r\n                                }\r\n                             \r\n                              }\r\n                            }\r\n                              error={formikBag.touched.file1 && formikBag.errors.file1 ? formikBag.errors.file1 : null}\r\n                              className=\"form-control\"\r\n                              placeholder={\"Enter Image\"}\r\n                            />\r\n                          )}\r\n                        </Field>\r\n                      </div>\r\n                      <div className=\"my-2\">\r\n                      <Field name=\"ImageLink\">\r\n                          {({ field }) => (\r\n                            <>\r\n                            <label>Image Preview:</label>\r\n                              <img\r\n                                {...field}\r\n                                alt=\"Image Preview\"\r\n                                src={formikBag.values.ImageLink}\r\n                                style={{\r\n                                  width: 145,\r\n                                  height: 145,\r\n                                }}\r\n                                // error={\r\n                                //   formikBag.touched.description && formikBag.errors.description\r\n                                //     ? formikBag.errors.description\r\n                                //     : null\r\n                                // }\r\n                                className=\"form-control\"\r\n                                // placeholder={\"Enter Description\"}\r\n                              />\r\n                            </>\r\n                          )}\r\n                        </Field>\r\n                      </div>\r\n                      </div>\r\n                      {/* <div className=\"col-md-6\">\r\n                        <label>Name:</label>\r\n                        <Field name=\"name\">\r\n                          {({ field }) => (\r\n                            <>\r\n                              <Input\r\n                                {...field}\r\n                                type=\"text\"\r\n                                onChange={(e) => {\r\n                                  formikBag.setFieldValue(\"name\", e.target.value);\r\n                                }}\r\n                                error={\r\n                                  formikBag.touched.name && formikBag.errors.name\r\n                                    ? formikBag.errors.name\r\n                                    : null\r\n                                }\r\n                                className=\"form-control\"\r\n                                placeholder={\"Enter Name\"}\r\n                              />\r\n                            \r\n                            </>\r\n                          )}\r\n                        </Field>\r\n                      </div> */}\r\n                    {/* </div> */}\r\n\r\n                    {/* <div className=\"row my-3\"> */}\r\n                      {/* <div className=\"col-md-6\">\r\n                        <label>\r\n                          Image<span style={{ color: \"#85BB65\", fontWeight: \"bold\" }}>(300x250)</span>:\r\n                        </label>\r\n                        <Field name=\"file1\">\r\n                          {({ field }) => (\r\n                            <Input\r\n                              {...field}\r\n                              type=\"file\"\r\n                              value={undefined}\r\n                              // onChange={(e) => {\r\n                              //   formikBag.setFieldValue(\"file1\", e.target.value);\r\n                              // }}\r\n                              accept=\"image/*\"\r\n                              onChange={async (e) => {\r\n                                // if (!selectedTaxiDataAddEdit) {\r\n                                const [file] = e.target.files;\r\n                                console.log(file);\r\n                                if (file) {\r\n                                  const img = new Image();\r\n                                  console.log(URL.createObjectURL(file));\r\n                                  img.src = URL.createObjectURL(file);\r\n                                  img.onload = async () => {\r\n                                    if (img.width === 300 && img.height === 250) {\r\n                                      // alert(\"Image Dimensions accepted\");\r\n                                      imageVerificationAlert(true);\r\n                                      let data = await uploadForm(file);\r\n                                      formikBag.setFieldValue(\"file1\", file);\r\n                                      formikBag.setFieldValue(\"ImageLink\", data);\r\n                                      //  setProfileImagepath(data);\r\n                                    } else {\r\n                                      // alert(\"Image Dimensions not accepted\");\r\n                                      imageVerificationAlert(false);\r\n                                      formikBag.setFieldValue(\"file1\", \"\");\r\n                                      formikBag.setFieldValue(\"ImageLink\", \"\");\r\n                                      //  setProfileImagepath(\"\");\r\n                                    }\r\n                                  };\r\n                                }\r\n                             \r\n                              }\r\n                            }\r\n                              error={formikBag.touched.file1 && formikBag.errors.file1 ? formikBag.errors.file1 : null}\r\n                              className=\"form-control\"\r\n                              placeholder={\"Enter Image\"}\r\n                            />\r\n                          )}\r\n                        </Field>\r\n                      </div> */}\r\n\r\n                      {/* <div className=\"col-md-6\">\r\n                      \r\n                        <Field name=\"ImageLink\">\r\n                          {({ field }) => (\r\n                            <>\r\n                            <label>Image Preview:</label>\r\n                              <img\r\n                                {...field}\r\n                                alt=\"Image Preview\"\r\n                                src={formikBag.values.ImageLink}\r\n                                style={{\r\n                                  width: 145,\r\n                                  height: 145,\r\n                                }}\r\n                                // error={\r\n                                //   formikBag.touched.description && formikBag.errors.description\r\n                                //     ? formikBag.errors.description\r\n                                //     : null\r\n                                // }\r\n                                className=\"form-control\"\r\n                                // placeholder={\"Enter Description\"}\r\n                              />\r\n                            </>\r\n                          )}\r\n                        </Field>\r\n                      </div> */}\r\n                       <div className=\"col-md-6 \">\r\n                       <div className=\"my-2\">\r\n                      <label>Name in English:</label>\r\n                        <Field name=\"nameEnglish\">\r\n                          {({ field }) => (\r\n                            <>\r\n                              <Input\r\n                                {...field}\r\n                                type=\"text\"\r\n                                onChange={(e) => {\r\n                                  formikBag.setFieldValue(\"nameEnglish\", e.target.value);\r\n                                }}\r\n                                error={\r\n                                  formikBag.touched.nameEnglish && formikBag.errors.nameEnglish\r\n                                    ? formikBag.errors.nameEnglish\r\n                                    : null\r\n                                }\r\n                                className=\"form-control\"\r\n                                placeholder={\"Enter Name in English\"}\r\n                              />\r\n                            \r\n                            </>\r\n                          )}\r\n                        </Field>\r\n                      </div>\r\n                      <div className=\"my-2\">\r\n                      <label>Name in Chinese:</label>\r\n                        <Field name=\"nameChinese\">\r\n                          {({ field }) => (\r\n                            <>\r\n                              <Input\r\n                                {...field}\r\n                                type=\"text\"\r\n                                onChange={(e) => {\r\n                                  formikBag.setFieldValue(\"nameChinese\", e.target.value);\r\n                                }}\r\n                                error={\r\n                                  formikBag.touched.nameChinese && formikBag.errors.nameChinese\r\n                                    ? formikBag.errors.nameChinese\r\n                                    : null\r\n                                }\r\n                                className=\"form-control\"\r\n                                placeholder={\"Enter Name in Chinese\"}\r\n                              />\r\n                            \r\n                            </>\r\n                          )}\r\n                        </Field>\r\n                      </div>\r\n                      <div className=\"my-2\">\r\n                      <label>Name in Korean:</label>\r\n                        <Field name=\"nameKorean\">\r\n                          {({ field }) => (\r\n                            <>\r\n                              <Input\r\n                                {...field}\r\n                                type=\"text\"\r\n                                onChange={(e) => {\r\n                                  formikBag.setFieldValue(\"nameKorean\", e.target.value);\r\n                                }}\r\n                                error={\r\n                                  formikBag.touched.nameKorean && formikBag.errors.nameKorean\r\n                                    ? formikBag.errors.nameKorean\r\n                                    : null\r\n                                }\r\n                                className=\"form-control\"\r\n                                placeholder={\"Enter Name in Korean\"}\r\n                              />\r\n                            \r\n                            </>\r\n                          )}\r\n                        </Field>\r\n                      </div>\r\n                      <div className=\"my-2\">\r\n                      <label>Name in Spanish:</label>\r\n                        <Field name=\"nameSpanish\">\r\n                          {({ field }) => (\r\n                            <>\r\n                              <Input\r\n                                {...field}\r\n                                type=\"text\"\r\n                                onChange={(e) => {\r\n                                  formikBag.setFieldValue(\"nameSpanish\", e.target.value);\r\n                                }}\r\n                                error={\r\n                                  formikBag.touched.nameSpanish && formikBag.errors.nameSpanish\r\n                                    ? formikBag.errors.nameSpanish\r\n                                    : null\r\n                                }\r\n                                className=\"form-control\"\r\n                                placeholder={\"Enter Name in Spanish\"}\r\n                              />\r\n                            \r\n                            </>\r\n                          )}\r\n                        </Field>\r\n                      </div>\r\n                       </div>\r\n                    </div>\r\n                  \r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"buttoncss\"\r\n                      style={{\r\n                        borderRadius: \"1.5rem\",\r\n                        border: \"none\",\r\n                        fontSize: \"1rem\",\r\n                        width: \"10vw\",\r\n                        height: \"5vh\",\r\n                        backgroundColor: \"#006FFF\",\r\n                        color: \"#fff\",\r\n                        margin: \"2rem 0rem\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      //  disabled={formikBag.values.ImageLink && !formikBag.errors ? false : true}\r\n                    >\r\n                      SAVE\r\n                    </button>\r\n                    {console.log(formikBag.errors)}\r\n                  </div>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          \r\n          </>\r\n        }\r\n      />\r\n        {/* AddEdit Banner */}\r\n        <Modal\r\n        maxWidth=\"lg\"\r\n        width=\"840px\"\r\n        isOpen={CategoryOrCard==1&&modalState.isAddEditCategory}\r\n        onClose={(event, reason) => {\r\n          if (reason && (reason === \"backdropClick\" || \"escapeKeyDown\")) {\r\n            console.log(reason);\r\n            setModalState({\r\n              isAddEditCategory: true,\r\n            });\r\n          } else {\r\n            setModalState({\r\n              isAddEditCategory: false,\r\n            });\r\n            setSelectedCategory({\r\n              nameEnglish:\"\",\r\n              nameChinese:\"\",\r\n              nameKorean:\"\",\r\n              nameSpanish:\"\",\r\n              _id:\"\"\r\n            });\r\n          }\r\n          // setModalState({\r\n          //   isAddEditTaxiSingle: false,\r\n          // });\r\n          // setSelectedTaxiDataAddEdit(null);\r\n        }}\r\n        backgroundModal={false}\r\n        backgroundModalContent={false}\r\n        title={\r\n          <div>\r\n            <div\r\n              className=\"my-3\"\r\n              style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"22px\", fontFamily: \"'DM Sans', sans-serif\" }}\r\n            >\r\n              {CategoryOrCard==0? selectedCard._id === \"\" ? \"Add Gift Card\" : \"Edit Gift Card\":selectedBannerData === null ? \"Add Category\" : \"Edit Category\"}\r\n            </div>\r\n            <div className=\"closeicon\">\r\n              <AiOutlineClose\r\n                style={{\r\n                  fontSize: \"1.5rem\",\r\n                  position: \"absolute\",\r\n                  top: 16,\r\n                  right: 16,\r\n                  color: \"#fff\",\r\n                  borderRadius: \"50%\",\r\n                  backgroundColor: \"red\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => {\r\n                  setModalState({\r\n                    isAddEditCategory: false,\r\n                  });\r\n                  setSelectedCategory({\r\n                    nameEnglish:\"\",\r\n                    nameChinese:\"\",\r\n                    nameKorean:\"\",\r\n                    nameSpanish:\"\",\r\n                    _id:\"\"\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        }\r\n        content={\r\n            <>\r\n            {\r\n        \r\n             <Formik\r\n              enableReinitialize\r\n            //   key={selectedLanguage}\r\n              initialValues={\r\n                // LanguageInputs\r\n               selectedCategory\r\n              }\r\n              validate={(values) => handleValidateAddEditCategory(values)}\r\n              onSubmit={(values) => {\r\n                if (selectedCategory._id !== \"\") {\r\n                  Edit(values);\r\n             \r\n                } else {\r\n                  addNew(values);\r\n              }\r\n              \r\n                \r\n                  // addNew(values);\r\n               \r\n              }}\r\n            >\r\n              {(formikBag) => (\r\n                <Form style={{ width: \"100%\" }}>\r\n                  <div className=\"container\">\r\n                   \r\n                    <div className=\"row my-3 \">\r\n                      <div className=\"col-md-6 \">\r\n                        <label>Category Name in English :</label>\r\n                        <Field name=\"nameEnglish\">\r\n                          {({ field }) => (\r\n                            <Input\r\n                              {...field}\r\n                              type=\"text\"\r\n                              onChange={(e) => {\r\n                                formikBag.setFieldValue(\"nameEnglish\", e.target.value);\r\n                              }}\r\n                              error={formikBag.touched.nameEnglish && formikBag.errors.nameEnglish ? formikBag.errors.nameEnglish : null}\r\n                              className=\"form-control\"\r\n                              placeholder={\"Enter Category in English\"}\r\n                            />\r\n                          )}\r\n                        </Field>\r\n                      </div>\r\n                      <div className=\"col-md-6 \">\r\n                        <label>Category Name in Chinese :</label>\r\n                        <Field name=\"nameChinese\">\r\n                          {({ field }) => (\r\n                            <Input\r\n                              {...field}\r\n                              type=\"text\"\r\n                              onChange={(e) => {\r\n                                formikBag.setFieldValue(\"nameChinese\", e.target.value);\r\n                              }}\r\n                              error={formikBag.touched.nameChinese && formikBag.errors.nameChinese ? formikBag.errors.nameChinese : null}\r\n                              className=\"form-control\"\r\n                              placeholder={\"Enter Category in Chinese\"}\r\n                            />\r\n                          )}\r\n                        </Field>\r\n                      </div>\r\n                    \r\n                    </div>\r\n                    <div className=\"row my-3 \">\r\n                      <div className=\"col-md-6 \">\r\n                        <label>Category Name in Korean :</label>\r\n                        <Field name=\"nameKorean\">\r\n                          {({ field }) => (\r\n                            <Input\r\n                              {...field}\r\n                              type=\"text\"\r\n                              onChange={(e) => {\r\n                                formikBag.setFieldValue(\"nameKorean\", e.target.value);\r\n                              }}\r\n                              error={formikBag.touched.nameKorean && formikBag.errors.nameKorean ? formikBag.errors.nameKorean : null}\r\n                              className=\"form-control\"\r\n                              placeholder={\"Enter Category in Korean\"}\r\n                            />\r\n                          )}\r\n                        </Field>\r\n                      </div>\r\n                      <div className=\"col-md-6 \">\r\n                        <label>Category Name in Spanish :</label>\r\n                        <Field name=\"nameSpanish\">\r\n                          {({ field }) => (\r\n                            <Input\r\n                              {...field}\r\n                              type=\"text\"\r\n                              onChange={(e) => {\r\n                                formikBag.setFieldValue(\"nameSpanish\", e.target.value);\r\n                              }}\r\n                              error={formikBag.touched.nameSpanish && formikBag.errors.nameSpanish ? formikBag.errors.nameSpanish : null}\r\n                              className=\"form-control\"\r\n                              placeholder={\"Enter Category in Spanish\"}\r\n                            />\r\n                          )}\r\n                        </Field>\r\n                      </div>\r\n                    \r\n                    </div>\r\n                  \r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"buttoncss\"\r\n                      style={{\r\n                        borderRadius: \"1.5rem\",\r\n                        border: \"none\",\r\n                        fontSize: \"1rem\",\r\n                        width: \"10vw\",\r\n                        height: \"5vh\",\r\n                        backgroundColor: \"#006FFF\",\r\n                        color: \"#fff\",\r\n                        margin: \"2rem 0rem\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      //  disabled={formikBag.values.ImageLink && !formikBag.errors ? false : true}\r\n                    >\r\n                      SAVE\r\n                    </button>\r\n                    {console.log(formikBag.errors)}\r\n                  </div>\r\n                </Form>\r\n              )}\r\n            </Formik>}\r\n          </>\r\n        }\r\n      />\r\n      {/* {isLoading && (\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1400,\r\n            background: \"#0003\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <PuffLoader\r\n            color=\"#0059cd\"\r\n            loading={isLoading}\r\n            size={100}\r\n            // aria-label=\"Loading Spinner\"\r\n            // data-testid=\"loader\"\r\n          />\r\n        </div>\r\n      )} */}\r\n      {/* <GiftCardManagement3/> */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n"],"sourceRoot":""}