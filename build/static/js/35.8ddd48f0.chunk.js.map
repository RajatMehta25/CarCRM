{"version":3,"sources":["pages/Content_Management/Content_Management.js"],"names":["useStyles","makeStyles","theme","root","flexWrap","margin","spacing","extendedIcon","marginRight","paperHeading","padding","table","minWidth","textMiddle","verticalAlign","iconMargin","color","backgroundColor","iconcolor","headingButton","display","flexDirection","justifyContent","headingAlignment","alignItems","width","gap","textAlign","Marginbutton","container","maxHeight","paperPaddingRightLeft","Content_Management","props","classes","useState","inputData","setInputData","panelName","setPanelName","heading","setHeading","updateID","setUpdateID","getContent","values","a","select1","select2","axios","get","data","console","log","isEmpty","toast","error","position","html","_id","info","Create","post","pageName","pageType","success","alert","Update","category","put","pagename","yup","shape","required","Fragment","className","elevation","style","classNames","initialValues","onSubmit","POSITION","TOP_RIGHT","setFieldValue","handleSubmit","name","as","onChange","e","target","value","height","borderRadius","borderColor","borderStyle","borderWidth","paddingInlineStart","config","askBeforePasteFromWord","askBeforePasteHTML","defaultActionOnPaste","readonly","onBlur","newContent","SettingData","variant","onClick"],"mappings":"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","file":"static/js/35.8ddd48f0.chunk.js","sourcesContent":["import React, { useState, useEffect, Component, useRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport classNames from \"classnames\";\r\nimport axios from \"../../axios\";\r\nimport { toast } from \"react-toastify\";\r\n// import Switch from '@mui/material/Switch';\r\n// import { styled } from '@mui/material/styles';\r\n// import Skeleton from 'react-loading-skeleton'\r\n// import 'react-loading-skeleton/dist/skeleton.css'\r\nimport {\r\n  Button,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Switch,\r\n  styled,\r\n  Tooltip,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n// import { Formik } from \"formik\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { indexOf } from \"lodash\";\r\nimport { submit } from \"redux-form\";\r\nimport * as yup from \"yup\";\r\nimport \"./Content_Management.css\";\r\n// import { Delete } from '@material-ui/icons';\r\n// import VisibilityIcon from '@material-ui/icons/Visibility';\r\n// import BlockIcon from '@material-ui/icons/Block';\r\n// import ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n\r\n// For Table\r\n// import SearchBar from \"material-ui-search-bar\";\r\n// import { orderBy } from \"lodash\";\r\n\r\n//history\r\n// import {useHistory} from 'react-router-dom'\r\n// import AddEditCategory from \"../AccountManagement/Account_Details\";\r\n\r\n// import './Category_Management.css' ;\r\n// import EditIcon from '@material-ui/icons/Edit';\r\n// import { DeleteOutline, WidgetsOutlined } from \"@material-ui/icons\";\r\n// import React, { Component } from 'react';\r\n// import { Editor } from 'react-draft-wysiwyg';\r\n// import { EditorState, convertToRaw, ContentState } from 'draft-js';\r\n// import draftToHtml from 'draftjs-to-html';\r\n// import htmlToDraft from 'html-to-draftjs';\r\n// import 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n// import '../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n// import QNA from './QNA_Component';\r\nimport { isEmpty } from \"lodash\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexWrap: \"wrap\",\r\n    // marginTop: '5rem',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  paperHeading: {\r\n    padding: \"1rem 0rem\",\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  textMiddle: {\r\n    verticalAlign: \"middle !important\",\r\n  },\r\n  iconMargin: {\r\n    margin: \"0.5rem\",\r\n    color: \"#fff\",\r\n    backgroundColor: \"#696969\",\r\n  },\r\n  iconcolor: {\r\n    margin: \"0.5rem\",\r\n    color: \"#fff\",\r\n    backgroundColor: \"#0294b3 !important\",\r\n  },\r\n  headingButton: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    padding: \"10px\",\r\n  },\r\n  headingAlignment: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    // padding: \"0 2rem 0 2rem\"\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n    [\"@media (max-width:780px)\"]: {\r\n      // eslint-disable-line no-useless-computed-key\r\n      flexDirection: \"column\",\r\n      width: \"100%\",\r\n      gap: \"1rem\",\r\n      justifyContent: \"center\",\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n  Marginbutton: {\r\n    margin: \"0.5rem\",\r\n  },\r\n  container: {\r\n    maxHeight: \"58vh\",\r\n  },\r\n  paperPaddingRightLeft: {\r\n    padding: \"0rem 1rem\",\r\n  },\r\n}));\r\n\r\nexport default function Content_Management(props) {\r\n  const classes = useStyles();\r\n  //   const registrationForm = useRef();\r\n  //   const [persons,setPerson] = useState([<QNA key={0} />]);\r\n  // const [AllData,setAllData] = useState([]);\r\n  const config = {\r\n    // minHeight: 500,\r\n    buttons: [\r\n      \"bold\",\r\n      \"italic\",\r\n      \"underline\",\r\n      \"source\",\r\n      \"|\",\r\n      \"image\",\r\n      \"video\",\r\n      \"link\",\r\n      \"|\",\r\n      \"font\",\r\n      \"fontsize\",\r\n      \"brush\",\r\n      \"eraser\",\r\n      \"|\",\r\n      \"align\",\r\n      \"|\",\r\n      \"ul\",\r\n      \"ol\",\r\n      \"|\",\r\n      \"undo\",\r\n      \"redo\",\r\n      \"|\",\r\n      \"cut\",\r\n      \"copy\",\r\n      \"paste\",\r\n      \"|\",\r\n      \"|\",\r\n      \"about\",\r\n    ],\r\n  };\r\n  // const history=useHistory();\r\n  const [inputData, setInputData] = useState();\r\n  const [htmlData, setHtmlData] = useState(\"\");\r\n  //   const [tableData, setTableData] = useState([]);\r\n  const [panelName, setPanelName] = useState(\"\");\r\n  const [heading, setHeading] = useState(\"\");\r\n  const [Language, setLanguage] = useState(\"\");\r\n  const selectHeadingData = [\r\n    \"privacyPolicy\",\r\n    \"termsAndConditions\",\r\n    \"aboutUs\",\r\n    // \"help\",\r\n    // \"contactUs\",\r\n  ];\r\n  const panelData = [\"USER\", \"DRIVER\"];\r\n  const [updateID, setUpdateID] = useState(\"\");\r\n  // const[isLoading,setIsLoading]=useState(true);\r\n\r\n  // status switch\r\n  // const [checked, setChecked] = useState(true);\r\n\r\n  //handle add QnA component\r\n\r\n  //   // For Pagination\r\n  //   const [page, setPage] = React.useState(0);\r\n  //   const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  //   const handleChangePage = (event, newPage) => {\r\n  // console.log(event);\r\n  // console.log(newPage);\r\n  // setPage(newPage);\r\n  //   };\r\n\r\n  //    useEffect(() => {getContent()} , []);\r\n\r\n  //get content\r\n  const getContent = async (values) => {\r\n    // setInputData(\"\");\r\n    if (values?.select1 !== \"\" && values?.select2 !== \"\") {\r\n      try {\r\n        const { data } = await axios.get(`/private/listWebPage?pageName=${values.select1}&pageType=${values.select2}`); //params needed here\r\n        console.log(\"api\", data);\r\n        if (!isEmpty(data.data)) {\r\n          console.log(\"nnnn\");\r\n          setInputData(data.data[0].html);\r\n          setUpdateID(data.data[0]._id);\r\n        }\r\n        // setTableData(data.data)\r\n        // setSearchedData(data.user)\r\n        // setIsLoading(false)\r\n        else {\r\n          console.log(\"kki\");\r\n          toast.error(\"No Data Found\", { position: \"top-right\" });\r\n          setInputData(\"\");\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else if (values.select2 === \"\") {\r\n      toast.info(\"Please Select Panel\", {\r\n        position: \"top-right\",\r\n      });\r\n      setInputData(\"\");\r\n    } else if (values.select1 === \"\") {\r\n      toast.info(\"Please Select Heading\", {\r\n        position: \"top-right\",\r\n      });\r\n      setInputData(\"\");\r\n    }\r\n  };\r\n\r\n  // creation and updation\r\n  const Create = async () => {\r\n    if (inputData !== \"\" && inputData !== \"<p><br></p>\" && heading && panelName) {\r\n      try {\r\n        // console.log(values);\r\n\r\n        const { data } = await axios.post(`/private/createWebPage`, {\r\n          // contentId:,\r\n          pageName: heading,\r\n          pageType: panelName,\r\n          html: `${inputData}`,\r\n        });\r\n        console.log(data);\r\n        toast.success(\"Content Saved Successfully\");\r\n        getContent();\r\n      } catch (error) {\r\n        toast.info(\"Use Update Button to Update Content\", { position: \"top-right\" });\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      alert(\"Text and Selection fields cannot be blank\");\r\n    }\r\n  };\r\n\r\n  const Update = async (category) => {\r\n    if (inputData !== \"\" && inputData !== \"<p><br></p>\" && heading && panelName) {\r\n      try {\r\n        // console.log(values);\r\n\r\n        const { data } = await axios.put(`/private/updateWebPage/${updateID}`, {\r\n          // contentId:,\r\n          pagename: heading,\r\n          pageType: panelName,\r\n          html: `${inputData}`,\r\n        });\r\n        console.log(data);\r\n        toast.success(\"Content Saved Successfully\");\r\n        setUpdateID(\"\");\r\n        getContent();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      alert(\"Text and Selection fields cannot be blank\");\r\n    }\r\n  };\r\n  //edit  categories attribute\r\n\r\n  // status switch\r\n\r\n  // useMemo(() => {\r\n  //   const SettingData = (newContent) => {\r\n  //     // setInputData(JSON.stringify(newContent));\r\n  //     setInputData(newContent);\r\n  //     console.log(newContent);\r\n  //   }\r\n  // }, [newContent]);\r\n\r\n  const SettingData = (newContent) => {\r\n    // setInputData(JSON.stringify(newContent));\r\n    setInputData(newContent);\r\n    console.log(newContent);\r\n  };\r\n\r\n  let validationSchema = yup.object().shape({\r\n    select1: yup.string().required(\"heading is required\"),\r\n    select2: yup.string().required(\"panel is required\"),\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className={classes.root}>\r\n          <Paper elevation={0} style={{ backgroundColor: \"transparent\" }}>\r\n            <div className={classes.paperPaddingRightLeft}>\r\n              <div className=\"\">\r\n                <Paper\r\n                  elevation={0}\r\n                  style={{ backgroundColor: \"transparent\" }}\r\n                  className={classNames(classes.paperHeading, classes.headingAlignment)}\r\n                >\r\n                  <h3 style={{}}></h3>\r\n\r\n                  <Formik\r\n                    //   validationSchema={validationSchema}\r\n                    initialValues={{\r\n                      select1: \"\",\r\n                      select2: \"\",\r\n                    }}\r\n                    onSubmit={(values) => {\r\n                      if (values.select1 === \"\" && values.select2 === \"\") {\r\n                        toast.info(\"Please select Panel and Heading\", {\r\n                          position: toast.POSITION.TOP_RIGHT,\r\n                        });\r\n                      } else {\r\n                        getContent(values);\r\n                      }\r\n\r\n                      console.log(values);\r\n                    }}\r\n                  >\r\n                    {({ values, setFieldValue, handleSubmit }) => (\r\n                      <Form>\r\n                        {/* <label className=\"\" style={{ }}>\r\n                                Name:\r\n                              </label> */}\r\n                        &emsp;\r\n                        <Field\r\n                          className=\"\"\r\n                          name=\"select2\"\r\n                          // variant=\"outlined\"\r\n                          as=\"select\"\r\n                          // inputProps={{name: \"name\"}}\r\n                          onChange={(e) => {\r\n                            setFieldValue(\"select2\", e.target.value);\r\n                            setPanelName(e.target.value);\r\n                            handleSubmit();\r\n                          }}\r\n                          style={{\r\n                            width: 200,\r\n                            height: 35,\r\n                            borderRadius: 5,\r\n                            borderColor: \"#d3d3d3\",\r\n                            borderStyle: \"solid\",\r\n                            borderWidth: 1,\r\n                            paddingInlineStart: 10,\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select Panel</option>\r\n                          <option value=\"user\">USER</option>\r\n                          <option value=\"driver\">DRIVER</option>\r\n                          {/* {panelData.map((item, index) => {\r\n                            return (\r\n                              <option key={index} value={item}>\r\n                                {item}\r\n                              </option>\r\n                              \r\n                            );\r\n                          })} */}\r\n                        </Field>\r\n                        &emsp;\r\n                        <Field\r\n                          className=\"\"\r\n                          name=\"select1\"\r\n                          // variant=\"outlined\"\r\n                          as=\"select\"\r\n                          // inputProps={{name: \"name\"}}\r\n                          onChange={(e) => {\r\n                            setFieldValue(\"select1\", e.target.value);\r\n                            setHeading(e.target.value);\r\n                            handleSubmit();\r\n                          }}\r\n                          style={{\r\n                            width: 200,\r\n                            height: 35,\r\n                            borderRadius: 5,\r\n                            borderColor: \"#d3d3d3\",\r\n                            borderStyle: \"solid\",\r\n                            borderWidth: 1,\r\n                            paddingInlineStart: 10,\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select Heading</option>\r\n                          <option value=\"privacy_policy\">PRIVACY POLICY</option>\r\n                          <option value=\"termsAndConditions\">TERMS AND CONDITIONS</option>\r\n                          <option value=\"about_us\">ABOUT US</option>\r\n                          {/* <option value=\"help\">HELP</option> */}\r\n                          {/* <option value=\"contactUs\">CONTACT US</option> */}\r\n                          {/* {selectHeadingData.map((item,index)=>{\r\n                                    return(\r\n                                        <option key={index} value={item}>{item.toLocaleUpperCase()}</option>\r\n                                    )\r\n                                })} */}\r\n                        </Field>\r\n                        {/* &emsp;\r\n                        <Field\r\n                          className=\"\"\r\n                          name=\"select3\"\r\n                          // variant=\"outlined\"\r\n                          as=\"select\"\r\n                          // inputProps={{name: \"name\"}}\r\n                          onChange={(e) => {\r\n                            setFieldValue(\"select3\", e.target.value);\r\n                            setLanguage(e.target.value);\r\n                            handleSubmit();\r\n                          }}\r\n                          style={{\r\n                            width: 200,\r\n                            height: 35,\r\n                            borderRadius: 5,\r\n                            borderColor: \"#d3d3d3\",\r\n                            borderStyle: \"solid\",\r\n                            borderWidth: 1,\r\n                            paddingInlineStart: 10,\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select Language</option>\r\n                          <option value=\"en\">ENGLISH</option>\r\n                          <option value=\"kr\">KOREAN</option>\r\n                          <option value=\"sp\">SPANISH</option>\r\n\r\n                          \r\n                        </Field> */}\r\n                        {/* &emsp;\r\n                        <Field\r\n                          className=\"\"\r\n                          name=\"select4\"\r\n                          // variant=\"outlined\"\r\n                          as=\"select\"\r\n                          // inputProps={{name: \"name\"}}\r\n                          onChange={(e) => {\r\n                            setFieldValue(\"select4\", e.target.value);\r\n                            setLanguage(e.target.value);\r\n                            handleSubmit();\r\n                          }}\r\n                          style={{\r\n                            width: 200,\r\n                            height: 35,\r\n                            borderRadius: 5,\r\n                            borderColor: \"#d3d3d3\",\r\n                            borderStyle: \"solid\",\r\n                            borderWidth: 1,\r\n                            paddingInlineStart: 10,\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select Language</option>\r\n                          <option value=\"en\">ENGLISH</option>\r\n                          <option value=\"kr\">KOREAN</option>\r\n                          <option value=\"sp\">SPANISH</option>\r\n\r\n                        </Field> */}\r\n                        {/* <KErrorMessage name=\"name\" /> */}\r\n                        <br />\r\n                      </Form>\r\n                    )}\r\n                  </Formik>\r\n                </Paper>\r\n\r\n                {/* //new design */}\r\n\r\n                {/* <br /> */}\r\n\r\n                {/* status end */}\r\n\r\n                <Paper elevation={0}>\r\n                  <div className=\"customHeight\">\r\n                    <JoditEditor\r\n                      config={{\r\n                        askBeforePasteFromWord: false,\r\n                        askBeforePasteHTML: false,\r\n                        defaultActionOnPaste: \"insert_only_text\",\r\n                        readonly: false,\r\n                      }}\r\n                      value={inputData}\r\n                      onBlur={(newContent) => {\r\n                        SettingData(newContent);\r\n                      }}\r\n\r\n                      // value={category.data?.answer}\r\n                      // config={config}\r\n                      // ref={editor}\r\n                      // value={content}\r\n                      // config={config}\r\n                      //tabIndex={1} // tabIndex of textarea\r\n                      //onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                    />\r\n                  </div>\r\n                  <br />\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    style={{ color: \"white\", backgroundColor: \"#006FFF\" }}\r\n                    onClick={() => {\r\n                      Create();\r\n                    }}\r\n                  >\r\n                    Create\r\n                  </Button>\r\n                  &emsp;\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    style={{ color: \"white\", backgroundColor: \"#006FFF\" }}\r\n                    onClick={() => {\r\n                      Update();\r\n                    }}\r\n                  >\r\n                    Update\r\n                  </Button>\r\n                  <br />\r\n                  <br />\r\n                </Paper>\r\n                <Paper></Paper>\r\n              </div>\r\n            </div>\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"],"sourceRoot":""}