{"version":3,"sources":["../../src/helpers/unique-name.ts","../../src/config.ts","../../src/portal/index.tsx","../../src/confirm/index.tsx","../../src/index.ts","../node_modules/react-modal-video/lib/index.js","../node_modules/@material-ui/icons/esm/Close.js","pages/DriverManagement/DriverManagement.js"],"names":["mountRootId","Math","random","toString","substr","Portal","_a","children","mount","document","getElementById","el","createElement","useEffect","appendChild","removeChild","createPortal","ConfirmBox","onConfirmPopup","setIsOpen","resolver","onCancelPopup","classNames","containerClassNames","confirmButtonClassNames","message","options","_b","useState","isOpen","React","className","container","buttons","confirmButton","cancelButtonClassNames","cancelButton","render","onClick","role","labels","confirmable","cancellable","closeOnOverlayClick","rootMount","setAttribute","body","Promise","resolve","ConfirmBoxEl","PortalEl","ReactDOM","Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react2","_interopRequireDefault","require","_CSSTransition2","obj","__esModule","default","ModalVideo","_React$Component","instance","TypeError","_classCallCheck","this","_this","self","call","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","state","modalVideoWidth","getWidthFulfillAspectRatio","ratio","window","innerHeight","innerWidth","closeModal","bind","updateFocus","timeout","subClass","superClass","create","constructor","setPrototypeOf","_inherits","setState","onClose","e","keyCode","addEventListener","keydownHandler","resizeModalVideoWhenHeightGreaterThanWindowHeight","removeEventListener","modal","focus","preventDefault","stopPropagation","activeElement","modalbtn","_this2","clearTimeout","setTimeout","width","url","hasOwnProperty","youtube","videoId","getQueryString","vimeo","youku","opt","channel","getYoutubeUrl","getVimeoUrl","getYoukuUrl","arr","split","Number","maxHeight","maxWidth","height","floor","_this3","modalVideoInnerStyle","modalVideoIframeWrapStyle","paddingBottom","getPadding","modalVideoEffect","animationSpeed","modalVideo","tabIndex","aria","openMessage","ref","node","onKeyDown","modalVideoBody","modalVideoInner","style","modalVideoIframeWrap","modalVideoCloseBtn","dismissBtnMessage","src","getVideoUrl","frameBorder","allow","allowFullScreen","Component","defaultProps","autoplay","cc_load_policy","color","controls","disablekb","enablejsapi","end","fs","h1","iv_load_policy","list","listType","loop","modestbranding","origin","playlist","playsinline","rel","showinfo","start","wmode","theme","mute","api","autopause","byline","callback","maxheight","maxwidth","player_id","portrait","title","xhtml","show_related","modalVideoClose","createSvgIcon","d","useStyles","makeStyles","root","flexWrap","margin","spacing","extendedIcon","marginRight","paperHeading","padding","table","minWidth","textMiddle","verticalAlign","iconMargin","backgroundColor","iconcolor","headingButton","display","flexDirection","justifyContent","headingAlignment","alignItems","gap","textAlign","Marginbutton","paperPaddingRightLeft","IOSSwitch","styled","Switch","borderRadius","content","position","top","transform","backgroundImage","encodeURIComponent","palette","getContrastText","primary","main","left","right","boxShadow","focusVisibleClassName","disableRipple","transitionDuration","mode","opacity","border","grey","boxSizing","transition","transitions","duration","DriverManagement","classes","useLocation","useRef","tableData","setTableData","startDate","setStartDate","endDate","setEndDate","startFilterValue","setStartFilterValue","endFilterValue","setEndFilterValue","status","setStatus","open","setOpen","totalUserListCount","settotalUserListCount","limit","search","setSearch","ServiceTypeButtons","setServiceTypeButtons","DutyStatus","setDutyStatus","ActiveInactiveDuty","setActiveInactiveDuty","ServiceTypeId","setServiceTypeId","SingleTaxi","DesignatedDriver","PetCategory","PackageCategory","ServiceTypeButtonColor","setServiceTypeButtonColor","approved","pending","disapproved","StatusButtonColor","setStatusButtonColor","checkedValue","setCheckedValue","SpecificDriverid","setSpecificDriverid","page","setPage","rowsPerPage","setRowsPerPage","getCategoriesContent","getServiceTypes","a","serviceType","JobStatus","axios","get","data","console","log","docs","setSearchedData","totalDocs","toast","error","POSITION","TOP_RIGHT","DRIVER","ServiceType_Url","BlockDriver","id","confirm","delete","success","UnBlockDriver","DeleteDriver","info","getFilteredData","newData","Date","newData1","startDateVariable","getFullYear","getMonth","getDate","endDateVariable","toLocaleDateString","SearchDriver","timer","args","myDeb","sort","objA","objB","driver","createdAt","Fragment","elevation","marginTop","onChange","searchVal","onCancelSearch","placeholder","dateFormat","date","minDate","variant","map","ele","values","_id","flex","arrow","stickyHeader","fontWeight","category","index","hover","component","scope","username","charAt","toUpperCase","slice","rating","test","toFixed","getUTCDate","getUTCMonth","getUTCFullYear","newObj","blockService","includes","assign","size","history","push","pathname","isBlock","rowsPerPageOptions","count","onPageChange","event","newPage","onRowsPerPageChange","parseInt","fullWidth","cursor","initialValues","onSubmit","finalData","filter","post","serviceIds","blockServices","setFieldValue","checked","type"],"mappings":"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","file":"static/js/30.6897a665.chunk.js","sourcesContent":["export const nameGenerator = (): string => {\n  return '_' + Math.random().toString(36).substr(2, 9);\n};\n","import { nameGenerator } from './helpers/unique-name';\n\nexport const mountRootId = `confirm-box-root${nameGenerator()}`;\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { mountRootId } from '../config';\n\ntype Props = {\n  children: Element;\n};\n\nexport const Portal: React.FC<Props> = ({ children }: Props) => {\n  const mount = document.getElementById(mountRootId) as HTMLElement;\n  const el = document.createElement('div');\n\n  useEffect((): any => {\n    mount.appendChild(el);\n    return () => mount.removeChild(el);\n  }, [el, mount]);\n\n  return createPortal(children, el);\n};\n","import React, { useState } from 'react';\nimport './styles.scss';\nimport { Options } from '../types';\n\ntype Props = {\n  message: string;\n  resolver: (decision: boolean) => void;\n  options?: Options;\n};\n\nconst ConfirmBox: React.FC<Props> = ({ resolver, message, options }: Props) => {\n  const [isOpen, setIsOpen] = useState(true);\n\n  const onConfirmPopup = () => {\n    setIsOpen(false);\n    resolver(true);\n  };\n\n  const onCancelPopup = () => {\n    setIsOpen(false);\n    resolver(false);\n  };\n\n  const onOverlay = () => {\n    if (!options?.closeOnOverlayClick) return;\n    setIsOpen(false);\n    resolver(false);\n  };\n\n  const render = () => {\n    const { classNames } = options || {};\n\n    const containerClassNames = `confirm-box__content ${classNames?.container || ''}\n    `;\n    const confirmButtonClassNames = `${classNames?.buttons || ''} ${\n      classNames?.confirmButton || ''\n    }\n    `;\n    const cancelButtonClassNames = `${classNames?.buttons || ''} ${\n      classNames?.cancelButton || ''\n    }`;\n\n    if (!options?.render) {\n      return (\n        <div className={containerClassNames}>\n          <span>{message}</span>\n          <div className=\"confirm-box__actions\">\n            <button\n              onClick={onConfirmPopup}\n              role=\"confirmable-button\"\n              className={confirmButtonClassNames}\n            >\n              {options?.labels?.confirmable ? options?.labels?.confirmable : 'Yes'}\n            </button>\n\n            <button\n              onClick={onCancelPopup}\n              role=\"cancellable-button\"\n              className={cancelButtonClassNames}\n            >\n              {options?.labels?.cancellable ? options?.labels?.cancellable : 'No'}\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    return options.render(message, onConfirmPopup, onCancelPopup);\n  };\n\n  return isOpen ? (\n    <div className=\"confirm-box\">\n      {render()}\n      <div className=\"confirm-box__overlay\" onClick={onOverlay} />\n    </div>\n  ) : null;\n};\n\nexport default ConfirmBox;\n","import ReactDOM from 'react-dom';\n\nimport { Portal } from './portal';\nimport ConfirmBox from './confirm';\nimport React from 'react';\nimport { mountRootId } from './config';\nimport { Options } from './types';\n\nexport const confirm = async (message: string, options?: Options): Promise<any> => {\n  const mount = await document.getElementById(mountRootId);\n  if (!mount) {\n    const rootMount = await document.createElement('div');\n    await rootMount.setAttribute('id', mountRootId);\n    document.body.appendChild(rootMount);\n  }\n\n  return new Promise((resolve) => {\n    const ConfirmBoxEl = React.createElement(ConfirmBox, {\n      resolver: resolve,\n      message,\n      options,\n    });\n    const PortalEl = React.createElement(Portal, null, ConfirmBoxEl);\n    ReactDOM.render(PortalEl, document.getElementById(mountRootId));\n  });\n};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _CSSTransition = require('react-transition-group/CSSTransition');\n\nvar _CSSTransition2 = _interopRequireDefault(_CSSTransition);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ModalVideo = function (_React$Component) {\n  _inherits(ModalVideo, _React$Component);\n\n  function ModalVideo(props) {\n    _classCallCheck(this, ModalVideo);\n\n    var _this = _possibleConstructorReturn(this, (ModalVideo.__proto__ || Object.getPrototypeOf(ModalVideo)).call(this, props));\n\n    _this.state = {\n      isOpen: false,\n      modalVideoWidth: _this.getWidthFulfillAspectRatio(_this.props.ratio, window.innerHeight, window.innerWidth)\n    };\n    _this.closeModal = _this.closeModal.bind(_this);\n    _this.updateFocus = _this.updateFocus.bind(_this);\n\n    _this.timeout; // used for resizing video.\n    return _this;\n  }\n\n  _createClass(ModalVideo, [{\n    key: 'openModal',\n    value: function openModal() {\n      this.setState({ isOpen: true });\n    }\n  }, {\n    key: 'closeModal',\n    value: function closeModal() {\n      this.setState({ isOpen: false });\n      if (typeof this.props.onClose === 'function') {\n        this.props.onClose();\n      }\n    }\n  }, {\n    key: 'keydownHandler',\n    value: function keydownHandler(e) {\n      if (e.keyCode === 27) {\n        this.closeModal();\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      document.addEventListener('keydown', this.keydownHandler.bind(this));\n      window.addEventListener('resize', this.resizeModalVideoWhenHeightGreaterThanWindowHeight.bind(this));\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      document.removeEventListener('keydown', this.keydownHandler.bind(this));\n      window.removeEventListener('resize', this.resizeModalVideoWhenHeightGreaterThanWindowHeight.bind(this));\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      if (this.state.isOpen && this.modal) {\n        this.modal.focus();\n      }\n    }\n  }, {\n    key: 'updateFocus',\n    value: function updateFocus(e) {\n      if (e.keyCode === 9) {\n        e.preventDefault();\n        e.stopPropagation();\n        if (this.modal === document.activeElement) {\n          this.modalbtn.focus();\n        } else {\n          this.modal.focus();\n        }\n      }\n    }\n\n    /**\n     * Resize modal-video-iframe-wrap when window size changed when the height of the video is greater than the height of the window.\n     */\n\n  }, {\n    key: 'resizeModalVideoWhenHeightGreaterThanWindowHeight',\n    value: function resizeModalVideoWhenHeightGreaterThanWindowHeight() {\n      var _this2 = this;\n\n      clearTimeout(this.timeout);\n\n      this.timeout = setTimeout(function () {\n        var width = _this2.getWidthFulfillAspectRatio(_this2.props.ratio, window.innerHeight, window.innerWidth);\n        if (_this2.state.modalVideoWidth != width) {\n          _this2.setState({\n            modalVideoWidth: width\n          });\n        }\n      }, 10);\n    }\n  }, {\n    key: 'getQueryString',\n    value: function getQueryString(obj) {\n      var url = '';\n      for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          if (obj[key] !== null) {\n            url += key + '=' + obj[key] + '&';\n          }\n        }\n      }\n      return url.substr(0, url.length - 1);\n    }\n  }, {\n    key: 'getYoutubeUrl',\n    value: function getYoutubeUrl(youtube, videoId) {\n      var query = this.getQueryString(youtube);\n      return '//www.youtube.com/embed/' + videoId + '?' + query;\n    }\n  }, {\n    key: 'getVimeoUrl',\n    value: function getVimeoUrl(vimeo, videoId) {\n      var query = this.getQueryString(vimeo);\n      return '//player.vimeo.com/video/' + videoId + '?' + query;\n    }\n  }, {\n    key: 'getYoukuUrl',\n    value: function getYoukuUrl(youku, videoId) {\n      var query = this.getQueryString(youku);\n      return '//player.youku.com/embed/' + videoId + '?' + query;\n    }\n  }, {\n    key: 'getVideoUrl',\n    value: function getVideoUrl(opt, videoId) {\n      if (opt.channel === 'youtube') {\n        return this.getYoutubeUrl(opt.youtube, videoId);\n      } else if (opt.channel === 'vimeo') {\n        return this.getVimeoUrl(opt.vimeo, videoId);\n      } else if (opt.channel === 'youku') {\n        return this.getYoukuUrl(opt.youku, videoId);\n      } else if (opt.channel === 'custom') {\n        return opt.url;\n      }\n    }\n  }, {\n    key: 'getPadding',\n    value: function getPadding(ratio) {\n      var arr = ratio.split(':');\n      var width = Number(arr[0]);\n      var height = Number(arr[1]);\n      var padding = height * 100 / width;\n      return padding + '%';\n    }\n\n    /**\n     * Calculate the width of the video fulfill aspect ratio.\n     * When the height of the video is greater than the height of the window,\n     * this function return the width that fulfill the aspect ratio for the height of the window.\n     * In other cases, this function return '100%'(the height relative to the width is determined by css).\n     * \n     * @param string ratio\n     * @param number maxWidth\n     * @returns number | '100%'\n     */\n\n  }, {\n    key: 'getWidthFulfillAspectRatio',\n    value: function getWidthFulfillAspectRatio(ratio, maxHeight, maxWidth) {\n      var arr = ratio.split(':');\n      var width = Number(arr[0]);\n      var height = Number(arr[1]);\n\n      // Height that fulfill the aspect ratio for maxWidth.\n      var videoHeight = maxWidth * (height / width);\n\n      if (maxHeight < videoHeight) {\n        // when the height of the video is greater than the height of the window.\n        // calculate the width that fulfill the aspect ratio for the height of the window.\n\n        // ex: 16:9 aspect ratio\n        // 16:9 = width : height\n        // → width = 16 / 9 * height\n        return Math.floor(width / height * maxHeight);\n      }\n\n      return '100%';\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var modalVideoInnerStyle = {\n        width: this.state.modalVideoWidth\n      };\n\n      var modalVideoIframeWrapStyle = {\n        paddingBottom: this.getPadding(this.props.ratio)\n      };\n\n      return _react2.default.createElement(\n        _CSSTransition2.default,\n        {\n          classNames: this.props.classNames.modalVideoEffect,\n          timeout: this.props.animationSpeed\n        },\n        function () {\n          if (!_this3.state.isOpen) {\n            return null;\n          }\n\n          return _react2.default.createElement(\n            'div',\n            { className: _this3.props.classNames.modalVideo, tabIndex: '-1', role: 'dialog',\n              'aria-label': _this3.props.aria.openMessage, onClick: _this3.closeModal, ref: function ref(node) {\n                _this3.modal = node;\n              }, onKeyDown: _this3.updateFocus },\n            _react2.default.createElement(\n              'div',\n              { className: _this3.props.classNames.modalVideoBody },\n              _react2.default.createElement(\n                'div',\n                { className: _this3.props.classNames.modalVideoInner, style: modalVideoInnerStyle },\n                _react2.default.createElement(\n                  'div',\n                  { className: _this3.props.classNames.modalVideoIframeWrap, style: modalVideoIframeWrapStyle },\n                  _react2.default.createElement('button', { className: _this3.props.classNames.modalVideoCloseBtn, 'aria-label': _this3.props.aria.dismissBtnMessage, ref: function ref(node) {\n                      _this3.modalbtn = node;\n                    }, onKeyDown: _this3.updateFocus }),\n                  _this3.props.children || _react2.default.createElement('iframe', { width: '460', height: '230', src: _this3.getVideoUrl(_this3.props, _this3.props.videoId), frameBorder: '0', allow: 'accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture', allowFullScreen: _this3.props.allowFullScreen, tabIndex: '-1' })\n                )\n              )\n            )\n          );\n        }\n      );\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(props) {\n      return { isOpen: props.isOpen };\n    }\n  }]);\n\n  return ModalVideo;\n}(_react2.default.Component);\n\nexports.default = ModalVideo;\n\n\nModalVideo.defaultProps = {\n  channel: 'youtube',\n  isOpen: false,\n  youtube: {\n    autoplay: 1,\n    cc_load_policy: 1,\n    color: null,\n    controls: 1,\n    disablekb: 0,\n    enablejsapi: 0,\n    end: null,\n    fs: 1,\n    h1: null,\n    iv_load_policy: 1,\n    list: null,\n    listType: null,\n    loop: 0,\n    modestbranding: null,\n    origin: null,\n    playlist: null,\n    playsinline: null,\n    rel: 0,\n    showinfo: 1,\n    start: 0,\n    wmode: 'transparent',\n    theme: 'dark',\n    mute: 0\n  },\n  ratio: '16:9',\n  vimeo: {\n    api: false,\n    autopause: true,\n    autoplay: true,\n    byline: true,\n    callback: null,\n    color: null,\n    height: null,\n    loop: false,\n    maxheight: null,\n    maxwidth: null,\n    player_id: null,\n    portrait: true,\n    title: true,\n    width: null,\n    xhtml: false\n  },\n  youku: {\n    autoplay: 1,\n    show_related: 0\n  },\n  allowFullScreen: true,\n  animationSpeed: 300,\n  classNames: {\n    modalVideoEffect: 'modal-video-effect',\n    modalVideo: 'modal-video',\n    modalVideoClose: 'modal-video-close',\n    modalVideoBody: 'modal-video-body',\n    modalVideoInner: 'modal-video-inner',\n    modalVideoIframeWrap: 'modal-video-movie-wrap',\n    modalVideoCloseBtn: 'modal-video-close-btn'\n  },\n  aria: {\n    openMessage: 'You just opened the modal video',\n    dismissBtnMessage: 'Close the modal by clicking here'\n  }\n};","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport classNames from \"classnames\";\r\nimport axios from \"../../axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport moment from \"moment\";\r\n// import Switch from '@mui/material/Switch';\r\n// import { styled } from '@mui/material/styles';\r\n// import Skeleton from 'react-loading-skeleton'\r\n// import 'react-loading-skeleton/dist/skeleton.css'\r\nimport {\r\n  Button,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Switch,\r\n  styled,\r\n  Tooltip,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport Swal from \"sweetalert2\";\r\nimport { confirm } from \"react-confirm-box\";\r\n\r\n// import { Delete } from '@material-ui/icons';\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport BlockIcon from \"@material-ui/icons/Block\";\r\n// import ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n\r\n// For Table\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport { get, identity, orderBy, sortBy } from \"lodash\";\r\n\r\n//history\r\nimport { useHistory } from \"react-router-dom\";\r\n// import AddEditCategory from \"../AccountManagement/Account_Details\";\r\n\r\n// import './Category_Management.css' ;\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { DeleteOutline, WidgetsOutlined } from \"@material-ui/icons\";\r\nimport ModalVideo from \"react-modal-video\";\r\n// import 'node_modules/react-modal-video/scss/modal-video.scss';\r\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\r\nimport DRIVER from \"axios\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport { Close, Search } from \"@material-ui/icons\";\r\nimport { ServiceType_Url } from \"../../statics/constants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexWrap: \"wrap\",\r\n    // marginTop: '5rem',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  paperHeading: {\r\n    padding: \"1rem 0rem\",\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  textMiddle: {\r\n    verticalAlign: \"middle !important\",\r\n  },\r\n  iconMargin: {\r\n    margin: \"0.5rem\",\r\n    color: \"#fff\",\r\n    backgroundColor: \"#696969\",\r\n  },\r\n  iconcolor: {\r\n    margin: \"0.5rem\",\r\n    color: \"#fff\",\r\n    backgroundColor: \"#0294b3 !important\",\r\n  },\r\n  headingButton: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    padding: \"10px\",\r\n  },\r\n  headingAlignment: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    // padding: \"0 2rem 0 2rem\"\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n    [\"@media (max-width:780px)\"]: {\r\n      // eslint-disable-line no-useless-computed-key\r\n      flexDirection: \"column\",\r\n      width: \"100%\",\r\n      gap: \"1rem\",\r\n      justifyContent: \"center\",\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n  Marginbutton: {\r\n    margin: \"0.5rem\",\r\n  },\r\n  container: {\r\n    // maxHeight: \"58vh\",\r\n  },\r\n  paperPaddingRightLeft: {\r\n    padding: \"0rem 1rem\",\r\n  },\r\n}));\r\n\r\nconst Android12Switch = styled(Switch)(({ theme }) => ({\r\n  padding: 8,\r\n  \"& .MuiSwitch-track\": {\r\n    borderRadius: 22 / 2,\r\n    \"&:before, &:after\": {\r\n      content: '\"\"',\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      width: 16,\r\n      height: 16,\r\n    },\r\n    \"&:before\": {\r\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n        theme.palette.getContrastText(theme.palette.primary.main)\r\n      )}\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"/></svg>')`,\r\n      left: 12,\r\n    },\r\n    \"&:after\": {\r\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n        theme.palette.getContrastText(theme.palette.primary.main)\r\n      )}\" d=\"M19,13H5V11H19V13Z\" /></svg>')`,\r\n      right: 12,\r\n    },\r\n  },\r\n  \"& .MuiSwitch-thumb\": {\r\n    boxShadow: \"none\",\r\n    width: 16,\r\n    height: 16,\r\n    margin: 2,\r\n  },\r\n}));\r\nconst IOSSwitch = styled((props) => <Switch focusVisibleClassName=\".Mui-focusVisible\" disableRipple {...props} />)(\r\n  ({ theme }) => ({\r\n    width: 42,\r\n    height: 26,\r\n    padding: 0,\r\n    \"& .MuiSwitch-switchBase\": {\r\n      padding: 0,\r\n      margin: 2,\r\n      transitionDuration: \"300ms\",\r\n      \"&.Mui-checked\": {\r\n        transform: \"translateX(16px)\",\r\n        color: \"#fff\",\r\n        \"& + .MuiSwitch-track\": {\r\n          backgroundColor: theme.palette.mode === \"dark\" ? \"#006FFF\" : \"#006FFF\",\r\n          opacity: 1,\r\n          border: 0,\r\n        },\r\n        \"&.Mui-disabled + .MuiSwitch-track\": {\r\n          opacity: 0.5,\r\n        },\r\n      },\r\n      \"&.Mui-focusVisible .MuiSwitch-thumb\": {\r\n        color: \"#33cf4d\",\r\n        border: \"6px solid #fff\",\r\n      },\r\n      \"&.Mui-disabled .MuiSwitch-thumb\": {\r\n        color: theme.palette.mode === \"light\" ? theme.palette.grey[100] : theme.palette.grey[600],\r\n      },\r\n      \"&.Mui-disabled + .MuiSwitch-track\": {\r\n        opacity: theme.palette.mode === \"light\" ? 0.7 : 0.3,\r\n      },\r\n    },\r\n    \"& .MuiSwitch-thumb\": {\r\n      boxSizing: \"border-box\",\r\n      width: 22,\r\n      height: 22,\r\n    },\r\n    \"& .MuiSwitch-track\": {\r\n      borderRadius: 26 / 2,\r\n      backgroundColor: theme.palette.mode === \"light\" ? \"#E9E9EA\" : \"#39393D\",\r\n      opacity: 1,\r\n      transition: theme.transitions.create([\"background-color\"], {\r\n        duration: 500,\r\n      }),\r\n    },\r\n  })\r\n);\r\n\r\nexport default function DriverManagement(props) {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const fileRef = useRef(null);\r\n  // const history=useHistory();\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [startFilterValue, setStartFilterValue] = useState(\"\");\r\n  const [endFilterValue, setEndFilterValue] = useState(\"\");\r\n  const [status, setStatus] = useState(\"approved\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [open, setOpen] = useState(false);\r\n  const [totalUserListCount, settotalUserListCount] = useState(90);\r\n  const [limit, setLimit] = useState(10);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [ServiceTypeButtons, setServiceTypeButtons] = useState([]);\r\n  const [DutyStatus, setDutyStatus] = useState(\"OFFDUTY\");\r\n  const [ActiveInactiveDuty, setActiveInactiveDuty] = useState(0);\r\n  const [ServiceTypeId, setServiceTypeId] = useState(\"62d53aa9bf652aa3778946ca\");\r\n  const [ServiceTypeButtonColor, setServiceTypeButtonColor] = useState({\r\n    SingleTaxi: true,\r\n    DesignatedDriver: false,\r\n    PetCategory: false,\r\n    PackageCategory: false,\r\n  });\r\n  const [StatusButtonColor, setStatusButtonColor] = useState({\r\n    approved: true,\r\n    pending: false,\r\n    disapproved: false,\r\n  });\r\n  let statusArray = [\"Approved\", \"Pending\", \"Disapproved\"];\r\n  const [checkedValue, setCheckedValue] = useState({\r\n    SingleTaxi: false,\r\n    DesignatedDriver: false,\r\n    PetCategory: false,\r\n    PackageCategory: false,\r\n  });\r\n  const [SpecificDriverid, setSpecificDriverid] = useState(\"\");\r\n  // status switch\r\n  // const [checked, setChecked] = useState(true);\r\n\r\n  // For Pagination\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    console.log(newPage);\r\n    console.log({ event, newPage });\r\n    getCategoriesContent(newPage + 1, rowsPerPage, status, search);\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    console.log(+event.target.value);\r\n    // setRowsPerPage(+event.target.value);\r\n    // setPage(0);\r\n    getCategoriesContent(page, event.target.value, status, search);\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    console.log({ event });\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // const sstatus = location.search;\r\n    // if (sstatus) {\r\n    //   const statusArray = sstatus.split(\"=\");\r\n    //   console.log(statusArray[1], \":::::::::\");\r\n    //   setStatus(statusArray[1]);\r\n    //   getCategoriesContent(page, limit, ServiceTypeId, 0, \"pending\", search);\r\n    // }\r\n    getCategoriesContent();\r\n    getServiceTypes();\r\n  }, []);\r\n\r\n  //get content\r\n  const getCategoriesContent = async (\r\n    page = 1,\r\n    limit = 10,\r\n    serviceType = \"62d53aa9bf652aa3778946ca\",\r\n    JobStatus = 0,\r\n    status = \"approved\",\r\n    search = \"\",\r\n    startFilterValue = \"\",\r\n    endFilterValue = \"\"\r\n  ) => {\r\n    try {\r\n      const { data } = await axios.get(\r\n        `/private/driverList?page=${page}&limit=${limit}&serviceType=${serviceType}&JobStatus=${JobStatus}&status=${status}&search=${search}&start_date=${startFilterValue}&end_date=${endFilterValue}`\r\n      );\r\n      console.log(data);\r\n      setTableData([...data.data.docs]);\r\n      setSearchedData(data.data.docs);\r\n      settotalUserListCount(data.data.totalDocs);\r\n      setStatus(status);\r\n      setSearch(search);\r\n      if (data.data.docs.length === 0 || data.status === 500) {\r\n        toast.error(\"No Data Found\", {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const getServiceTypes = async () => {\r\n    try {\r\n      const { data } = await DRIVER.get(`${ServiceType_Url}`);\r\n      console.log(data.data);\r\n      setServiceTypeButtons(data.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  console.log(tableData, \"tableData\");\r\n\r\n  // For Search\r\n  const [searched, setSearched] = useState(\"\");\r\n  const [searchedData, setSearchedData] = useState([]);\r\n\r\n  const requestSearch = (searchedVal) => {\r\n    const filteredRows = searchedData.filter((row) => {\r\n      let name = row.first_name + \" \" + row.last_name;\r\n      let email = row.email_id;\r\n      return name.toLowerCase().includes(searchedVal.toLowerCase()) || email.toLowerCase().includes(searchedVal.toLowerCase());\r\n    });\r\n    setTableData(filteredRows);\r\n  };\r\n\r\n  const cancelSearch = () => {\r\n    getCategoriesContent(page, limit, ServiceTypeId, ActiveInactiveDuty, status, \"\", startFilterValue, endFilterValue);\r\n    // setSearched(\"\");\r\n    //  console.log(searchedData);\r\n    //  requestSearch()\r\n  };\r\n\r\n  const sorting = () => {\r\n    //   if(sort){\r\n    //  let tableSortedData= sortBy(tableData,\r\n    //     [function(o) { console.log(o); return new Date(o.postId.createdAt).getTime(); }])\r\n    //     console.log(tableSortedData);\r\n    // setTableData(tableSortedData);\r\n    //   }else {\r\n    //  let tableSortedData= sortBy(tableData,\r\n    //     [function(o) { console.log(o); return new Date(o.postId.createdAt).getTime(); }],\r\n    //     { reverse: true })\r\n    //     setTableData(tableSortedData);\r\n    //   }\r\n    let sortedData = sortBy(tableData, [\r\n      function (o) {\r\n        // console.log(o);\r\n        return new Date(o.createdAt).getTime();\r\n      },\r\n    ]).reverse();\r\n    return sortedData;\r\n  };\r\n\r\n  const BlockDriver = async (id) => {\r\n    if (window.confirm(\"Are you sure you want to block this driver?\")) {\r\n      try {\r\n        // console.log(category);\r\n        const { data } = await axios.delete(`/private/driverDelete/${id}?status=block`);\r\n        console.log(data);\r\n        getCategoriesContent(page, limit, ServiceTypeId, ActiveInactiveDuty, status, search, startFilterValue, endFilterValue);\r\n        toast.success(\"Driver Blocked\", {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      toast.error(\"Operation Cancelled\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    }\r\n\r\n    //      Swal.fire({\r\n    //   title: \"Are you sure?\",\r\n    //   // text: \"You won't be able to revert this!\",\r\n    //   icon: \"warning\",\r\n    //   showCancelButton: true,\r\n    //   confirmButtonColor: \"#0e7bff\",\r\n    //   cancelButtonColor: \"#d33\",\r\n    //   confirmButtonText: \"Yes, Block User!\",\r\n    //   })\r\n\r\n    //         .then((result) => {\r\n    //   if (result.isConfirmed) {\r\n\r\n    //       const { data } =  axios.post(`/admin/BlockDriver`, {\r\n    //         _id: id,\r\n    //         is_blocked: true,\r\n    //       }).then((res) => {\r\n    //         console.log(res.data);\r\n    //         getCategoriesContent();\r\n    //         Swal.fire(\"Blocked!\", \"User has been blocked.\", \"success\");\r\n    //       });\r\n\r\n    //   }\r\n    //   else {\r\n    //     Swal.fire(\"Cancelled\", \"Operation has been cancelled.\", \"error\");\r\n    //   }\r\n    // });\r\n  };\r\n\r\n  const UnBlockDriver = async (id) => {\r\n    if (window.confirm(\"Are you sure you want to unblock this driver?\")) {\r\n      try {\r\n        // console.log(category);\r\n        const { data } = await axios.delete(`/private/driverDelete/${id}?status=unblock`);\r\n        console.log(data);\r\n        getCategoriesContent(page, limit, ServiceTypeId, ActiveInactiveDuty, status, search, startFilterValue, endFilterValue);\r\n        toast.success(\"Driver Unblocked\", {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      toast.error(\"Operation Cancelled\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    }\r\n    // type2\r\n    //  Swal.fire({\r\n    //    title: \"Are you sure?\",\r\n    //    // text: \"You won't be able to revert this!\",\r\n    //    icon: \"warning\",\r\n    //    showCancelButton: true,\r\n    //    confirmButtonColor: \"#0e7bff\",\r\n    //    cancelButtonColor: \"#d33\",\r\n    //    confirmButtonText: \"Yes, UnBlock User!\",\r\n    //  })\r\n    //  .then((result) => {\r\n    //    if (result.isConfirmed) {\r\n    //      const { data } = axios\r\n    //        .post(`/admin/BlockDriver`, {\r\n    //          _id: id,\r\n    //          is_blocked: false,\r\n    //        })\r\n    //        .then((res) => {\r\n    //          console.log(res.data);\r\n    //          getCategoriesContent();\r\n    //                   Swal.fire(\r\n    //                     \"UnBlocked!\",\r\n    //                     \"User has been unblocked.\",\r\n    //                     \"success\"\r\n    //                   );\r\n\r\n    //        });\r\n\r\n    //    } else {\r\n    //      Swal.fire(\"Cancelled\", \"Operation has been cancelled.\", \"error\");\r\n    //    }\r\n    //  });\r\n  };\r\n\r\n  const DeleteDriver = async (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this user?\")) {\r\n      try {\r\n        const { data } = await axios.delete(`/private/driverDelete/${id}?status=delete`);\r\n        getCategoriesContent(page, limit, ServiceTypeId, ActiveInactiveDuty, status, search.startFilterValue, endFilterValue);\r\n        toast.success(\"Driver Deleted\", {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      toast.error(\"You have cancelled the operation\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (startDate === null && endDate === null) {\r\n      getCategoriesContent(page, limit, ServiceTypeId, ActiveInactiveDuty, status, search, startFilterValue, endFilterValue);\r\n    } else if (startDate === null || endDate === null) {\r\n      toast.info(\"Please Select Both Dates To Get Filtered Data\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n      getCategoriesContent(page, limit, ServiceTypeId, ActiveInactiveDuty, status, search, startFilterValue, endFilterValue);\r\n    } else if (startDate !== null && endDate !== null) {\r\n      getFilteredData();\r\n    }\r\n  }, [startDate, endDate]);\r\n\r\n  console.log(startDate);\r\n  console.log(endDate);\r\n\r\n  const getFilteredData = async () => {\r\n    console.log(startDate);\r\n    console.log(endDate);\r\n    let newData = new Date(startDate);\r\n    let newData1 = new Date(endDate);\r\n    let startDateVariable = newData.getFullYear() + \"-\" + (newData.getMonth() + 1) + \"-\" + newData.getDate();\r\n    let endDateVariable = newData1.getFullYear() + \"-\" + (newData1.getMonth() + 1) + \"-\" + newData1.getDate();\r\n    setStartFilterValue(startDateVariable);\r\n    setEndFilterValue(endDateVariable);\r\n\r\n    try {\r\n      const { data } = await axios.get(\r\n        `/private/driverList?page=${page}&limit=${limit}&serviceType=${ServiceTypeId}&JobStatus=${ActiveInactiveDuty}&status=${status}&search=${search}&start_date=${startDateVariable}&end_date=${endDateVariable}`\r\n      );\r\n      console.log(data);\r\n\r\n      console.log(newData.getFullYear() + \"-\" + (newData.getMonth() + 1) + \"-\" + newData.getDate());\r\n      console.log(newData.getFullYear() + \"-\" + (newData1.getMonth() + 1) + \"-\" + newData1.getDate());\r\n      console.log(newData1.toLocaleDateString());\r\n      if (data.data.docs !== null && data.data.docs.length > 0) {\r\n        setTableData([...data.data.docs]);\r\n\r\n        settotalUserListCount(data.data.totalDocs);\r\n        setStatus(status);\r\n        setSearch(search);\r\n        toast.success(\"Filtered Data\", {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n      } else {\r\n        setTableData([]);\r\n        toast.error(\"No Data Found\", {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n        setSearchedData([]);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const ViewDriverData = (data) => {\r\n    props.history.push({\r\n      pathname: \"/adminPanel/driver-view\",\r\n      state: data,\r\n    });\r\n  };\r\n\r\n  function myDeb(call, d = 1000) {\r\n    let timer;\r\n    return function (...args) {\r\n      clearTimeout(timer);\r\n      timer = setTimeout(() => {\r\n        call(...args);\r\n      }, d);\r\n    };\r\n  }\r\n\r\n  const SearchDriver = myDeb((search) => {\r\n    getCategoriesContent(page, limit, ServiceTypeId, ActiveInactiveDuty, status, search, startFilterValue, endFilterValue);\r\n  });\r\n\r\n  const sortData = () => {\r\n    let data = tableData.sort((objA, objB) => new Date(objB.driver.createdAt) - new Date(objA.driver.createdAt));\r\n    return data;\r\n  };\r\n\r\n  console.log(sortData());\r\n\r\n  const sanitizeRating = (rating) => {\r\n    let regexNumber = /^[0-9]+$/;\r\n    if (regexNumber.test(rating)) {\r\n      return rating;\r\n    } else if (typeof rating === \"number\") {\r\n      // return rating.slice(0, 3);\r\n\r\n      return +rating.toFixed(1);\r\n    }\r\n  };\r\n  const blockServices = (values) => {\r\n    let newData = [];\r\n    console.log(\"checkedValues\", checkedValue);\r\n    if (checkedValue.SingleTaxi) {\r\n      newData.push(values.SingleTaxi);\r\n    }\r\n    if (checkedValue.DesignatedDriver) {\r\n      newData.push(values.DesignatedDriver);\r\n    }\r\n    if (checkedValue.PetCategory) {\r\n      newData.push(values.PetCategory);\r\n    }\r\n    if (checkedValue.PackageCategory) {\r\n      newData.push(values.PackageCategory);\r\n    }\r\n\r\n    let finalData = newData.filter((a) => a);\r\n    console.log(finalData);\r\n    try {\r\n      const { data } = axios.post(`/private/driverBlockServices/${SpecificDriverid}`, {\r\n        serviceIds: finalData,\r\n      });\r\n      console.log(data);\r\n      setSpecificDriverid(\"\");\r\n      setOpen(false);\r\n      setCheckedValue({\r\n        ...checkedValue,\r\n        SingleTaxi: false,\r\n        DesignatedDriver: false,\r\n        PetCategory: false,\r\n        PackageCategory: false,\r\n      });\r\n      getCategoriesContent(page, limit, ServiceTypeId, ActiveInactiveDuty, status, search, startFilterValue, endFilterValue);\r\n      toast.success(\"Success\", { position: \"top-right\" });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  console.log(checkedValue);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className={classes.root}>\r\n          <Paper>\r\n            <div className={classes.paperPaddingRightLeft}>\r\n              <div className=\"\">\r\n                <Paper elevation={0} className={classNames(classes.paperHeading, classes.headingAlignment)}>\r\n                  <h3 style={{}}>Manage Driver</h3>\r\n                  <SearchBar\r\n                    // value={searched}\r\n                    style={{ width: \"30%\", marginTop: 70 }}\r\n                    className=\"heightfix\"\r\n                    onChange={(searchVal) => SearchDriver(searchVal)}\r\n                    onCancelSearch={() => cancelSearch()}\r\n                    placeholder=\"Search by User Name,Mobile Number\"\r\n                  />\r\n                  <div>\r\n                    <style>\r\n                      {`\r\n                        .react-date-picker__calendar{\r\n                          z-index: 3 !important;\r\n                        }\r\n                      `}\r\n                    </style>\r\n                    <div className=\"d-flex text-center align-items-baseline \">\r\n                      <h5>From:</h5> &nbsp;\r\n                      <DatePicker\r\n                        value={startDate}\r\n                        dateFormat=\"DD/MM/YYYY\"\r\n                        onChange={(date) => {\r\n                          setStartDate(date);\r\n                        }}\r\n                      />\r\n                      &emsp;<h5>To:&nbsp;</h5>\r\n                      <DatePicker\r\n                        onChange={(date) => {\r\n                          setEndDate(date);\r\n                        }}\r\n                        minDate={startDate}\r\n                        value={endDate}\r\n                        dateFormat=\"DD/MM/YYYY\"\r\n                      />\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        className=\"buttoncss mx-3\"\r\n                        style={{ backgroundColor: \"#006FFF\", color: \"#fff\" }}\r\n                        onClick={() => {\r\n                          setStartDate(null);\r\n                          setEndDate(null);\r\n                          setStartFilterValue(\"\");\r\n                          setEndFilterValue(\"\");\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        RESET\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Paper>\r\n\r\n                <Paper elevation={0} className=\"my-3\"></Paper>\r\n\r\n                {/* //new design */}\r\n\r\n                {/* <br /> */}\r\n\r\n                {/* status end */}\r\n                <Paper elevation={0}>\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    {ServiceTypeButtons.map((ele, i) => (\r\n                      <Button\r\n                        key={i}\r\n                        variant=\"contained\"\r\n                        className=\"buttoncss mx-3\"\r\n                        style={{\r\n                          backgroundColor: Object.values(ServiceTypeButtonColor)[i] ? \"#006FFF\" : \"#c4c4c4\",\r\n                          color: \"#fff\",\r\n                        }}\r\n                        onClick={() => {\r\n                          setServiceTypeId(ele._id);\r\n                          setDutyStatus(\"ONDUTY\");\r\n                          switch (i) {\r\n                            case 0:\r\n                              setServiceTypeButtonColor({\r\n                                ...ServiceTypeButtonColor,\r\n                                SingleTaxi: true,\r\n                                DesignatedDriver: false,\r\n                                PetCategory: false,\r\n                                PackageCategory: false,\r\n                              });\r\n                              setStatusButtonColor({\r\n                                ...StatusButtonColor,\r\n                                approved: true,\r\n                                pending: false,\r\n                                disapproved: false,\r\n                              });\r\n                              getCategoriesContent(\r\n                                0,\r\n                                10,\r\n                                ele._id,\r\n                                ActiveInactiveDuty,\r\n                                \"approved\",\r\n                                \"\",\r\n                                startFilterValue,\r\n                                endFilterValue\r\n                              );\r\n\r\n                              break;\r\n                            case 1:\r\n                              setServiceTypeButtonColor({\r\n                                ...ServiceTypeButtonColor,\r\n                                SingleTaxi: false,\r\n                                DesignatedDriver: true,\r\n                                PetCategory: false,\r\n                                PackageCategory: false,\r\n                              });\r\n                              setStatusButtonColor({\r\n                                ...StatusButtonColor,\r\n                                approved: true,\r\n                                pending: false,\r\n                                disapproved: false,\r\n                              });\r\n                              getCategoriesContent(\r\n                                0,\r\n                                10,\r\n                                ele._id,\r\n                                ActiveInactiveDuty,\r\n                                \"approved\",\r\n                                \"\",\r\n                                startFilterValue,\r\n                                endFilterValue\r\n                              );\r\n                              break;\r\n                            case 2:\r\n                              setServiceTypeButtonColor({\r\n                                ...ServiceTypeButtonColor,\r\n                                SingleTaxi: false,\r\n                                DesignatedDriver: false,\r\n                                PetCategory: true,\r\n                                PackageCategory: false,\r\n                              });\r\n                              setStatusButtonColor({\r\n                                ...StatusButtonColor,\r\n                                approved: true,\r\n                                pending: false,\r\n                                disapproved: false,\r\n                              });\r\n                              getCategoriesContent(\r\n                                0,\r\n                                10,\r\n                                ele._id,\r\n                                ActiveInactiveDuty,\r\n                                \"approved\",\r\n                                \"\",\r\n                                startFilterValue,\r\n                                endFilterValue\r\n                              );\r\n                              break;\r\n                            case 3:\r\n                              setServiceTypeButtonColor({\r\n                                ...ServiceTypeButtonColor,\r\n                                SingleTaxi: false,\r\n                                DesignatedDriver: false,\r\n                                PetCategory: false,\r\n                                PackageCategory: true,\r\n                              });\r\n                              setStatusButtonColor({\r\n                                ...StatusButtonColor,\r\n                                approved: true,\r\n                                pending: false,\r\n                                disapproved: false,\r\n                              });\r\n                              getCategoriesContent(\r\n                                0,\r\n                                10,\r\n                                ele._id,\r\n                                ActiveInactiveDuty,\r\n                                \"approved\",\r\n                                \"\",\r\n                                startFilterValue,\r\n                                endFilterValue\r\n                              );\r\n                              break;\r\n\r\n                            default:\r\n                              break;\r\n                          }\r\n                        }}\r\n                      >\r\n                        {ele.title}\r\n                      </Button>\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"d-flex  my-3\">\r\n                    <div style={{ flex: 1 }}></div>\r\n                    <div style={{ flex: 2, justifyContent: \"center\", display: \"flex\" }}>\r\n                      {statusArray.map((ele, i) => (\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          // className={status === \"approved\" ? \"buttoncss mx-1 highlight \" : \"buttoncss mx-1 removehover\"}\r\n                          className=\"buttoncss mx-3\"\r\n                          style={{\r\n                            backgroundColor: Object.values(StatusButtonColor)[i] ? \"#006FFF\" : \"#c4c4c4\",\r\n                            color: \"#fff\",\r\n                          }}\r\n                          onClick={() => {\r\n                            switch (i) {\r\n                              case 0:\r\n                                setStatus(\"approved\");\r\n                                setStatusButtonColor({\r\n                                  ...StatusButtonColor,\r\n                                  approved: true,\r\n                                  pending: false,\r\n                                  disapproved: false,\r\n                                });\r\n                                getCategoriesContent(\r\n                                  0,\r\n                                  10,\r\n                                  ServiceTypeId,\r\n                                  ActiveInactiveDuty,\r\n                                  \"approved\",\r\n                                  search,\r\n                                  startFilterValue,\r\n                                  endFilterValue\r\n                                );\r\n                                break;\r\n                              case 1:\r\n                                setStatus(\"pending\");\r\n                                setStatusButtonColor({\r\n                                  ...StatusButtonColor,\r\n                                  approved: false,\r\n                                  pending: true,\r\n                                  disapproved: false,\r\n                                });\r\n                                getCategoriesContent(\r\n                                  0,\r\n                                  10,\r\n                                  ServiceTypeId,\r\n                                  ActiveInactiveDuty,\r\n                                  \"pending\",\r\n                                  search,\r\n                                  startFilterValue,\r\n                                  endFilterValue\r\n                                );\r\n                                break;\r\n                              case 2:\r\n                                setStatus(\"disapproved\");\r\n                                setStatusButtonColor({\r\n                                  ...StatusButtonColor,\r\n                                  approved: false,\r\n                                  pending: false,\r\n                                  disapproved: true,\r\n                                });\r\n                                getCategoriesContent(\r\n                                  0,\r\n                                  10,\r\n                                  ServiceTypeId,\r\n                                  ActiveInactiveDuty,\r\n                                  \"disapproved\",\r\n                                  search,\r\n                                  startFilterValue,\r\n                                  endFilterValue\r\n                                );\r\n                                break;\r\n\r\n                              default:\r\n                                break;\r\n                            }\r\n                          }}\r\n                        >\r\n                          {ele}\r\n                        </Button>\r\n                      ))}\r\n                    </div>\r\n                    <div style={{ flex: 1, justifyContent: \"flex-end\", display: \"flex\" }}>\r\n                      {DutyStatus === \"OFFDUTY\" ? (\r\n                        <Tooltip arrow title=\"Click to toggle duty\">\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            className=\" mx-3\"\r\n                            style={{ backgroundColor: \"#006FFF\", color: \"#fff\" }}\r\n                            onClick={() => {\r\n                              setDutyStatus(\"ONDUTY\");\r\n                              setActiveInactiveDuty(1);\r\n                              getCategoriesContent(page, limit, ServiceTypeId, 1, status, \"\", startFilterValue, endFilterValue);\r\n                            }}\r\n                          >\r\n                            OFF DUTY\r\n                          </Button>\r\n                        </Tooltip>\r\n                      ) : (\r\n                        <Tooltip arrow title=\"Click to toggle duty\">\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            className=\" mx-3\"\r\n                            style={{ backgroundColor: \"#006FFF\", color: \"#fff\" }}\r\n                            onClick={() => {\r\n                              setDutyStatus(\"OFFDUTY\");\r\n                              setActiveInactiveDuty(0);\r\n                              getCategoriesContent(page, limit, ServiceTypeId, 0, status, \"\", startFilterValue, endFilterValue);\r\n                            }}\r\n                          >\r\n                            ON DUTY\r\n                          </Button>\r\n                        </Tooltip>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </Paper>\r\n\r\n                <Paper>\r\n                  <TableContainer className={classes.container}>\r\n                    <Table className={classes.table} stickyHeader>\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Sr. No.</TableCell>\r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}> Driver Id</TableCell>\r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}> Driver Name</TableCell>\r\n\r\n                          {/* <TableCell\r\n                            style={{ textAlign: \"center\", fontWeight: \"bold\" }}\r\n                          >\r\n                            Profile Image\r\n                          </TableCell> */}\r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Email Id</TableCell>\r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Average Rating</TableCell>\r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}> Mobile Number</TableCell>\r\n                          {/* <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}> Service Name</TableCell> */}\r\n\r\n                          {/* {status === \"approved\" && (\r\n                            <TableCell\r\n                              style={{\r\n                                textAlign: \"center\",\r\n                                fontWeight: \"bold\",\r\n                              }}\r\n                            >\r\n                              {\" \"}\r\n                              Job Status\r\n                            </TableCell>\r\n                          )} */}\r\n\r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Date of Joining</TableCell>\r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Block/Unblock Services</TableCell>\r\n\r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Actions</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n\r\n                      <TableBody>\r\n                        {/* {isLoading?<TableRow ><Skeleton style={{width:\"70vw\",borderRadius:\"20px\"}} highlightColor=\"#fff\" height=\"1rem\" count={2} baseColor=\"#ebebeb\"/></TableRow>:false} */}\r\n                        {\r\n                          // sortData()\r\n                          tableData\r\n                            // sorting()\r\n                            // .slice(\r\n                            //   page * rowsPerPage,\r\n                            //   page * rowsPerPage + rowsPerPage\r\n                            // )\r\n                            .map((category, index) => (\r\n                              <TableRow hover key={index}>\r\n                                <TableCell\r\n                                  component=\"th\"\r\n                                  scope=\"row\"\r\n                                  className={classes.textMiddle}\r\n                                  style={{ textAlign: \"center\" }}\r\n                                >\r\n                                  {index + 1 + page * rowsPerPage}\r\n                                </TableCell>\r\n                                <TableCell className={classes.textMiddle} style={{ textAlign: \"center\" }}>\r\n                                  {get(category, \"driver.user_id\", \"N/A\")}\r\n                                </TableCell>\r\n                                <TableCell className={classes.textMiddle} style={{ textAlign: \"center\" }}>\r\n                                  {category.driver.username === null\r\n                                    ? \"N/A\"\r\n                                    : category.driver.username.charAt(0).toUpperCase() + category.driver.username.slice(1)}\r\n                                </TableCell>\r\n                                <TableCell className={classes.textMiddle} style={{ textAlign: \"center\" }}>\r\n                                  {get(category.driver, \"email\", \"N/A\")}\r\n                                </TableCell>\r\n                                <TableCell className={classes.textMiddle} style={{ textAlign: \"center\" }}>\r\n                                  {/* {get(category, \"rating\", \"N/A\")} */}\r\n                                  {category.rating ? sanitizeRating(category.rating) : \"N/A\"}\r\n                                </TableCell>\r\n                                <TableCell className={classes.textMiddle} style={{ textAlign: \"center\" }}>\r\n                                  {get(category.driver, \"countryCode\", \"N/A\") + get(category.driver, \"phone\", \"N/A\")}\r\n                                </TableCell>\r\n                                {/* <TableCell className={classes.textMiddle} style={{ textAlign: \"center\" }}>\r\n                                  {category.service_type\r\n                                    ? category.service_type === \"Taxi Single\"\r\n                                      ? \"Single Taxi\"\r\n                                      : category.service_type\r\n                                    : \"N/A\"}\r\n                                </TableCell> */}\r\n                                {/* {status === \"approved\" && (\r\n                                  <TableCell className={classes.textMiddle} style={{ textAlign: \"center\" }}>\r\n                                    {category?.startDuty === false ? \"Off Duty\" : \"On Duty\"}\r\n                                  </TableCell>\r\n                                )} */}\r\n\r\n                                <TableCell style={{ textAlign: \"center\" }}>\r\n                                  {category.driver.createdAt\r\n                                    ? new Date(category.driver.createdAt)\r\n                                        // .toUTCString()\r\n                                        .getUTCDate() +\r\n                                      \"/\" +\r\n                                      (new Date(category.driver.createdAt)\r\n                                        // .toUTCString()\r\n                                        .getUTCMonth() +\r\n                                        1) +\r\n                                      \"/\" +\r\n                                      new Date(category.driver.createdAt)\r\n                                        // .toUTCString()\r\n                                        .getUTCFullYear()\r\n                                    : // moment.utc(category.createdAt).format(\"L\")\r\n                                      \"N/A\"}\r\n                                </TableCell>\r\n                                <TableCell className={classes.textMiddle} style={{ textAlign: \"center\" }}>\r\n                                  <Button\r\n                                    onClick={() => {\r\n                                      setSpecificDriverid(category.driver._id);\r\n                                      setOpen(true);\r\n                                      let newObj = {};\r\n                                      if (category.blockService) {\r\n                                        if (category.blockService.includes(\"62d53aa9bf652aa3778946ca\")) {\r\n                                          // setCheckedValue({ ...checkedValue, SingleTaxi: true });\r\n                                          Object.assign(newObj, { SingleTaxi: true });\r\n                                        }\r\n                                        if (category.blockService.includes(\"62d53abebf652aa3778946cd\")) {\r\n                                          // setCheckedValue({ ...checkedValue, DesignatedDriver: true });\r\n                                          Object.assign(newObj, { DesignatedDriver: true });\r\n                                        }\r\n                                        if (category.blockService.includes(\"62d53ad1bf652aa3778946d0\")) {\r\n                                          // setCheckedValue({ ...checkedValue, PetCategory: true });\r\n                                          Object.assign(newObj, { PetCategory: true });\r\n                                        }\r\n                                        if (category.blockService.includes(\"62d53ae6bf652aa3778946d3\")) {\r\n                                          // setCheckedValue({ ...checkedValue, PackageCategory: true });\r\n                                          Object.assign(newObj, { PackageCategory: true });\r\n                                        }\r\n                                        setCheckedValue(newObj);\r\n                                      }\r\n                                    }}\r\n                                    size=\"small\"\r\n                                    className=\"\"\r\n                                    style={{\r\n                                      border: \"1.5px solid #c4c4c4\",\r\n                                      margin: \"0.3rem\",\r\n                                      // color: \"#2765B3\",\r\n                                    }}\r\n                                  >\r\n                                    {\" \"}\r\n                                    <BlockIcon />\r\n                                  </Button>\r\n                                </TableCell>\r\n\r\n                                {/* <TableCell style={{textAlign:\"center\"}}>{category.doc?<img src={category.doc} alt=\"doc\" style={{width:\"50px\",height:\"50px\"}}/>:\"No Doc\"}</TableCell> */}\r\n                                <TableCell className={classes.textMiddle} style={{ textAlign: \"center\" }}>\r\n                                  <Button\r\n                                    onClick={() => ViewDriverData(category)}\r\n                                    size=\"small\"\r\n                                    className=\"\"\r\n                                    style={{\r\n                                      border: \"1.5px solid #c4c4c4\",\r\n                                      margin: \"0.3rem\",\r\n                                      // color: \"#2765B3\",\r\n                                    }}\r\n                                  >\r\n                                    <Tooltip title=\"Tap to verify\" arrow>\r\n                                      <VisibilityIcon />\r\n                                    </Tooltip>\r\n                                  </Button>\r\n                                  {/* <Button onClick={()=>BlockCategory} style={{backgroundColor:\"#696969\"}} >Manage</Button> */}\r\n\r\n                                  {/* <Button onClick={()=>BlockCategory} style={{backgroundColor:\"#696969\"}} >Manage</Button> */}\r\n\r\n                                  <Button\r\n                                    size=\"small\"\r\n                                    className=\"\"\r\n                                    onClick={() =>\r\n                                      category.driver.isBlock === \"block\"\r\n                                        ? UnBlockDriver(category._id)\r\n                                        : BlockDriver(category._id)\r\n                                    }\r\n                                    style={{\r\n                                      border: \"1.5px solid #c4c4c4\",\r\n                                      margin: \"0.3rem\",\r\n                                      color: category.driver.isBlock === \"block\" ? \"red\" : \"#696969\",\r\n                                    }}\r\n                                  >\r\n                                    <Tooltip title=\"Block/Unblock\" arrow>\r\n                                      <BlockIcon />\r\n                                    </Tooltip>{\" \"}\r\n                                  </Button>\r\n                                  {/* <Button onClick={()=>BlockCategory} style={{backgroundColor:\"#696969\"}} >Manage</Button> */}\r\n\r\n                                  <Button\r\n                                    size=\"small\"\r\n                                    className=\"\"\r\n                                    onClick={() => DeleteDriver(category._id)}\r\n                                    style={{\r\n                                      border: \"1.5px solid #c4c4c4\",\r\n                                      margin: \"0.3rem\",\r\n                                      color: \"#696969\",\r\n                                    }}\r\n                                  >\r\n                                    <Tooltip title=\"Delete\" arrow>\r\n                                      <DeleteOutline />\r\n                                    </Tooltip>\r\n                                  </Button>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            ))\r\n                        }\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePagination\r\n                    rowsPerPageOptions={totalUserListCount >= 100 ? [10, 25, 100] : totalUserListCount > 10 ? [10, 25] : [10]}\r\n                    component=\"div\"\r\n                    count={totalUserListCount}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            </div>\r\n          </Paper>\r\n        </div>\r\n        <Dialog\r\n          open={open}\r\n          // onClose={handleClose}\r\n\r\n          fullWidth={true}\r\n        >\r\n          <DialogTitle style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <h4 className=\"\"></h4>\r\n          </DialogTitle>\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            {/* <img\r\n              src={imageUrl}\r\n              alt=\"...\"\r\n              style={{ width: \"50px\", height: \"50px\" }}\r\n            /> */}\r\n          </div>\r\n          <Close\r\n            onClick={() => {\r\n              setSpecificDriverid(\"\");\r\n              setOpen(false);\r\n              setCheckedValue({\r\n                ...checkedValue,\r\n                SingleTaxi: false,\r\n                DesignatedDriver: false,\r\n                PetCategory: false,\r\n                PackageCategory: false,\r\n              });\r\n            }}\r\n            style={{\r\n              position: \"absolute\",\r\n              right: \"5\",\r\n              top: \"5\",\r\n              cursor: \"pointer\",\r\n              color: \"white\",\r\n              backgroundColor: \"red\",\r\n              borderRadius: \"50%\",\r\n            }}\r\n          />\r\n          <DialogContent>\r\n            {/* <DialogContentText > */}\r\n\r\n            <div>\r\n              <Formik\r\n                // validationSchema={validationSchema}\r\n                initialValues={{\r\n                  SingleTaxi: \"62d53aa9bf652aa3778946ca\",\r\n                  DesignatedDriver: \"62d53abebf652aa3778946cd\",\r\n                  PetCategory: \"62d53ad1bf652aa3778946d0\",\r\n                  PackageCategory: \"62d53ae6bf652aa3778946d3\",\r\n                }}\r\n                onSubmit={(values) => {\r\n                  blockServices(values);\r\n                }}\r\n              >\r\n                {({ values, setFieldValue }) => (\r\n                  <Form>\r\n                    <br />\r\n                    <div className=\"container\">\r\n                      <div className=\"row justify-content-center align-items-center text-center\">\r\n                        {\" \"}\r\n                        <div className=\"col-6\">\r\n                          <label className=\"\" style={{}}>\r\n                            Single Taxi : &nbsp;\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <IOSSwitch\r\n                            onChange={(e) => {\r\n                              console.log(e.target.checked);\r\n                              console.log(e.target.value);\r\n                              setCheckedValue({ ...checkedValue, SingleTaxi: e.target.checked });\r\n                              if (e.target.checked || checkedValue.SingleTaxi) {\r\n                                setFieldValue(\"SingleTaxi\", e.target.value);\r\n                                setFieldValue(\"DesignatedDriver\", values.DesignatedDriver);\r\n                                setFieldValue(\"PetCategory\", values.PetCategory);\r\n                                setFieldValue(\"PackageCategory\", values.PackageCategory);\r\n                              }\r\n                            }}\r\n                            checked={checkedValue.SingleTaxi}\r\n                            value=\"62d53aa9bf652aa3778946ca\"\r\n                          />\r\n                          {/* <input\r\n                            className=\"\"\r\n                            name=\"SingleTaxi\"\r\n                            // variant=\"outlined\"\r\n                            ref={fileRef}\r\n                            type=\"checkbox\"\r\n                            // inputProps={{name: \"name\"}}\r\n                            // autoComplete=\"off\"\r\n                            value=\"62d53aa9bf652aa3778946ca\"\r\n                            style={{\r\n                              // width: 300,\r\n                              height: 35,\r\n                              borderRadius: 5,\r\n                              borderColor: \"#d3d3d3\",\r\n                              borderStyle: \"solid\",\r\n                              borderWidth: 1,\r\n                              // paddingInlineStart: 10,\r\n                            }}\r\n                            onChange={(e) => {\r\n                              console.log(e.target.checked);\r\n                              setCheckedValue({ ...checkedValue, SingleTaxi: e.target.checked });\r\n                              if (e.target.checked || checkedValue.SingleTaxi) {\r\n                                setFieldValue(\"SingleTaxi\", e.target.value);\r\n                                setFieldValue(\"DesignatedDriver\", values.DesignatedDriver);\r\n                                setFieldValue(\"PetCategory\", values.PetCategory);\r\n                                setFieldValue(\"PackageCategory\", values.PackageCategory);\r\n                              }\r\n                            }}\r\n                            checked={checkedValue.SingleTaxi}\r\n                            // readOnly\r\n                          /> */}\r\n\r\n                          {/* <KErrorMessage name=\"name\" /> */}\r\n                        </div>\r\n                      </div>\r\n                      <br />\r\n                      <div className=\"row justify-content-center align-items-center text-center\">\r\n                        <div className=\"col-6\">\r\n                          <label className=\"\" style={{}}>\r\n                            Designated Driver : &nbsp;\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <IOSSwitch\r\n                            onChange={(e) => {\r\n                              console.log(e.target.checked);\r\n                              console.log(e.target.value);\r\n                              setCheckedValue({ ...checkedValue, DesignatedDriver: e.target.checked });\r\n                              if (e.target.checked || checkedValue.DesignatedDriver) {\r\n                                setFieldValue(\"DesignatedDriver\", e.target.value);\r\n                                setFieldValue(\"SingleTaxi\", values.SingleTaxi);\r\n                                setFieldValue(\"PetCategory\", values.PetCategory);\r\n                                setFieldValue(\"PackageCategory\", values.PackageCategory);\r\n                              }\r\n                            }}\r\n                            checked={checkedValue.DesignatedDriver}\r\n                            value=\"62d53abebf652aa3778946cd\"\r\n                          />\r\n                          {/* <Field\r\n                            className=\"\"\r\n                            name=\"DesignatedDriver\"\r\n                            // variant=\"outlined\"\r\n                            type=\"checkbox\"\r\n                            // inputProps={{name: \"name\"}}\r\n                            // autoComplete=\"off\"\r\n                            style={{\r\n                              // width: 300,\r\n                              height: 35,\r\n                              borderRadius: 5,\r\n                              borderColor: \"#d3d3d3\",\r\n                              borderStyle: \"solid\",\r\n                              borderWidth: 1,\r\n                              // paddingInlineStart: 10,\r\n                            }}\r\n                            onChange={(e) => {\r\n                              console.log(e.target.checked);\r\n                              setCheckedValue({ ...checkedValue, DesignatedDriver: e.target.checked });\r\n                              if (e.target.checked || checkedValue.DesignatedDriver) {\r\n                                setFieldValue(\"DesignatedDriver\", e.target.value);\r\n                                setFieldValue(\"SingleTaxi\", values.SingleTaxi);\r\n                                setFieldValue(\"PetCategory\", values.PetCategory);\r\n                                setFieldValue(\"PackageCategory\", values.PackageCategory);\r\n                              }\r\n                            }}\r\n                            checked={checkedValue.DesignatedDriver}\r\n                            value=\"62d53abebf652aa3778946cd\"\r\n                            // readOnly\r\n                          /> */}\r\n                          {/* <KErrorMessage name=\"upload\" /> */}\r\n                        </div>\r\n                      </div>\r\n                      <br />\r\n                      <div className=\"row justify-content-center align-items-center text-center\">\r\n                        <div className=\"col-6\">\r\n                          <label className=\"\" style={{}}>\r\n                            Pet Category : &nbsp;\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <IOSSwitch\r\n                            onChange={(e) => {\r\n                              console.log(e.target.checked);\r\n                              console.log(e.target.value);\r\n                              setCheckedValue({ ...checkedValue, PetCategory: e.target.checked });\r\n                              if (e.target.checked || checkedValue.PetCategory) {\r\n                                setFieldValue(\"SingleTaxi\", values.SingleTaxi);\r\n                                setFieldValue(\"DesignatedDriver\", values.DesignatedDriver);\r\n                                setFieldValue(\"PetCategory\", e.target.value);\r\n                                setFieldValue(\"PackageCategory\", values.PackageCategory);\r\n                              }\r\n                            }}\r\n                            checked={checkedValue.PetCategory}\r\n                            value=\"62d53ad1bf652aa3778946d0\"\r\n                          />\r\n                          {/* <Field\r\n                            className=\"\"\r\n                            name=\"PetCategory\"\r\n                            // variant=\"outlined\"\r\n                            type=\"checkbox\"\r\n                            // inputProps={{name: \"name\"}}\r\n                            // autoComplete=\"off\"\r\n                            style={{\r\n                              // width: 300,\r\n                              height: 35,\r\n                              borderRadius: 5,\r\n                              borderColor: \"#d3d3d3\",\r\n                              borderStyle: \"solid\",\r\n                              borderWidth: 1,\r\n                              // paddingInlineStart: 10,\r\n                            }}\r\n                            onChange={(e) => {\r\n                              console.log(e.target.checked);\r\n                              setCheckedValue({ ...checkedValue, PetCategory: e.target.checked });\r\n                              if (e.target.checked || checkedValue.PetCategory) {\r\n                                setFieldValue(\"SingleTaxi\", values.SingleTaxi);\r\n                                setFieldValue(\"DesignatedDriver\", values.DesignatedDriver);\r\n                                setFieldValue(\"PetCategory\", e.target.value);\r\n                                setFieldValue(\"PackageCategory\", values.PackageCategory);\r\n                              }\r\n                            }}\r\n                            checked={checkedValue.PetCategory}\r\n                            value=\"62d53ad1bf652aa3778946d0\"\r\n                            // readOnly\r\n                          /> */}\r\n                          {/* <KErrorMessage name=\"upload\" /> */}\r\n                        </div>\r\n                      </div>\r\n                      <br />\r\n                      <div className=\"row justify-content-center align-items-center text-center\">\r\n                        <div className=\"col-6\">\r\n                          <label className=\"\" style={{}}>\r\n                            Package Category : &nbsp;\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <IOSSwitch\r\n                            onChange={(e) => {\r\n                              console.log(e.target.checked);\r\n                              console.log(e.target.value);\r\n                              setCheckedValue({ ...checkedValue, PackageCategory: e.target.checked });\r\n                              if (e.target.checked || checkedValue.PackageCategory) {\r\n                                setFieldValue(\"SingleTaxi\", values.SingleTaxi);\r\n                                setFieldValue(\"DesignatedDriver\", values.DesignatedDriver);\r\n                                setFieldValue(\"PetCategory\", values.PetCategory);\r\n                                setFieldValue(\"PackageCategory\", e.target.value);\r\n                              }\r\n                            }}\r\n                            checked={checkedValue.PackageCategory}\r\n                            value=\"62d53ae6bf652aa3778946d3\"\r\n                          />\r\n                          {/* <Field\r\n                            className=\"\"\r\n                            name=\"PackageCategory\"\r\n                            // variant=\"outlined\"\r\n                            type=\"checkbox\"\r\n                            // inputProps={{name: \"name\"}}\r\n                            // autoComplete=\"off\"\r\n                            style={{\r\n                              // width: 300,\r\n                              height: 35,\r\n                              borderRadius: 5,\r\n                              borderColor: \"#d3d3d3\",\r\n                              borderStyle: \"solid\",\r\n                              borderWidth: 1,\r\n                              // paddingInlineStart: 10,\r\n                            }}\r\n                            // readOnly\r\n                            onChange={(e) => {\r\n                              console.log(e.target.checked);\r\n                              setCheckedValue({ ...checkedValue, PackageCategory: e.target.checked });\r\n                              if (e.target.checked || checkedValue.PackageCategory) {\r\n                                setFieldValue(\"SingleTaxi\", values.SingleTaxi);\r\n                                setFieldValue(\"DesignatedDriver\", values.DesignatedDriver);\r\n                                setFieldValue(\"PetCategory\", values.PetCategory);\r\n                                setFieldValue(\"PackageCategory\", e.target.value);\r\n                              }\r\n                            }}\r\n                            checked={checkedValue.PackageCategory}\r\n                            value=\"62d53ae6bf652aa3778946d3\"\r\n                          /> */}\r\n                          {/* <KErrorMessage name=\"upload\" /> */}\r\n                        </div>\r\n                      </div>\r\n                      <br />\r\n                      <br />\r\n                      <div className=\"text-center\">\r\n                        <Button\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                          className=\"buttoncss\"\r\n                          style={{ backgroundColor: \"#006FFF\", color: \"#fff\" }}\r\n                        >\r\n                          Save\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n              <br />\r\n            </div>\r\n            {/* </DialogContentText> */}\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"],"sourceRoot":""}