{"version":3,"sources":["pages/FAQ_Management/AddEditFAQ.js"],"names":["useStyles","makeStyles","theme","root","flexWrap","margin","spacing","extendedIcon","marginRight","paperHeading","padding","table","minWidth","textMiddle","verticalAlign","iconMargin","color","backgroundColor","iconcolor","headingButton","display","flexDirection","justifyContent","headingAlignment","alignItems","width","gap","textAlign","Marginbutton","container","maxHeight","paperPaddingRightLeft","FAQ_Management","props","classes","useEffect","state","location","console","log","useState","tableData","setTableData","setButtonDisabling","setType","show","setShow","getCategoriesContent","type","a","axios","post","faq_type","data","handleUpdate","values","put","id","question","newQuestion","answer","newAnswer","toast","success","position","POSITION","TOP_RIGHT","history","push","pathname","handleAdd","Fragment","className","elevation","classNames","onClick","Swal","fire","showClass","popup","hideClass","title","showConfirmButton","showDenyButton","showCloseButton","showCancelButton","denyButtonText","then","result","isDenied","isCancelled","style","initialValues","get","validate","errors","onSubmit","setSubmitting","isSubmitting","setFieldValue","name","placeholder","component","value","onChange","newContent","variant","disabled"],"mappings":"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","file":"static/js/36.1364e36a.chunk.js","sourcesContent":["import React, { useState, useEffect, Component, useRef, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport classNames from \"classnames\";\r\nimport axios from \"../../axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport Swal from \"sweetalert2\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\n\r\n// import Switch from '@mui/material/Switch';\r\n// import { styled } from '@mui/material/styles';\r\n// import Skeleton from 'react-loading-skeleton'\r\n// import 'react-loading-skeleton/dist/skeleton.css'\r\nimport {\r\n  Button,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Switch,\r\n  styled,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport \"./FAQ_Management.css\";\r\n// import { Delete } from '@material-ui/icons';\r\n// import VisibilityIcon from '@material-ui/icons/Visibility';\r\n// import BlockIcon from '@material-ui/icons/Block';\r\n// import ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n\r\n// For Table\r\n// import SearchBar from \"material-ui-search-bar\";\r\n// import { orderBy } from \"lodash\";\r\n\r\n//history\r\n// import {useHistory} from 'react-router-dom'\r\n// import AddEditCategory from \"../AccountManagement/Account_Details\";\r\n\r\n// import './Category_Management.css' ;\r\n// import EditIcon from '@material-ui/icons/Edit';\r\n// import { DeleteOutline, WidgetsOutlined } from \"@material-ui/icons\";\r\n// import React, { Component } from 'react';\r\n// import { Editor } from 'react-draft-wysiwyg';\r\n// import { EditorState, convertToRaw, ContentState } from 'draft-js';\r\n// import draftToHtml from 'draftjs-to-html';\r\n// import htmlToDraft from 'html-to-draftjs';\r\n// import 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n// import '../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n// import QNA from \"./QNA_Component\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport { Formik, Field, ErrorMessage, Form } from \"formik\";\r\nimport { get } from \"lodash\";\r\nimport RSelect from \"react-select\";\r\nimport { DeleteOutline, WidgetsOutlined } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexWrap: \"wrap\",\r\n    // marginTop: '5rem',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  paperHeading: {\r\n    padding: \"1rem 0rem\",\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  textMiddle: {\r\n    verticalAlign: \"middle !important\",\r\n  },\r\n  iconMargin: {\r\n    margin: \"0.5rem\",\r\n    color: \"#696969\",\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  iconcolor: {\r\n    margin: \"0.5rem\",\r\n    color: \"#fff\",\r\n    backgroundColor: \"#0e3f37 !important\",\r\n  },\r\n  headingButton: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    padding: \"10px\",\r\n  },\r\n  headingAlignment: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    // padding: \"0 2rem 0 2rem\"\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n    [\"@media (max-width:780px)\"]: {\r\n      // eslint-disable-line no-useless-computed-key\r\n      flexDirection: \"column\",\r\n      width: \"100%\",\r\n      gap: \"1rem\",\r\n      justifyContent: \"center\",\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n  Marginbutton: {\r\n    margin: \"0.5rem\",\r\n  },\r\n  container: {\r\n    maxHeight: \"58vh\",\r\n  },\r\n  paperPaddingRightLeft: {\r\n    padding: \"0rem 1rem\",\r\n  },\r\n}));\r\n\r\nexport default function FAQ_Management(props) {\r\n  const classes = useStyles();\r\n  // const registrationForm = useRef();\r\n\r\n  useEffect(() => {\r\n    // getactivemenuitem();\r\n  }, []);\r\n  const {\r\n    location: { state },\r\n  } = props;\r\n  console.log(props);\r\n  // const getactivemenuitem = () => {\r\n  //   const result = [...document.getElementsByTagName(\"a\")];\r\n  //   const newres = result.filter((ele) => {\r\n  //     if (ele.innerText === \"Manage FAQ\") {\r\n  //       return ele;\r\n  //     }\r\n  //   });\r\n  //   newres[0].classList.add(\"activate\");\r\n  //   console.log(newres);\r\n  //   console.log(result);\r\n  // };\r\n  const [tableData, setTableData] = useState([]);\r\n  // const [inputData, setInputData] = useState(\"\");\r\n  // const [inputData2, setInputData2] = useState(\"\");\r\n\r\n  // const [inputquestion, setInputquestion] = useState(\"\");\r\n  // const [inputquestion2, setInputquestion2] = useState(\"\");\r\n  const [buttonDisabling, setButtonDisabling] = useState(false);\r\n\r\n  const [storeType, setType] = useState(\"USER\");\r\n  //   const [tabColor, setTabColor] = useState(\"1\");\r\n\r\n  const [show, setShow] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getCategoriesContent(\"USER\");\r\n    //  setInputData2(\"\");\r\n  }, []);\r\n\r\n  //get content\r\n  const getCategoriesContent = async (type) => {\r\n    console.log(\"type\", type);\r\n    setType(type);\r\n\r\n    try {\r\n      if (type === \"USER\") {\r\n        setTableData([]);\r\n        const { data } = await axios.post(`/private/faqList`, { faq_type: \"user\" });\r\n        console.log(data);\r\n        setTableData(data.data);\r\n\r\n        setButtonDisabling(false);\r\n        // setSearchedData(data.user)\r\n        // setIsLoading(false)\r\n      } else if (type === \"DRIVER\") {\r\n        setTableData([]);\r\n        const { data } = await axios.post(`/private/faqList`, { faq_type: \"driver\" });\r\n        console.log(data);\r\n        setTableData(data.data);\r\n\r\n        setButtonDisabling(false);\r\n      }\r\n      // else if (type === \"DRIVER\") {\r\n      //   setTableData([]);\r\n      //   const { data } = await axios.get(`/user/getFaqByPanel?panel=DRIVER`);\r\n      //   console.log(data);\r\n      //   setTableData(data.data);\r\n\r\n      //   setButtonDisabling(false);\r\n      // }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  console.log(tableData);\r\n\r\n  const handleUpdate = async (values) => {\r\n    // console.log(category);\r\n    // if (category){\r\n    // let check = /(<([^>]+)>)/gi;\r\n    // let checktags = values.newAnswer.replace(check, \" \");\r\n    try {\r\n      setButtonDisabling(true);\r\n      const { data } = await axios.put(`/private/faqUpdate/${values.id}`, {\r\n        // _id: values.id,\r\n        question: values.newQuestion,\r\n        // answer: checktags,\r\n        answer: values.newAnswer,\r\n        faq_type: state[0] === \"USER\" ? \"user\" : \"driver\",\r\n      });\r\n\r\n      // window.location.reload();\r\n      // getCategoriesContent();\r\n      toast.success(\"Updated Successfully\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n      props.history.push({\r\n        pathname: \"/adminPanel/FAQ_Management\",\r\n        state: state[0],\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const handleAdd = async (values) => {\r\n    try {\r\n      setButtonDisabling(true);\r\n      // let panelName = \"USER\";\r\n      // let check = /(<([^>]+)>)/gi;\r\n      // let checktags = values.newAnswer.replace(check, \" \");\r\n      // console.log(checktags);\r\n      const { data } = await axios.post(\"/private/faqCreate\", {\r\n        // _id: category.data._id,\r\n        question: values.newQuestion,\r\n        // answer: checktags,\r\n        answer: values.newAnswer,\r\n        faq_type: state[0] === \"USER\" ? \"user\" : \"driver\",\r\n      });\r\n\r\n      // window.location.reload();\r\n      //   getCategoriesContent(storeType);\r\n      //   setTimeout(() => {\r\n      //     setShow(true);\r\n      //   }, 401);\r\n      toast.success(\"Added Successfully\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n\r\n      props.history.push({\r\n        pathname: \"/adminPanel/FAQ_Management\",\r\n        state: state[0],\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handle_Deletion = async (id) => {\r\n    try {\r\n      const { data } = await axios.post(\"/admin/deleteFaq\", {\r\n        _id: id,\r\n      });\r\n      // window.location.reload();\r\n      // getCategoriesContent();\r\n      toast.success(\"Deleted Successfully\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const options = [\r\n    { value: \"USER\", label: \"USER\" },\r\n    { value: \"DRIVER\", label: \"DRIVER\" },\r\n    // { value: \"DRIVER\", label: \"DRIVER\" },\r\n  ];\r\n  console.log(state[2]);\r\n\r\n  const handleBackButton = () => {\r\n    Swal.fire({\r\n      showClass: {\r\n        popup: \"animate__animated animate__fadeInDown\",\r\n      },\r\n      hideClass: {\r\n        popup: \"animate__animated animate__fadeOutUp\",\r\n      },\r\n      title: \"Do you want to save the changes?\",\r\n      showConfirmButton: false,\r\n      showDenyButton: true,\r\n      showCloseButton: true,\r\n      showCancelButton: false,\r\n      // confirmButtonText: \"Save\",\r\n      denyButtonText: `Don't save`,\r\n    }).then((result) => {\r\n      console.log(result);\r\n      /* Read more about isConfirmed, isDenied below */\r\n      if (result.isDenied) {\r\n        props.history.push({\r\n          pathname: \"/adminPanel/FAQ_Management\",\r\n          state: state[0],\r\n        });\r\n      } else if (result.isCancelled) {\r\n        Swal.fire(\"Changes are not saved\", \"\", \"info\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className={classes.root}>\r\n          <Paper>\r\n            <div className={classes.paperPaddingRightLeft}>\r\n              <div className=\"py-4\">\r\n                <Paper elevation={0} className={classNames(classes.paperHeading, classes.headingAlignment)}>\r\n                  <Button\r\n                    // variant=\"outlined\"\r\n                    // aria-label=\"add\"\r\n                    // className={classes.iconMargin}\r\n                    onClick={() => {\r\n                      handleBackButton();\r\n                      // if (window.confirm(\"Leave without saving changes?\")) {\r\n                      //   props.history.push({\r\n                      //     pathname: \"/adminPanel/FAQ_Management\",\r\n                      //     state: state[0],\r\n                      //   });\r\n                      // }\r\n                    }}\r\n                  >\r\n                    <ArrowBackIosIcon />\r\n                    BACK\r\n                  </Button>\r\n                  <h3 style={{}}>{`${state[0] === \"DRIVER\" ? \"DRIVER\" : \"USER\"} ${state[1]}`}</h3>\r\n                  <div style={{ width: \"20%\" }}>\r\n                    {/* <RSelect\r\n                      defaultValue={{ label: \"USER\", value: \"USER\" }}\r\n                      options={options}\r\n                      onChange={(e) => {\r\n                        getCategoriesContent(e.value);\r\n                      }}\r\n                    /> */}\r\n                    {/* <Button\r\n                      variant=\"contained\"\r\n                      className=\"buttoncss\"\r\n                      style={{ backgroundColor: \"#0E3F37\", color: \"#fff\" }}\r\n                      onClick={() => {\r\n                        props.history.push({\r\n                          pathname: \"/adminPanel/AddEditFAQ\",\r\n                          state: panelName,\r\n                        });\r\n                      }}\r\n                    >\r\n                      Add\r\n                    </Button> */}\r\n                  </div>\r\n                </Paper>\r\n                <Paper elevation={0}>\r\n                  <div>\r\n                    {/* <Button variant=\"contained\" style={{ backgroundColor: '#0e3f37', color: \"white\" }}  onClick={()=>{getCategoriesContent(\"all\")}}>All</Button>&emsp; */}\r\n                    {/* <Button\r\n                      variant=\"contained\"\r\n                      className={`${\r\n                        tabColor === \"1\" ? \"customButton\" : \"defaultButton\"\r\n                      }`}\r\n                      onClick={() => {\r\n                        getCategoriesContent(\"price\");\r\n                        setTabColor(\"1\");\r\n                      }}\r\n                    >\r\n                      Price\r\n                    </Button>\r\n                    &emsp;\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      className={`${\r\n                        tabColor === \"2\" ? \"customButton\" : \"defaultButton\"\r\n                      }`}\r\n                      onClick={() => {\r\n                        setTabColor(\"2\");\r\n                        getCategoriesContent(\"service\");\r\n                      }}\r\n                    >\r\n                      Service\r\n                    </Button> */}\r\n                  </div>\r\n                  <br />\r\n                </Paper>\r\n                {/* //new design */}\r\n\r\n                {/* <br /> */}\r\n\r\n                {/* status end */}\r\n\r\n                <Paper elevation={0}>\r\n                  {/* <Formik\r\n                      key={index}\r\n                      initialValues={{\r\n                        question: get(category, \"question\", \"\"),\r\n                        answer: get(category, \"answer\", \"\"),\r\n                        id: get(category, \"_id\", \"\"),\r\n                      }}\r\n                      validate={(values) => {\r\n                        const errors = {};\r\n                        console.log(values);\r\n                        if (!values.question) {\r\n                          errors.question = \"Required\";\r\n                        }\r\n                        if (\r\n                          //  !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                          values.answer === \"\" ||\r\n                          values.answer === \"<p><br></p>\"\r\n                        ) {\r\n                          errors.answer = \"Required\";\r\n                        }\r\n                        return errors;\r\n                      }}\r\n                      onSubmit={(values, { setSubmitting }) => {\r\n                        setTimeout(() => {\r\n                          //  alert(JSON.stringify(values, null, 2));\r\n                          handleUpdate(values);\r\n                          setSubmitting(false);\r\n                        }, 400);\r\n                      }}\r\n                    >\r\n                       */}\r\n\r\n                  {show && (\r\n                    <Formik\r\n                      initialValues={{\r\n                        newQuestion: get(state[2], \"question\", \"\"),\r\n                        newAnswer: get(state[2], \"answer\", \"\"),\r\n                        id: get(state[2], \"_id\", \"\"),\r\n                      }}\r\n                      validate={(values) => {\r\n                        const errors = {};\r\n                        console.log(values);\r\n                        if (!values.newQuestion) {\r\n                          errors.newQuestion = \"Required\";\r\n                        }\r\n                        if (\r\n                          //  !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                          values.newAnswer === \"\" ||\r\n                          values.newAnswer === \"<p><br></p>\"\r\n                        ) {\r\n                          errors.newAnswer = \"Required\";\r\n                        }\r\n                        return errors;\r\n                      }}\r\n                      onSubmit={(values, { setSubmitting }) => {\r\n                        // setTimeout(() => {\r\n                        //  alert(JSON.stringify(values, null, 2));\r\n                        state[1] === \"ADD FAQ\" ? handleAdd(values) : handleUpdate(values);\r\n\r\n                        // setSubmitting(false);\r\n                        // }, 400);\r\n\r\n                        //  getCategoriesContent(storeType);\r\n                        // window.location.reload();\r\n                        setShow(false);\r\n                      }}\r\n                    >\r\n                      {({ isSubmitting, setFieldValue, values }) => (\r\n                        <Form>\r\n                          <label className=\"label-text\">QUESTION</label>\r\n                          <Field type=\"text\" name=\"newQuestion\" className=\"form-control\" placeholder=\"New Question\" />\r\n                          <ErrorMessage name=\"newQuestion\" component=\"div\" className=\"text-danger\" />\r\n                          <br />\r\n                          <div className=\"editor-container-1\">\r\n                            <label className=\"label-text\">ANSWER</label>\r\n                            <JoditEditor\r\n                              value={values.newAnswer}\r\n                              name=\"newAnswer\"\r\n                              onChange={(newContent) => {\r\n                                // SettingData(newContent);\r\n\r\n                                setFieldValue(\"newAnswer\", newContent);\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <ErrorMessage name=\"newAnswer\" component=\"div\" className=\"text-danger\" />\r\n                          <br />\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            type=\"submit\"\r\n                            // style={{ backgroundColor: `${buttonDisabling?'#696969':'#0e3f37'}`, color: \"white\" }}\r\n                            // onClick={()=>{handleAdd()}}\r\n                            style={{\r\n                              backgroundColor: \"#0059cd\",\r\n                              color: \"white\",\r\n                            }}\r\n                            disabled={isSubmitting}\r\n                          >\r\n                            {state[1] === \"ADD FAQ\" ? \"ADD\" : \"SAVE\"}\r\n                          </Button>\r\n                          <br />\r\n                          <br />\r\n                        </Form>\r\n                      )}\r\n                    </Formik>\r\n                  )}\r\n                </Paper>\r\n              </div>\r\n            </div>\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"],"sourceRoot":""}