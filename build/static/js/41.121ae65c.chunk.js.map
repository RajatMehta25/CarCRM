{"version":3,"sources":["../node_modules/@material-ui/icons/esm/Close.js","pages/PromoCode_Management/KErrorMessage.js","pages/PromoCode_Management/PromoCode_Management.js"],"names":["createSvgIcon","React","d","KErrorMessage","name","style","color","useStyles","makeStyles","theme","root","flexWrap","margin","spacing","extendedIcon","marginRight","paperHeading","padding","table","minWidth","textMiddle","verticalAlign","iconMargin","backgroundColor","iconcolor","headingButton","display","flexDirection","justifyContent","headingAlignment","alignItems","width","gap","textAlign","Marginbutton","container","paperPaddingRightLeft","IOSSwitch","styled","props","Switch","focusVisibleClassName","disableRipple","height","transitionDuration","transform","palette","mode","opacity","border","grey","boxSizing","borderRadius","transition","transitions","create","duration","TaxiSingleManagement","classes","useState","rselKey","setRselKey","tableData","setTableData","isLoading","setIsLoading","isAddEditPromoCode","modalState","setModalState","selectedPromoCodeData","setSelectedPromoCodeData","startDate","setStartDate","setEndDate","page","setPage","rowsPerPage","setRowsPerPage","totalUserListCount","settotalUserListCount","limit","search","setSearch","serviceType","setServiceType","show","data","showDesc","setShowDescription","label","value","serviceTypeFilter","setServiceTypeFilter","userTypeFilter","setUserTypeFilter","useEffect","getCategoriesContent","getServiceType","k","a","userType","axios","get","console","log","docs","totalDocs","length","status","statusSwitch","e","category","put","_id","target","checked","toast","success","position","POSITION","TOP_RIGHT","SearchPromocode","call","timer","args","clearTimeout","setTimeout","myDeb","toLowerCase","DRIVER","ServiceType_Url","validationSchema","yup","required","offerType","offerName","min","max","offerCode","discountType","discountAmount","when","is","then","integer","typeError","otherwise","userLimit","minimumOrderLimit","moreThan","description","validationSchema2","addNewPromocode","values","post","serviceTypeId","OfferType","endDate","message","EditPromocode","generateOfferCode","dataToReturn","error","Fragment","className","Paper","elevation","classNames","onChange","searchVal","onCancelSearch","placeholder","fontSize","fontWeight","whiteSpace","zIndex","key","options","isSearchable","Button","variant","onClick","Tooltip","title","arrow","IconButton","TableContainer","minHeight","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","map","index","hover","component","scope","ele","i","moment","format","slice","cursor","NoDataFound","TextToDisplay","Loading","TablePagination","bottom","right","rowsPerPageOptions","count","onPageChange","event","newPage","onRowsPerPageChange","parseInt","Dialog","open","fullWidth","DialogTitle","Close","top","DialogContent","maxWidth","isOpen","onClose","reason","backgroundModal","backgroundModalContent","fontFamily","content","initialValues","Date","onSubmit","setFieldValue","as","disabled","type","flex","readOnly","res","minDate","dateFormat","date","fontVariant"],"mappings":"sGAAA,mBAEeA,gBAA4BC,gBAAoB,OAAQ,CACrEC,EAAG,0GACD,U,mjBCQWC,GATO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvB,OACE,yBAAKC,MAAO,CAAEC,MAAO,QAEnB,kBAAC,KAAD,CAAcF,KAAMA,M,SCyDpBG,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,QAGZC,OAAQ,CACNA,OAAQH,EAAMI,QAAQ,IAExBC,aAAc,CACZC,YAAaN,EAAMI,QAAQ,IAE7BG,aAAc,CACZC,QAAS,aAEXC,MAAO,CACLC,SAAU,KAEZC,WAAY,CACVC,cAAe,qBAEjBC,WAAY,CACVV,OAAQ,SACRN,MAAO,OACPiB,gBAAiB,WAEnBC,UAAW,CACTZ,OAAQ,SACRN,MAAO,OACPiB,gBAAiB,sBAEnBE,cAAe,CACbC,QAAS,OACTC,cAAe,MACfC,eAAgB,eAChBX,QAAS,QAEXY,iBAAiB,aACfH,QAAS,OACTC,cAAe,MAGfG,WAAY,SACZnB,SAAU,QACT,2BAA6B,CAE5BgB,cAAe,SACfI,MAAO,OACPC,IAAK,OACLJ,eAAgB,SAChBK,UAAW,WAGfC,aAAc,CACZtB,OAAQ,UAEVuB,UAAW,GAGXC,sBAAuB,CACrBnB,QAAS,iBAIPoB,GAAYC,aAAO,SAACC,GAAD,OAAW,kBAACC,EAAA,EAAD,eAAQC,sBAAsB,oBAAoBC,eAAa,GAAKH,MAAtFD,EAChB,gBAAG7B,EAAH,EAAGA,MAAH,MAAgB,CACdsB,MAAO,GACPY,OAAQ,GACR1B,QAAS,EACT,0BAA2B,CACzBA,QAAS,EACTL,OAAQ,EACRgC,mBAAoB,QACpB,gBAAiB,CACfC,UAAW,mBACXvC,MAAO,OACP,uBAAwB,CACtBiB,iBAAiBd,EAAMqC,QAAQC,KAAkB,WACjDC,QAAS,EACTC,OAAQ,GAEV,oCAAqC,CACnCD,QAAS,KAGb,sCAAuC,CACrC1C,MAAO,UACP2C,OAAQ,kBAEV,kCAAmC,CACjC3C,MAA8B,UAAvBG,EAAMqC,QAAQC,KAAmBtC,EAAMqC,QAAQI,KAAK,KAAOzC,EAAMqC,QAAQI,KAAK,MAEvF,oCAAqC,CACnCF,QAAgC,UAAvBvC,EAAMqC,QAAQC,KAAmB,GAAM,KAGpD,qBAAsB,CACpBI,UAAW,aACXpB,MAAO,GACPY,OAAQ,IAEV,qBAAsB,CACpBS,aAAc,GACd7B,gBAAwC,UAAvBd,EAAMqC,QAAQC,KAAmB,UAAY,UAC9DC,QAAS,EACTK,WAAY5C,EAAM6C,YAAYC,OAAO,CAAC,oBAAqB,CACzDC,SAAU,WAMH,SAASC,GAAqBlB,GAC3C,IAAMmB,EAAUnD,KADkC,EAIpBoD,mBAAS,GAJW,mBAI3CC,EAJ2C,KAIlCC,EAJkC,OAKhBF,mBAAS,IALO,mBAK3CG,EAL2C,KAKhCC,EALgC,OAMdJ,oBAAS,GANK,gCAOdA,oBAAS,IAPK,gCAQhBA,oBAAS,IARO,mBAQ3CK,GAR2C,KAQhCC,GARgC,QASdN,mBAAS,CAC3CO,mBAAoB,KAV4B,qBAS3CC,GAT2C,MAS/BC,GAT+B,SAYQT,mBAAS,MAZjB,qBAY3CU,GAZ2C,MAYpBC,GAZoB,SAahBX,mBAAS,MAbO,qBAa3CY,GAb2C,MAahCC,GAbgC,SAcpBb,mBAAS,MAdW,qBAclCc,IAdkC,gBAgBpBd,oBAAS,GAhBW,qCAmB1B1D,IAAM0D,SAAS,IAnBW,qBAmB3Ce,GAnB2C,MAmBrCC,GAnBqC,SAoBZ1E,IAAM0D,SAAS,IApBH,qBAoB3CiB,GApB2C,MAoB9BC,GApB8B,SAqBElB,mBAAS,GArBX,qBAqB3CmB,GArB2C,MAqBvBC,GArBuB,SAsBxBpB,mBAAS,IAtBe,qBAsB3CqB,GAtB2C,gBAuBtBrB,mBAAS,KAvBa,qBAuB3CsB,GAvB2C,MAuBnCC,GAvBmC,SAwBZvB,mBAAS,IAxBG,qBAwB3CwB,GAxB2C,MAwB9BC,GAxB8B,SAyBXzB,mBAAS,CAAE0B,MAAM,EAAOC,KAAM,KAzBnB,qBAyB3CC,GAzB2C,MAyBjCC,GAzBiC,SA0BA7B,mBAAS,CAAE8B,MAAO,MAAOC,MAAO,KA1BhC,qBA0B3CC,GA1B2C,MA0BxBC,GA1BwB,SA2BNjC,mBAAS,CAAE8B,MAAO,MAAOC,MAAO,KA3B1B,qBA2B3CG,GA3B2C,MA2B3BC,GA3B2B,MA4ClDC,qBAAU,WACRC,GAAqBtB,GAAMM,GAAOC,GAAQU,GAAkBD,MAAOG,GAAeH,OAClFO,OACC,IACHF,qBAAU,WACRlC,GAAW,SAACqC,GAAD,OAAOA,EAAI,OACrB,CAACpC,IAGJ,IAAMkC,GAAoB,uCAAG,oDAAAG,EAAA,6DAAOzB,EAAP,+BAAc,EAAGM,EAAjB,+BAAyB,GAAIC,EAA7B,+BAAsC,GAAIE,EAA1C,+BAAwD,GAAIiB,EAA5D,+BAAuE,GAClGnC,IAAa,GADc,kBAGFoC,IAAMC,IAAN,kCACM5B,EADN,kBACoBM,EADpB,mBACoCC,EADpC,wBAC0DE,EAD1D,qBACkFiB,IAJhF,gBAGjBd,EAHiB,EAGjBA,KAGRiB,QAAQC,IAAIlB,GACZvB,EAAa,YAAIuB,EAAKA,KAAKmB,OAE3B1B,GAAsBO,EAAKA,KAAKoB,WAChCxB,GAAUD,GACVhB,IAAa,GAEiB,IAA1BqB,EAAKA,KAAKmB,KAAKE,QAAgBrB,EAAKsB,OAbf,kDAoBzBL,QAAQC,IAAR,MApByB,0DAAH,qDAyEpBK,GAAY,uCAAG,WAAOC,EAAGC,GAAV,iBAAAZ,EAAA,+EAGME,IAAMW,IAAN,6BAAgCD,EAASE,KAAO,CACrEL,OAAQE,EAAEI,OAAOC,QAAU,IAAM,MAJlB,gBAGT7B,EAHS,EAGTA,KAaRiB,QAAQC,IAAIlB,GAEZ8B,IAAMC,QAA4B,GAApB/B,EAAKA,KAAKsB,OAAc,YAAc,cAAe,CACjEU,SAAUF,IAAMG,SAASC,YAE3BxB,GAAqBtB,GAAMM,GAAOC,GAAQU,GAAkBD,MAAOG,GAAeH,OArBjE,kDAuBjBa,QAAQC,IAAR,MAvBiB,0DAAH,wDA9HgC,GA+JlB7C,mBAAS,IA/JS,qCAgKVA,mBAAS,KAhKC,iCAgMlD,IAAM8D,GAVN,SAAeC,GAAiB,IAC1BC,EADezH,EAAU,uDAAN,IAEvB,OAAO,WAAoB,IAAD,uBAAN0H,EAAM,yBAANA,EAAM,gBACxBC,aAAaF,GACbA,EAAQG,YAAW,WACjBJ,EAAI,WAAJ,EAAQE,KACP1H,IAIiB6H,EAAM,SAAC9C,GAC7Be,GAAqBtB,GAAMM,GAAOC,EAAO+C,cAAerC,GAAkBD,MAAOG,GAAeH,UAGlGK,qBAAU,WACRE,OACC,IAGH,IAAMA,GAAc,uCAAG,8BAAAE,EAAA,+EAEI8B,IAAO3B,IAAP,UAAc4B,OAFlB,gBAEX5C,EAFW,EAEXA,KACRF,GAAeE,EAAKA,MACpBiB,QAAQC,IAAIlB,EAAKA,MAJE,gDAOnBiB,QAAQC,IAAR,MAPmB,yDAAH,qDAsBpBD,QAAQC,IAAIrB,IAUZ,IAAMgD,GAAmBC,IAAW,CAClCjD,YAAaiD,MAAaC,SAAS,4BACnCC,UAAWF,MAAaC,SAAS,0BACjCE,UAAWH,MAERI,IAAI,EAAG,iCACPC,IAAI,GAAI,kCACRJ,SAAS,0BACZK,UAAWN,MAAaC,SAAS,0BAEjCM,aAAcP,MAAaC,SAAS,6BACpCO,eAAgBR,MAAaS,KAAK,eAAgB,CAChDC,GAAI,SAACH,GAAD,MAAkC,KAAhBA,GACtBI,KAAMX,MAEHY,QAAQ,uBACRR,IAAI,EAAG,sBACPC,IAAI,MAAO,sBACXQ,UAAU,uBACVZ,SAAS,+BACZa,UAAWd,MAERY,QAAQ,uBACRR,IAAI,EAAG,sBACPC,IAAI,GAAI,uBACRQ,UAAU,uBACVZ,SAAS,qCASdc,UAAWf,MAAaa,UAAU,uBAAuBZ,SAAS,0BAClEe,kBAAmBhB,MAAaS,KAAK,eAAgB,CACnDC,GAAI,SAACH,GAAD,MAAkC,KAAhBA,GACtBI,KAAMX,MAEHY,QAAQ,uBACRK,SAASjB,IAAQ,kBAAmB,wDACpCa,UAAU,uBACVZ,SAAS,+BACZa,UAAWd,MAERY,QAAQ,uBACRR,IAAI,EAAG,sBAEPS,UAAU,uBACVZ,SAAS,qCAKdiB,YAAalB,MAEVI,IAAI,EAAG,iCACPC,IAAI,IAAK,mCACTJ,SAAS,6BAERkB,GAAoBnB,IAAW,CACnCjD,YAAaiD,MAAaC,SAAS,4BAEnCE,UAAWH,MAERI,IAAI,EAAG,iCACPC,IAAI,GAAI,kCACRJ,SAAS,0BACZK,UAAWN,MAAaC,SAAS,0BACjCM,aAAcP,MAAaC,SAAS,6BACpCO,eAAgBR,MAkBbS,KAAK,eAAgB,CACpBC,GAAI,SAACH,GAAD,MAAkC,KAAhBA,GACtBI,KAAMX,MAEHY,QAAQ,uBACRR,IAAI,EAAG,sBACPC,IAAI,MAAO,sBACXQ,UAAU,uBACVZ,SAAS,+BACZa,UAAWd,MAERY,QAAQ,uBACRR,IAAI,EAAG,sBACPC,IAAI,GAAI,uBACRQ,UAAU,uBACVZ,SAAS,qCAuBhBe,kBAAmBhB,MAAaS,KAAK,eAAgB,CACnDC,GAAI,SAACH,GAAD,MAAkC,KAAhBA,GACtBI,KAAMX,MAEHY,QAAQ,uBACRK,SAASjB,IAAQ,kBAAmB,wDACpCa,UAAU,uBACVZ,SAAS,+BACZa,UAAWd,MAERY,QAAQ,uBACRR,IAAI,EAAG,sBAEPS,UAAU,uBACVZ,SAAS,qCAKdiB,YAAalB,MAEVI,IAAI,EAAG,iCACPC,IAAI,IAAK,mCACTJ,SAAS,6BAMdtC,qBAAU,WACRE,OACC,IAIH,IAAMuD,GAAe,uCAAG,WAAOC,GAAP,iBAAAtD,EAAA,sEAEpBI,QAAQC,IAAIiD,GAFQ,SAIGpD,IAAMqD,KAAK,qBAAsB,CACtDC,cAAeF,EAAOtE,YACtByE,UAAWH,EAAOnB,UAClBC,UAAWkB,EAAOlB,UAClBG,UAAWe,EAAOf,UAClBE,eAAgBa,EAAOb,eACvBD,aAAcc,EAAOd,aACrBpE,UAAWkF,EAAOlF,UAClBsF,QAASJ,EAAOI,QAChBV,UAAWM,EAAON,UAClBC,kBAAmBK,EAAOL,kBAC1BE,YAAaG,EAAOH,cAfF,gBAIZhE,EAJY,EAIZA,KAaRlB,GAAc,CACZF,oBAAoB,IAEtBI,GAAyB,MAEzB8C,IAAMC,QAAQ/B,EAAKwE,QAAS,CAC1BxC,SAAUF,IAAMG,SAASC,YAE3BxB,GAAqBtB,GAAMM,GAAOC,GAAQU,GAAkBD,MAAOG,GAAeH,OAClFO,KACAM,QAAQC,IAAIlB,GA3BQ,kDA6BpBiB,QAAQC,IAAR,MA7BoB,0DAAH,sDAmCfuD,GAAa,uCAAG,WAAON,GAAP,iBAAAtD,EAAA,sEAElBI,QAAQC,IAAIiD,GAFM,SAIKpD,IAAMW,IAAN,6BAAgC3C,GAAsB4C,KAAO,CAClF0C,cAAeF,EAAOtE,YACtByE,UAAWH,EAAOnB,UAClBC,UAAWkB,EAAOlB,UAClBG,UAAWe,EAAOf,UAClBE,eAAgBa,EAAOb,eACvBD,aAAcc,EAAOd,aACrBpE,UAAWkF,EAAOlF,UAClBsF,QAASJ,EAAOI,QAChBV,UAAWM,EAAON,UAClBC,kBAAmBK,EAAOL,kBAC1BE,YAAaG,EAAOH,cAfJ,gBAIVhE,EAJU,EAIVA,KAaRlB,GAAc,CACZF,oBAAoB,IAEtBI,GAAyB,MAIzB8C,IAAMC,QAAQ/B,EAAKwE,QAAS,CAC1BxC,SAAUF,IAAMG,SAASC,YAE3BxB,GAAqBtB,GAAMM,GAAOC,GAAQU,GAAkBD,MAAOG,GAAeH,OAClFO,KACAM,QAAQC,IAAIlB,GA7BM,kDA+BlBiB,QAAQC,IAAR,MA/BkB,0DAAH,sDA9a+B,GAgdpB7C,mBAAS,IAhdW,qBAid5CqG,IAjd4C,YAid3B,uCAAG,WAAOP,GAAP,mBAAAtD,EAAA,2DAEpBsD,EAAOlB,UAAU5B,QAAU,GAAK8C,EAAOlB,UAAU5B,QAAU,IAFvC,0CAIGN,IAAMqD,KAAN,2BAAuC,CAC5DC,cAAeF,EAAOtE,YACtBoD,UAAWkB,EAAOlB,UAClBqB,UAAWH,EAAOnB,YAPA,gBAIZhD,EAJY,EAIZA,KAKRiB,QAAQC,IAAIlB,GAEZ8B,IAAMC,QAAQ,mCAAoC,CAChDC,SAAUF,IAAMG,SAASC,YAE3ByC,EAAe3E,EAAKA,KAAKoD,UAdL,kDAgBpBnC,QAAQC,IAAR,MAhBoB,iCAkBfyD,GAlBe,QAoBtB7C,IAAM8C,MAAM,qBApBU,0DAAH,uDAwBvB,OACE,kBAAC,IAAMC,SAAP,KACE,yBAAKC,UAAU,gBACb,yBAAKA,UAAW1G,EAAQhD,MACtB,kBAAC2J,EAAA,EAAD,CAAOC,UAAW,EAAGjK,MAAO,CAAEkB,gBAAiB,gBAC7C,yBAAK6I,UAAW1G,EAAQtB,uBACtB,yBAAKgI,UAAU,IACb,kBAACC,EAAA,EAAD,CAAOC,UAAW,EAAGjK,MAAO,CAAEkB,gBAAiB,eAAiB6I,UAAWG,IAAW7G,EAAQ1C,eAE5F,yBACEX,MAAO,CACLqB,QAAS,OACTE,eAAgB,gBAChBE,WAAY,SAEZnB,SAAU,SAGV,yBAAKN,MAAO,CAAEqB,QAAS,OAAQf,SAAU,OAAQqB,IAAK,SAAUF,WAAY,WAC5E,6BACG,IACD,kBAAC,IAAD,CACEsI,UAAW,mBACX/J,MAAO,CAAE+C,aAAc,OAAQrB,MAAO,SACtCyI,SAAU,SAACC,GAAD,OAAehD,GAAgBgD,IACzCC,eAAgB,WArVtC1E,GAAqBtB,GAAMM,GAAO,GAAIW,GAAkBD,MAAOG,GAAeH,QAsVxDiF,YAAY,+BAKlB,yBAAKtK,MAAO,CAAEqB,QAAS,OAAQM,IAAK,SAAUF,WAAY,SAAUnB,SAAU,SAC3E,IAGD,0BAAMN,MAAO,CAAEuK,SAAU,OAAQC,WAAY,MAAOC,WAAY,WAAhE,uBAEQ,IAER,yBAAKV,UAAU,oBAAoB/J,MAAO,CAAE0B,MAAO,QAASgJ,OAAQ,IAClE,kBAAC,IAAD,CACEC,IAAKpH,EACLqH,QAhUD,CACrB,CAAExF,MAAO,MAAOC,MAAO,IACvB,CAAED,MAAO,cAAeC,MAAO,4BAC/B,CAAED,MAAO,oBAAqBC,MAAO,4BACrC,CAAED,MAAO,eAAgBC,MAAO,4BAChC,CAAED,MAAO,mBAAoBC,MAAO,6BA6TdwF,cAAc,EACdP,YAAY,SACZjF,MAAOC,GACP6E,SAAU,SAAC1D,GACTlB,GAAqBkB,OAM3B,0BAAMzG,MAAO,CAAEuK,SAAU,OAAQC,WAAY,MAAOC,WAAY,WAAhE,oBAEA,yBAAKV,UAAU,oBAAoB/J,MAAO,CAAE0B,MAAO,QAASgJ,OAAQ,IAClE,kBAAC,IAAD,CACEC,IAAKpH,EACLqH,QA1UA,CACtB,CAAExF,MAAO,MAAOC,MAAO,IACvB,CAAED,MAAO,WAAYC,MAAO,KAC5B,CAAED,MAAO,gBAAiBC,MAAO,MAyUXwF,cAAc,EACdP,YAAY,SACZjF,MAAOG,GACP2E,SAAU,SAAC1D,GACTP,QAAQC,IAAIM,GACZhB,GAAkBgB,OAMxB,kBAACqE,EAAA,EAAD,CACEC,QAAQ,YACRhB,UAAU,YACV/J,MAAO,CAAEkB,gBAAiB,UAAWjB,MAAO,QAC5C+K,QAAS,WACyB,KAA5B1F,GAAkBD,OAAyC,KAAzBG,GAAeH,MACnDM,GAAqBtB,GAAMM,GAAOC,GAAQU,GAAkBD,MAAOG,GAAeH,OAC7C,KAA5BC,GAAkBD,OAC3BM,GAAqBtB,GAAMM,GAAOC,GAAQU,GAAkBD,MAAOG,GAAeH,OAClFI,GAAkB,CAAEL,MAAO,SAAUC,MAAO,MACV,KAAzBG,GAAeH,OACxBM,GAAqBtB,GAAMM,GAAOC,GAAQU,GAAkBD,MAAOG,GAAeH,OAClFE,GAAqB,CAAEH,MAAO,SAAUC,MAAO,MAE/CM,OAdN,SAqBA,kBAACmF,EAAA,EAAD,CACEC,QAAQ,YACRhB,UAAU,YACV/J,MAAO,CAAEkB,gBAAiB,UAAWjB,MAAO,QAC5C+K,QAAS,WACPrF,GAAqB,EAAG,GAAI,GAAI,GAAI,IACpCF,GAAkB,CAAEL,MAAO,SAAUC,MAAO,KAC5CE,GAAqB,CAAEH,MAAO,SAAUC,MAAO,OAPnD,SAYA,kBAAC4F,EAAA,EAAD,CAASC,MAAO,0BAAMlL,MAAO,CAAEC,MAAO,QAASsK,SAAU,SAAzC,iBAAyEY,OAAK,GAC5F,kBAACC,EAAA,EAAD,CACErB,UAAU,YACV/J,MAAO,CAAEkB,gBAAiB,UAAWjB,MAAO,QAC5C+K,QAAS,WAIP/G,GAAyB,MACzBF,GAAc,CAAEF,oBAAoB,MAGtC,kBAAC,IAAD,WAcV,kBAACmG,EAAA,EAAD,KACE,kBAACqB,EAAA,EAAD,CAAgBtB,UAAW1G,EAAQvB,UAAW9B,MAAO,CAAEsL,UAAW7H,EAAU6C,OAAS,EAAI,OAAS,KAChG,kBAACiF,EAAA,EAAD,CAAOxB,UAAW1G,EAAQxC,MAAO2K,cAAY,GAC3C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAW3L,MAAO,CAAEwK,WAAY,SAAhC,WACA,kBAACmB,EAAA,EAAD,CAAW3L,MAAO,CAAEwK,WAAY,SAAhC,mBACA,kBAACmB,EAAA,EAAD,CAAW3L,MAAO,CAAE4B,UAAW,SAAU4I,WAAY,SAArD,gBACA,kBAACmB,EAAA,EAAD,CAAW3L,MAAO,CAAE4B,UAAW,SAAU4I,WAAY,SAArD,cACA,kBAACmB,EAAA,EAAD,CAAW3L,MAAO,CAAE4B,UAAW,SAAU4I,WAAY,SAArD,iBACA,kBAACmB,EAAA,EAAD,CAAW3L,MAAO,CAAE4B,UAAW,SAAU4I,WAAY,SAArD,mBACA,kBAACmB,EAAA,EAAD,CAAW3L,MAAO,CAAE4B,UAAW,SAAU4I,WAAY,SAArD,sBACA,kBAACmB,EAAA,EAAD,CACE3L,MAAO,CACL4B,UAAW,SACX4I,WAAY,SAHhB,cAQA,kBAACmB,EAAA,EAAD,CACE3L,MAAO,CACL4B,UAAW,SACX4I,WAAY,SAHhB,YASA,kBAACmB,EAAA,EAAD,CACE3L,MAAO,CACL4B,UAAW,SACX4I,WAAY,SAHhB,UAQA,kBAACmB,EAAA,EAAD,CACE3L,MAAO,CACL4B,UAAW,SACX4I,WAAY,SAHhB,eAQA,kBAACmB,EAAA,EAAD,CAAW3L,MAAO,CAAE4B,UAAW,SAAU4I,WAAY,SAArD,aAMJ,kBAACoB,EAAA,EAAD,KAcGnI,EAMEoI,KAAI,SAACnF,EAAUoF,GAAX,OACH,kBAACJ,EAAA,EAAD,CAAUK,OAAK,EAACpB,IAAKmB,GACnB,kBAACH,EAAA,EAAD,CAAWK,UAAU,KAAKC,MAAM,MAAMlC,UAAW1G,EAAQtC,YACtD+K,EAAQ,EAAIzH,GAAOE,IAEtB,kBAACoH,EAAA,EAAD,CAAW5B,UAAW1G,EAAQtC,YAAakF,cAAIS,EAAU,YAAa,QAEtE,kBAACiF,EAAA,EAAD,CAAW3L,MAAO,CAAE4B,UAAW,WAC5BkD,GAAY+G,KAAI,SAACK,EAAKC,GAAN,OACfD,EAAItF,OAAJ,OAAYF,QAAZ,IAAYA,OAAZ,EAAYA,EAAU4C,iBACJ,gBAAd4C,EAAIhB,MACF,cACAgB,EAAIhB,WAId,kBAACS,EAAA,EAAD,CAAW5B,UAAW1G,EAAQtC,WAAYf,MAAO,CAAE4B,UAAW,WAC3DqE,cAAIS,EAAU,YAAa,QAE9B,kBAACiF,EAAA,EAAD,CAAW5B,UAAW1G,EAAQtC,WAAYf,MAAO,CAAE4B,UAAW,WAajC,IAAlB,OAAR8E,QAAQ,IAARA,OAAA,EAAAA,EAAU4B,cAAoB,OAAS,cAE1C,kBAACqD,EAAA,EAAD,CAAW5B,UAAW1G,EAAQtC,WAAYf,MAAO,CAAE4B,UAAW,WAC3DqE,cAAIS,EAAU,iBAAkB,QAEnC,kBAACiF,EAAA,EAAD,CAAW5B,UAAW1G,EAAQtC,WAAYf,MAAO,CAAE4B,UAAW,WAC3DqE,cAAIS,EAAU,oBAAqB,QAEtC,kBAACiF,EAAA,EAAD,CAAW5B,UAAW1G,EAAQtC,WAAYf,MAAO,CAAE4B,UAAW,WAC3D8E,EAASxC,UAAYkI,IAAO1F,EAASxC,WAAWmI,OAAO,cAAgB,OAiB1E,kBAACV,EAAA,EAAD,CAAW5B,UAAW1G,EAAQtC,WAAYf,MAAO,CAAE4B,UAAW,WAC3D8E,EAAS8C,QAAU4C,IAAO1F,EAAS8C,SAAS6C,OAAO,cAAgB,OAiBtE,kBAACV,EAAA,EAAD,CAAW5B,UAAW1G,EAAQtC,WAAYf,MAAO,CAAE4B,UAAW,WAC5D,kBAACqJ,EAAA,EAAD,CACEC,MACE,0BAAMnB,UAAU,qBAAhB,UACsB,IAAZ,OAARrD,QAAQ,IAARA,OAAA,EAAAA,EAAUH,QAAc,SAAW,aAGvC4E,OAAK,GAEL,kBAACL,EAAA,EAAD,KACE,kBAAC9I,GAAD,CACEmI,SAAU,SAAC1D,GACTD,GAAaC,EAAGC,IAElBI,QAA4B,GAAnBJ,EAASH,YA+B1B,kBAACoF,EAAA,EAAD,CACE5B,UAAW1G,EAAQtC,WACnBf,MAAO,CACL4B,UAAW,SACX6I,WAAY,WAWbxE,cAAIS,EAAU,cAAe,OAAO4F,MAAM,EAAG,GAfhD,MAgBE,kBAAC,IAAD,CACEtM,MAAO,CAAEuM,OAAQ,WACjBvB,QAAS,WACP7F,GAAmB,2BAAKD,IAAN,IAAgBF,MAAM,EAAMC,KAAMgB,cAAIS,EAAU,cAAe,cAMvF,kBAACiF,EAAA,EAAD,CAAW5B,UAAW1G,EAAQtC,WAAYf,MAAO,CAAE4B,UAAW,SAAU6I,WAAY,WAClF,kBAACK,EAAA,EAAD,CACEE,QAAS,WACP/G,GAAyByC,GACzB3C,GAAc,CAAEF,oBAAoB,KAEtCkG,UAAU,cAEV,kBAACkB,EAAA,EAAD,CAASC,MAAO,0BAAMnB,UAAU,qBAAhB,QAAiDoB,OAAK,GACpE,kBAAC,IAAD,gBASI,IAArB1H,EAAU6C,QACT,kBAACkG,EAAA,EAAD,CAAaC,cAAc,iBAAiBlC,SAAS,OAAOmC,QAAS/I,KAIvE,kBAACgJ,EAAA,EAAD,CACC3M,MAAO,CAACiH,SAAS,QAAQ2F,OAAO,EAAE1L,gBAAgB,QAAQ2L,MAAM,IAC/DC,mBAAoBrI,IAAsB,IAAM,CAAC,GAAI,GAAI,KAAOA,GAAqB,GAAK,CAAC,GAAI,IAAM,CAAC,IACtGuH,UAAU,MACVe,MAAOtI,GACPF,YAAaA,GACbF,KAAMA,GACN2I,aAv0BO,SAACC,EAAOC,GAG/BhH,QAAQC,IAAI+G,GACZhH,QAAQC,IAAI,CAAE8G,QAAOC,YACrBvH,GAAqBuH,EAAU,EAAG3I,GAAaK,GAAQU,GAAkBD,MAAOG,GAAeH,OAC/Ff,GAAQ4I,IAk0BQC,oBA/zBc,SAACF,GAC/BtH,GAAqB,EAAGsH,EAAMpG,OAAOxB,MAAOT,GAAQU,GAAkBD,MAAOG,GAAeH,OAC5Fb,GAAe4I,SAASH,EAAMpG,OAAOxB,MAAO,KAC5Ca,QAAQC,IAAI,CAAE8G,UACd3I,GAAQ,WAk0BJ,kBAAC+I,EAAA,EAAD,CACEC,KAAMpI,GAASF,KAEf+E,UAAW,GACXwD,WAAW,GAEX,kBAACC,EAAA,EAAD,CAAaxN,MAAO,CAAEqB,QAAS,OAAQE,eAAgB,WACrD,wBAAIwI,UAAU,MAEhB,yBAAK/J,MAAO,CAAEqB,QAAS,OAAQE,eAAgB,YAO/C,kBAACkM,EAAA,EAAD,CACEzC,QAAS,kBAAM7F,GAAmB,2BAAKD,IAAN,IAAgBF,MAAM,EAAOC,KAAM,OACpEjF,MAAO,CACLiH,SAAU,WACV4F,MAAO,IACPa,IAAK,IACLnB,OAAQ,UACRtM,MAAO,QACPiB,gBAAiB,MACjB6B,aAAc,SAGlB,kBAAC4K,EAAA,EAAD,KAGE,yBAAK5D,UAAU,QACb,wBAAI/J,MAAO,CAAE4B,UAAW,WAAxB,eACA,6BACCsD,GAASD,KACV,iCAQR,kBAAC,IAAD,CACE2I,SAAS,KACTlM,MAAM,QACNmM,OAAQ/J,GAAWD,mBAOnBiK,QAAS,SAACb,EAAOc,GACXA,GACF7H,QAAQC,IAAI4H,GACZhK,GAAc,CACZF,oBAAoB,MAGtBE,GAAc,CACZF,oBAAoB,IAEtBI,GAAyB,QAO7B+J,iBAAiB,EACjBC,wBAAwB,EACxB/C,MACE,6BACE,yBACEnB,UAAU,OACV/J,MAAO,CAAE4B,UAAW,SAAU4I,WAAY,OAAQD,SAAU,OAAQ2D,WAAY,0BAErD,OAA1BlK,GAAA,kCAEH,yBAAK+F,UAAU,aACb,kBAAC,IAAD,CACE/J,MAAO,CACLuK,SAAU,SACVtD,SAAU,WACVyG,IAAK,GACLb,MAAO,GACP5M,MAAO,OACP8C,aAAc,MACd7B,gBAAiB,MACjBqL,OAAQ,WAEVvB,QAAS,WACPjH,GAAc,CACZF,oBAAoB,IAEtBI,GAAyB,WAMnCkK,QACE,oCACE,kBAAC,KAAD,CACErG,iBAAmB9D,GAA2CkF,GAAnBpB,GAC3CsG,cAAe,CAGbtJ,YAAamB,cAAIjC,GAAuB,gBAAiB,IACzDiE,UAAWhC,cAAIjC,GAAuB,YAAa,IACnDkE,UAAWjC,cAAIjC,GAAuB,YAAa,IACnDqE,UAAWpC,cAAIjC,GAAuB,YAAa,IACnDuE,eAAgBtC,cAAIjC,GAAuB,iBAAkB,IAC7DsE,aAAcrC,cAAIjC,GAAuB,eAAgB,IACzDE,UAAYF,GAA6B,IAAIqK,KAAKrK,GAAsBE,WAApC,GACpCsF,QAAUxF,GAA6B,IAAIqK,KAAKrK,GAAsBwF,SAApC,GAClCV,UAAW7C,cAAIjC,GAAuB,YAAa,IACnD+E,kBAAmB9C,cAAIjC,GAAuB,oBAAqB,IACnEiF,YAAahD,cAAIjC,GAAuB,cAAe,KAGzDsK,SAAU,SAAClF,GACTlD,QAAQC,IAAIiD,GACRpF,IAAmD,OAA1BA,GAC3B0F,GAAcN,GAEdD,GAAgBC,MAInB,gBAAGA,EAAH,EAAGA,OAAQmF,EAAX,EAAWA,cAAX,OACC,kBAAC,KAAD,CAAMvO,MAAO,CAAE0B,MAAO,SACpB,yBAAKqI,UAAU,cACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAW,6BACd,yBAAKA,UAAU,OAAf,gBAEA,kBAAC,KAAD,CACEhK,KAAK,cACLyO,GAAG,SACHzE,UAAU,eACV/J,MAAO,CAELsC,OAAQ,OACRS,aAAc,MACdH,OAAQ,oBACRhC,QAAS,SACT4J,WAAY,SAGd,4BAAQnF,MAAM,IAAd,uBACCP,GAAY+G,KAAI,SAACK,EAAKC,GAAN,OACf,4BAAQxB,IAAKwB,EAAG9G,MAAO6G,EAAItF,KACV,gBAAdsF,EAAIhB,MAA0B,cAAgBgB,EAAIhB,WAIzD,kBAAC,GAAD,CAAenL,KAAK,iBAEtB,yBAAKgK,UAAU,4BAA4B/J,MAAO,IAChD,yBAAK+J,UAAU,SAAf,cAEA,kBAAC,KAAD,CACEhK,KAAK,YACLyO,GAAG,SACHzE,UAAU,eACV/J,MAAO,CAELsC,OAAQ,OACRS,aAAc,MACdH,OAAQ,oBACRhC,QAAS,SACT4J,WAAY,OACZ+B,OAASvI,GAA6B,cAAL,IAEnCyK,WAAWzK,IAEX,4BAAQqB,MAAM,IAAd,qBACA,4BAAQA,MAAM,KAAd,YACA,4BAAQA,MAAM,KAAd,kBAEF,kBAAC,GAAD,CAAetF,KAAK,gBAIxB,yBAAKgK,UAAU,4BACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,OAAf,cAEA,kBAAC,KAAD,CACEhK,KAAK,YACL2O,KAAK,OACL3E,UAAU,eACV/J,MAAO,CAELsC,OAAQ,OACRS,aAAc,MACdH,OAAQ,oBACRhC,QAAS,SACT4J,WAAY,UAGhB,kBAAC,GAAD,CAAezK,KAAK,eAEtB,yBAAKgK,UAAU,6BACb,yBAAKA,UAAU,OAAf,cAEA,yBAAKA,UAAU,sCACZ,IACD,kBAAC,KAAD,CACEhK,KAAK,YACL2O,KAAK,OACL3E,UAAU,eACV/J,MAAO,CAEL2O,KAAM,EACNrM,OAAQ,OACRS,aAAc,MACdH,OAAQ,oBACRhC,QAAS,SACT4J,WAAY,QAEdoE,UAAQ,IAEV,4BACEF,KAAK,SACL1D,QAAS,WACPrB,GAAkBP,GAAQV,MAAK,SAACmG,GAAD,OAASN,EAAc,YAAaM,OAErE7O,MAAO,CAGL2O,KAAM,EACN5L,aAAc,MACdH,OAAQ,oBACRhC,QAAS,SAET4J,WAAY,OACZD,SAAU,OACVrJ,gBACEkI,EAAOtE,aAAesE,EAAOnB,WAAamB,EAAOlB,UAAY,UAAY,UAC3EjI,MAAO,QAETwO,WAAUrF,EAAOtE,aAAesE,EAAOnB,WAAamB,EAAOlB,YAnB7D,kBAyBF,kBAAC,GAAD,CAAenI,KAAK,gBAIxB,yBAAKgK,UAAU,4BACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,OAAf,iBAEA,kBAAC,KAAD,CACEhK,KAAK,eACLyO,GAAG,SACHzE,UAAU,eACV/J,MAAO,CAELsC,OAAQ,OACRS,aAAc,MACdH,OAAQ,oBACRhC,QAAS,SACT4J,WAAY,SAGd,4BAAQnF,MAAM,IAAd,wBACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,eAEF,kBAAC,GAAD,CAAetF,KAAK,kBAEtB,yBAAKgK,UAAU,6BACb,yBAAKA,UAAU,OAAf,kBAA4D,KAAvBX,EAAOd,aAAsB,MAAQ,IAE1E,kBAAC,KAAD,CACEvI,KAAK,iBACL2O,KAAK,OACL3E,UAAU,eACV/J,MAAO,CAELsC,OAAQ,OACRS,aAAc,MACdH,OAAQ,oBACRhC,QAAS,SACT4J,WAAY,UAKftE,QAAQC,IAA2B,KAAvBiD,EAAOd,cACpB,kBAAC,GAAD,CAAevI,KAAK,qBAIxB,yBAAKgK,UAAU,4BACb,yBAAKA,UAAU,uCACb,yBAAKA,UAAU,OAAf,cAEA,kBAAC,IAAD,CACE+E,QAAS,IAAIT,KACbhJ,MAAO+D,EAAOlF,UAEd6K,WAAW,aACX5E,SAAU,SAAC6E,GACT7K,GAAa6K,GACbT,EAAc,YAAaS,IAE7BhH,UAAQ,KAeZ,yBAAK+B,UAAU,uCACb,yBAAKA,UAAU,OAAf,YAEA,kBAAC,IAAD,CACE0E,UAAWvK,GACX4K,QAAS1F,EAAOlF,UAChBmB,MAAO+D,EAAOI,QACduF,WAAW,aACX5E,SAAU,SAAC6E,GACT5K,GAAW4K,GACXT,EAAc,UAAWS,IAE3BhH,UAAQ,MAmBd,yBAAK+B,UAAU,4BACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,OAAf,qBAEA,kBAAC,KAAD,CACEhK,KAAK,YACL2O,KAAK,OACL3E,UAAU,eACV/J,MAAO,CAELsC,OAAQ,OACRS,aAAc,MACdH,OAAQ,oBACRhC,QAAS,SACT4J,WAAY,OACZ+B,OAASvI,GAA6B,cAAL,IAEnCyK,WAAWzK,KAEb,kBAAC,GAAD,CAAejE,KAAK,eAEtB,yBAAKgK,UAAU,6BACb,yBAAKA,UAAU,OAAf,uBAEA,kBAAC,KAAD,CACEhK,KAAK,oBACL2O,KAAK,OACL3E,UAAU,eACV/J,MAAO,CAELsC,OAAQ,OACRS,aAAc,MACdH,OAAQ,oBACRhC,QAAS,SACT4J,WAAY,UAGhB,kBAAC,GAAD,CAAezK,KAAK,wBAGxB,yBAAKgK,UAAU,2BACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,MAAf,eACA,kBAAC,KAAD,CACEhK,KAAK,cAELyO,GAAG,WACHzE,UAAU,eACV/J,MAAO,CAELsC,OAAQ,QACRS,aAAc,MACdH,OAAQ,oBACRhC,QAAS,SACT4J,WAAY,UAGhB,6BACE,0BAAMxK,MAAO,CAAEkO,WAAY,wBAAyBe,YAAa,eAC9D7F,EAAOH,YAAY3C,OADtB,SAIF,kBAAC,GAAD,CAAevG,KAAK,kBAGxB,6BAnSF,IAmSS,6BACP,yBACEC,MAAO,CACLqB,QAAS,OACTE,eAAgB,WAGlB,4BACEmN,KAAK,SACL3E,UAAU,YACV/J,MAAO,CACL+C,aAAc,SACdH,OAAQ,OACR2H,SAAU,OACV7I,MAAO,OACPY,OAAQ,MACRpB,gBAAiB,UACjBjB,MAAO,SAVX","file":"static/js/41.121ae65c.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import React from \"react\";\r\nimport { ErrorMessage } from \"formik\";\r\n\r\nconst KErrorMessage = ({ name }) => {\r\n  return (\r\n    <div style={{ color: \"red\" }}>\r\n      {/* <br /> */}\r\n      <ErrorMessage name={name} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KErrorMessage;\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport classNames from \"classnames\";\r\nimport axios from \"../../axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport DRIVER from \"axios\";\r\nimport moment from \"moment\";\r\n// import Switch from '@mui/material/Switch';\r\n// import { styled } from '@mui/material/styles';\r\n// import Skeleton from \"react-loading-skeleton\";\r\n// import \"react-loading-skeleton/dist/skeleton.css\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Switch,\r\n  styled,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport DatePicker from \"react-date-picker\";\r\n\r\n// import { Delete } from '@material-ui/icons';\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport BlockIcon from \"@material-ui/icons/Block\";\r\n// import ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n\r\n// For Table\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport { get, orderBy } from \"lodash\";\r\n\r\n//history\r\nimport { useHistory } from \"react-router-dom\";\r\n// import AddEditCategory from \"../AccountManagement/Account_Details\";\r\n\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { DeleteOutline, WidgetsOutlined } from \"@material-ui/icons\";\r\nimport { array } from \"yup\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { Close, Search } from \"@material-ui/icons\";\r\nimport RSelect from \"react-select\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport NoDataFound from \"../../components/NoDataFound\";\r\nimport PuffLoader from \"react-spinners/PuffLoader\";\r\nimport { Input, Modal } from \"../../components/index\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport { handleValidateTip } from \"../../utils/validators\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport KErrorMessage from \"./KErrorMessage\";\r\nimport { ServiceType_Url } from \"../../statics/constants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexWrap: \"wrap\",\r\n    // marginTop: '5rem',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  paperHeading: {\r\n    padding: \"1rem 0rem\",\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  textMiddle: {\r\n    verticalAlign: \"middle !important\",\r\n  },\r\n  iconMargin: {\r\n    margin: \"0.5rem\",\r\n    color: \"#fff\",\r\n    backgroundColor: \"#696969\",\r\n  },\r\n  iconcolor: {\r\n    margin: \"0.5rem\",\r\n    color: \"#fff\",\r\n    backgroundColor: \"#0e3f37 !important\",\r\n  },\r\n  headingButton: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    padding: \"10px\",\r\n  },\r\n  headingAlignment: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    // justifyContent: \"space-between\",\r\n    // padding: \"0 2rem 0 2rem\"\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n    [\"@media (max-width:780px)\"]: {\r\n      // eslint-disable-line no-useless-computed-key\r\n      flexDirection: \"column\",\r\n      width: \"100%\",\r\n      gap: \"1rem\",\r\n      justifyContent: \"center\",\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n  Marginbutton: {\r\n    margin: \"0.5rem\",\r\n  },\r\n  container: {\r\n    // maxHeight: \"62vh\",\r\n  },\r\n  paperPaddingRightLeft: {\r\n    padding: \"0rem 1rem\",\r\n  },\r\n}));\r\n\r\nconst IOSSwitch = styled((props) => <Switch focusVisibleClassName=\".Mui-focusVisible\" disableRipple {...props} />)(\r\n  ({ theme }) => ({\r\n    width: 42,\r\n    height: 26,\r\n    padding: 0,\r\n    \"& .MuiSwitch-switchBase\": {\r\n      padding: 0,\r\n      margin: 2,\r\n      transitionDuration: \"300ms\",\r\n      \"&.Mui-checked\": {\r\n        transform: \"translateX(16px)\",\r\n        color: \"#fff\",\r\n        \"& + .MuiSwitch-track\": {\r\n          backgroundColor: theme.palette.mode === \"dark\" ? \"#32cd32\" : \"#32cd32\",\r\n          opacity: 1,\r\n          border: 0,\r\n        },\r\n        \"&.Mui-disabled + .MuiSwitch-track\": {\r\n          opacity: 0.5,\r\n        },\r\n      },\r\n      \"&.Mui-focusVisible .MuiSwitch-thumb\": {\r\n        color: \"#33cf4d\",\r\n        border: \"6px solid #fff\",\r\n      },\r\n      \"&.Mui-disabled .MuiSwitch-thumb\": {\r\n        color: theme.palette.mode === \"light\" ? theme.palette.grey[100] : theme.palette.grey[600],\r\n      },\r\n      \"&.Mui-disabled + .MuiSwitch-track\": {\r\n        opacity: theme.palette.mode === \"light\" ? 0.7 : 0.3,\r\n      },\r\n    },\r\n    \"& .MuiSwitch-thumb\": {\r\n      boxSizing: \"border-box\",\r\n      width: 22,\r\n      height: 22,\r\n    },\r\n    \"& .MuiSwitch-track\": {\r\n      borderRadius: 26 / 2,\r\n      backgroundColor: theme.palette.mode === \"light\" ? \"#E9E9EA\" : \"#f70f07\",\r\n      opacity: 1,\r\n      transition: theme.transitions.create([\"background-color\"], {\r\n        duration: 500,\r\n      }),\r\n    },\r\n  })\r\n);\r\n\r\nexport default function TaxiSingleManagement(props) {\r\n  const classes = useStyles();\r\n\r\n  // const history=useHistory();\r\n  const [rselKey, setRselKey] = useState(0);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [showSearch, setShowSearch] = useState(false);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [modalState, setModalState] = useState({\r\n    isAddEditPromoCode: \"\",\r\n  });\r\n  const [selectedPromoCodeData, setSelectedPromoCodeData] = useState(null);\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  // status switch\r\n  const [checked, setChecked] = useState(true);\r\n\r\n  // For Pagination\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [totalUserListCount, settotalUserListCount] = useState(0);\r\n  const [limit, setLimit] = useState(10);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [serviceType, setServiceType] = useState([]);\r\n  const [showDesc, setShowDescription] = useState({ show: false, data: \"\" });\r\n  const [serviceTypeFilter, setServiceTypeFilter] = useState({ label: \"All\", value: \"\" });\r\n  const [userTypeFilter, setUserTypeFilter] = useState({ label: \"All\", value: \"\" });\r\n  const handleChangePage = (event, newPage) => {\r\n    // console.log(event);\r\n    // console.log(newPage);\r\n    console.log(newPage);\r\n    console.log({ event, newPage });\r\n    getCategoriesContent(newPage + 1, rowsPerPage, search, serviceTypeFilter.value, userTypeFilter.value);\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    getCategoriesContent(0, event.target.value, search, serviceTypeFilter.value, userTypeFilter.value);\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    console.log({ event });\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCategoriesContent(page, limit, search, serviceTypeFilter.value, userTypeFilter.value);\r\n    getServiceType();\r\n  }, []);\r\n  useEffect(() => {\r\n    setRselKey((k) => k + 1);\r\n  }, [tableData]);\r\n  //get content\r\n\r\n  const getCategoriesContent = async (page = 1, limit = 10, search = \"\", serviceType = \"\", userType = \"\") => {\r\n    setIsLoading(true);\r\n    try {\r\n      const { data } = await axios.get(\r\n        `/private/promocode?page=${page}&limit=${limit}&search=${search}&serviceType=${serviceType}&userType=${userType}`\r\n      );\r\n      console.log(data);\r\n      setTableData([...data.data.docs]);\r\n      // setSearchedData(data.data.docs);\r\n      settotalUserListCount(data.data.totalDocs);\r\n      setSearch(search);\r\n      setIsLoading(false);\r\n\r\n      if (data.data.docs.length === 0 || data.status === 500) {\r\n        // toast.error(\"No Data Found\", {\r\n        //   position: toast.POSITION.TOP_RIGHT,\r\n        // });\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  // edit category itself\r\n\r\n  // const EditPromocode = (category) => {\r\n  //   props.history.push({\r\n  //     pathname: \"/adminPanel/AddEditPromocode\",\r\n  //     state: category,\r\n  //   });\r\n  // };\r\n\r\n  //edit  categories attribute\r\n\r\n  const EditAttributeContent = (category) => {\r\n    console.log(tableData);\r\n    props.history.push({\r\n      pathname: \"/EditCategoryAttributes\",\r\n      state: category,\r\n    });\r\n\r\n    // delete category\r\n  };\r\n  const DeleteTaxiSingle = async (category) => {\r\n    try {\r\n      if (window.confirm(\"Are you sure you want to delete this taxi?\")) {\r\n        const { data } = await axios.delete(\r\n          `/vehicleCategory/${category._id}`\r\n          // , {\r\n          // icon: category.icon,\r\n          // title: category.title,\r\n          // }\r\n        );\r\n        console.log(data);\r\n        getCategoriesContent(page, limit, search, serviceTypeFilter.value, userTypeFilter.value);\r\n        toast.success(\"Deleted\", {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n      } else {\r\n        toast.error(\"You have cancelled the operation\", {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(error, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    }\r\n  };\r\n\r\n  // status switch\r\n\r\n  const statusSwitch = async (e, category) => {\r\n    // if (window.confirm(\"Are you sure you want to change the status?\")) {\r\n    try {\r\n      const { data } = await axios.put(`/private/promocode/${category._id}`, {\r\n        status: e.target.checked ? \"1\" : \"0\",\r\n        // serviceTypeId: category.serviceTypeId,\r\n        // OfferType: category.OfferType,\r\n        // offerName: category.offerName,\r\n        // offerCode: category.offerCode,\r\n        // discountAmount: category.discountAmount,\r\n        // discountType: category.discountType,\r\n        // startDate: category.startDate,\r\n        // endDate: category.endDate,\r\n        // userLimit: category.userLimit,\r\n      });\r\n\r\n      console.log(data);\r\n      // console.log(e.target.checked);\r\n      toast.success(data.data.status == 1 ? \"Activated\" : \"Deactivated\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n      getCategoriesContent(page, limit, search, serviceTypeFilter.value, userTypeFilter.value);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    // } else {\r\n    // toast.error(\"Please add fare first\", {\r\n    //   position: toast.POSITION.TOP_RIGHT,\r\n    // });\r\n    // }\r\n  };\r\n\r\n  // For Search\r\n  const [searched, setSearched] = useState(\"\");\r\n  const [searchedData, setSearchedData] = useState([]);\r\n\r\n  const requestSearch = (searchedVal) => {\r\n    console.log(searchedVal);\r\n\r\n    const filteredRows = searchedData.filter((row) => {\r\n      let name = row.sect_name;\r\n      return name.toLowerCase().includes(searchedVal.toLowerCase());\r\n    });\r\n    setTableData(filteredRows);\r\n  };\r\n\r\n  const cancelSearch = () => {\r\n    getCategoriesContent(page, limit, \"\", serviceTypeFilter.value, userTypeFilter.value);\r\n  };\r\n  const ManageTaxiSingle = (category) => {\r\n    props.history.push({\r\n      pathname: \"/adminPanel/FareTaxiSingle\",\r\n      state: category,\r\n    });\r\n  };\r\n\r\n  function myDeb(call, d = 1000) {\r\n    let timer;\r\n    return function (...args) {\r\n      clearTimeout(timer);\r\n      timer = setTimeout(() => {\r\n        call(...args);\r\n      }, d);\r\n    };\r\n  }\r\n\r\n  const SearchPromocode = myDeb((search) => {\r\n    getCategoriesContent(page, limit, search.toLowerCase(), serviceTypeFilter.value, userTypeFilter.value);\r\n  });\r\n\r\n  useEffect(() => {\r\n    getServiceType();\r\n  }, []);\r\n\r\n  // get service type\r\n  const getServiceType = async () => {\r\n    try {\r\n      const { data } = await DRIVER.get(`${ServiceType_Url}`);\r\n      setServiceType(data.data);\r\n      console.log(data.data);\r\n      // return res.data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const serviceOptions = [\r\n    { label: \"All\", value: \"\" },\r\n    { label: \"Single Taxi\", value: \"62d53aa9bf652aa3778946ca\" },\r\n    { label: \"Designated Driver\", value: \"62d53abebf652aa3778946cd\" },\r\n    { label: \"Pet Category\", value: \"62d53ad1bf652aa3778946d0\" },\r\n    { label: \"Package Category\", value: \"62d53ae6bf652aa3778946d3\" },\r\n  ];\r\n  const userTypeOptions = [\r\n    { label: \"All\", value: \"\" },\r\n    { label: \"New User\", value: \"0\" },\r\n    { label: \"Existing User\", value: \"1\" },\r\n  ];\r\n  console.log(serviceType);\r\n  // const test = () => {\r\n  //   let a = serviceType.filter((ele, i) =>\r\n  //     ele._id === tableData[0].serviceTypeId ? ele.title : \"N/A\"\r\n  //   );\r\n  //   console.log(a);\r\n  // };\r\n  // console.log(tableData);\r\n  // console.log(test());\r\n\r\n  const validationSchema = yup.object({\r\n    serviceType: yup.string().required(\"Service Type is required\"),\r\n    offerType: yup.string().required(\"Offer Type is required\"),\r\n    offerName: yup\r\n      .string()\r\n      .min(5, \"Mininum 5 characters required\")\r\n      .max(30, \"Maximum 30 characters required\")\r\n      .required(\"Offer Name is required\"),\r\n    offerCode: yup.string().required(\"Offer Code is required\"),\r\n\r\n    discountType: yup.string().required(\"Discount Type is required\"),\r\n    discountAmount: yup.number().when(\"discountType\", {\r\n      is: (discountType) => discountType == \"0\",\r\n      then: yup\r\n        .number()\r\n        .integer(\"Integer values only\")\r\n        .min(1, \"Minimum value is 1\")\r\n        .max(99999, \"Max value is 99999\")\r\n        .typeError(\"Numeric values only\")\r\n        .required(\"Discount Amount is required\"),\r\n      otherwise: yup\r\n        .number()\r\n        .integer(\"Integer values only\")\r\n        .min(1, \"Minimum value is 1\")\r\n        .max(99, \"Maximum value is 99\")\r\n        .typeError(\"Numeric values only\")\r\n        .required(\"Discount Percentage is required\"),\r\n      // .integer(\"Integer values only\")\r\n      // .min(1, \"Minimum value is 1\")\r\n      // .typeError(\"Numeric values only\")\r\n      // .required(\"Discount Amount is required\"),\r\n      // startDate: !state ? \"\" : new Date(state.startDate),\r\n      // endDate: !state ? \"\" : new Date(state.endDate),\r\n    }),\r\n\r\n    userLimit: yup.number().typeError(\"Numeric values only\").required(\"User Limit is required\"),\r\n    minimumOrderLimit: yup.number().when(\"discountType\", {\r\n      is: (discountType) => discountType == \"0\",\r\n      then: yup\r\n        .number()\r\n        .integer(\"Integer values only\")\r\n        .moreThan(yup.ref(\"discountAmount\"), \"Minimum value should be greater than discount amount\")\r\n        .typeError(\"Numeric values only\")\r\n        .required(\"Discount Amount is required\"),\r\n      otherwise: yup\r\n        .number()\r\n        .integer(\"Integer values only\")\r\n        .min(1, \"Minimum value is 1\")\r\n        // .max(99, \"Maximum value is 99\")\r\n        .typeError(\"Numeric values only\")\r\n        .required(\"Discount Percentage is required\"),\r\n      // .typeError(\"Numeric values only\")\r\n      // .min(1, \"Minimum value is 1\")\r\n      // .required(\"Minimum Order Limit is required\"),\r\n    }),\r\n    description: yup\r\n      .string()\r\n      .min(5, \"Mininum 5 characters required\")\r\n      .max(150, \"Maximum 150 characters required\")\r\n      .required(\"Description is required\"),\r\n  });\r\n  const validationSchema2 = yup.object({\r\n    serviceType: yup.string().required(\"Service Type is required\"),\r\n    // offerType: yup.string().required(\"Offer Type is required\"),\r\n    offerName: yup\r\n      .string()\r\n      .min(5, \"Mininum 5 characters required\")\r\n      .max(30, \"Maximum 30 characters required\")\r\n      .required(\"Offer Name is required\"),\r\n    offerCode: yup.string().required(\"Offer Code is required\"),\r\n    discountType: yup.string().required(\"Discount Type is required\"),\r\n    discountAmount: yup\r\n      .number()\r\n      // .integer(\"Integer values only\")\r\n      // .min(1, \"Minimum value is 1\")\r\n      // .typeError(\"Numeric values only\")\r\n      // .required(\"Discount Amount is required\"),\r\n      // .when(\"discountType\", (discountType) => {\r\n      //   if (discountType == \"1\") {\r\n      //     return yup\r\n      //       .number()\r\n      //       .typeError(\"Numeric values only\")\r\n      //       .required(\"Discount Percentage is required\");\r\n      //   } else {\r\n      //     return yup\r\n      //       .number()\r\n      //       .typeError(\"Numeric values only\")\r\n      //       .required(\"Discount Amount is required\");\r\n      //   }\r\n      .when(\"discountType\", {\r\n        is: (discountType) => discountType == \"0\",\r\n        then: yup\r\n          .number()\r\n          .integer(\"Integer values only\")\r\n          .min(1, \"Minimum value is 1\")\r\n          .max(99999, \"Max value is 99999\")\r\n          .typeError(\"Numeric values only\")\r\n          .required(\"Discount Amount is required\"),\r\n        otherwise: yup\r\n          .number()\r\n          .integer(\"Integer values only\")\r\n          .min(1, \"Minimum value is 1\")\r\n          .max(99, \"Maximum value is 99\")\r\n          .typeError(\"Numeric values only\")\r\n          .required(\"Discount Percentage is required\"),\r\n        // if (discountType == \"1\") {\r\n        //   return yup\r\n        //     .number()\r\n        //     .integer(\"Integer values only\")\r\n        //     .min(1, \"Minimum value is 1\")\r\n        //     .max(99, \"Maximum value is 99\")\r\n        //     .typeError(\"Numeric values only\")\r\n        //     .required(\"Discount Percentage is required\");\r\n        // } else {\r\n        //   return yup\r\n        //     .number()\r\n        //     .integer(\"Integer values only\")\r\n        //     .min(1, \"Minimum value is 1\")\r\n        //     .typeError(\"Numeric values only\")\r\n        //     .required(\"Discount Amount is required\");\r\n        // }\r\n        // }),\r\n\r\n        // startDate: yup.date().required(\"Start Date is required\"),\r\n        // endDate: yup.date().required(\"End Date is required\"),\r\n        // userLimit: yup.number().required(\"User Limit is required\"),\r\n      }),\r\n    minimumOrderLimit: yup.number().when(\"discountType\", {\r\n      is: (discountType) => discountType == \"0\",\r\n      then: yup\r\n        .number()\r\n        .integer(\"Integer values only\")\r\n        .moreThan(yup.ref(\"discountAmount\"), \"Minimum value should be greater than discount amount\")\r\n        .typeError(\"Numeric values only\")\r\n        .required(\"Discount Amount is required\"),\r\n      otherwise: yup\r\n        .number()\r\n        .integer(\"Integer values only\")\r\n        .min(1, \"Minimum value is 1\")\r\n        // .max(99, \"Maximum value is 99\")\r\n        .typeError(\"Numeric values only\")\r\n        .required(\"Discount Percentage is required\"),\r\n      // .typeError(\"Numeric values only\")\r\n      // .min(1, \"Minimum value is 1\")\r\n      // .required(\"Minimum Order Limit is required\"),\r\n    }),\r\n    description: yup\r\n      .string()\r\n      .min(5, \"Mininum 5 characters required\")\r\n      .max(150, \"Maximum 150 characters required\")\r\n      .required(\"Description is required\"),\r\n    // .typeError(\"Numeric values only\")\r\n\r\n    // .min(1, \"Minimum value is 1\")\r\n    // .required(\"Minimum Order Limit is required\"),\r\n  });\r\n  useEffect(() => {\r\n    getServiceType();\r\n  }, []);\r\n\r\n  // ADDING NEW CATEGORY\r\n\r\n  const addNewPromocode = async (values) => {\r\n    try {\r\n      console.log(values);\r\n\r\n      const { data } = await axios.post(\"/private/promocode\", {\r\n        serviceTypeId: values.serviceType,\r\n        OfferType: values.offerType,\r\n        offerName: values.offerName,\r\n        offerCode: values.offerCode,\r\n        discountAmount: values.discountAmount,\r\n        discountType: values.discountType,\r\n        startDate: values.startDate,\r\n        endDate: values.endDate,\r\n        userLimit: values.userLimit,\r\n        minimumOrderLimit: values.minimumOrderLimit,\r\n        description: values.description,\r\n      });\r\n      setModalState({\r\n        isAddEditPromoCode: false,\r\n      });\r\n      setSelectedPromoCodeData(null);\r\n\r\n      toast.success(data.message, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n      getCategoriesContent(page, limit, search, serviceTypeFilter.value, userTypeFilter.value);\r\n      getServiceType();\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // Edit Category . update api\r\n\r\n  const EditPromocode = async (values) => {\r\n    try {\r\n      console.log(values);\r\n\r\n      const { data } = await axios.put(`/private/promocode/${selectedPromoCodeData._id}`, {\r\n        serviceTypeId: values.serviceType,\r\n        OfferType: values.offerType,\r\n        offerName: values.offerName,\r\n        offerCode: values.offerCode,\r\n        discountAmount: values.discountAmount,\r\n        discountType: values.discountType,\r\n        startDate: values.startDate,\r\n        endDate: values.endDate,\r\n        userLimit: values.userLimit,\r\n        minimumOrderLimit: values.minimumOrderLimit,\r\n        description: values.description,\r\n      });\r\n      setModalState({\r\n        isAddEditPromoCode: false,\r\n      });\r\n      setSelectedPromoCodeData(null);\r\n      // props.history.push({\r\n      //   pathname: \"/adminPanel/PromoCode_Management\",\r\n      // });\r\n      toast.success(data.message, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n      getCategoriesContent(page, limit, search, serviceTypeFilter.value, userTypeFilter.value);\r\n      getServiceType();\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const [offer, setOfferCode] = useState(\"\");\r\n  const generateOfferCode = async (values) => {\r\n    let dataToReturn;\r\n    if (values.offerName.length >= 5 && values.offerName.length <= 20) {\r\n      try {\r\n        const { data } = await axios.post(`/private/createOfferCode`, {\r\n          serviceTypeId: values.serviceType,\r\n          offerName: values.offerName,\r\n          OfferType: values.offerType,\r\n        });\r\n        console.log(data);\r\n\r\n        toast.success(\"Succesfully generated offer code\", {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n        dataToReturn = data.data.offerCode;\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      return dataToReturn;\r\n    } else {\r\n      toast.error(\"Check Form Values\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className={classes.root}>\r\n          <Paper elevation={0} style={{ backgroundColor: \"transparent\" }}>\r\n            <div className={classes.paperPaddingRightLeft}>\r\n              <div className=\"\">\r\n                <Paper elevation={0} style={{ backgroundColor: \"transparent\" }} className={classNames(classes.paperHeading)}>\r\n                \r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                      // gap: \"0.5rem\",\r\n                      flexWrap: \"wrap\",\r\n                    }}\r\n                  >\r\n                      <div style={{ display: \"flex\", flexWrap: \"wrap\", gap: \"0.5rem\", alignItems: \"center\" }}>\r\n                      <div>\r\n                        {\" \"}\r\n                        <SearchBar\r\n                          className={\"heightfix  my-2 \"}\r\n                          style={{ borderRadius: \"25px\", width: \"293px\" }}\r\n                          onChange={(searchVal) => SearchPromocode(searchVal)}\r\n                          onCancelSearch={() => cancelSearch()}\r\n                          placeholder=\"Search By Promocode Name\"\r\n                        />\r\n                      </div>\r\n                   \r\n                    </div>\r\n                    <div style={{ display: \"flex\", gap: \"0.5rem\", alignItems: \"center\", flexWrap: \"wrap\" }}>\r\n                      {\" \"}\r\n                 \r\n                   \r\n                      <span style={{ fontSize: \"18px\", fontWeight: \"700\", whiteSpace: \"nowrap\" }}>\r\n                        Filter By Service :\r\n                      </span>{\" \"}\r\n                  \r\n                      <div className=\"customReactSelect\" style={{ width: \"150px\", zIndex: 4 }}>\r\n                        <RSelect\r\n                          key={rselKey}\r\n                          options={serviceOptions}\r\n                          // defaultValue={{ label: \"All\", value: \"\" }}\r\n                          isSearchable={false}\r\n                          placeholder=\"Select\"\r\n                          value={serviceTypeFilter}\r\n                          onChange={(e) => {\r\n                            setServiceTypeFilter(e);\r\n                            // getCategoriesContent(page, limit, search, e.value, userTypeFilter.value);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      {/* &emsp; */}\r\n                      <span style={{ fontSize: \"18px\", fontWeight: \"700\", whiteSpace: \"nowrap\" }}>Filter By User :</span>\r\n                      {/* &nbsp; */}\r\n                      <div className=\"customReactSelect\" style={{ width: \"150px\", zIndex: 4 }}>\r\n                        <RSelect\r\n                          key={rselKey}\r\n                          options={userTypeOptions}\r\n                          // defaultValue={{ label: \"All\", value: \"\" }}\r\n                          isSearchable={false}\r\n                          placeholder=\"Select\"\r\n                          value={userTypeFilter}\r\n                          onChange={(e) => {\r\n                            console.log(e);\r\n                            setUserTypeFilter(e);\r\n                            // getCategoriesContent(page, limit, search, serviceTypeFilter.value, e.value);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      {/* &emsp; */}\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        className=\"buttoncss\"\r\n                        style={{ backgroundColor: \"#0059cd\", color: \"#fff\" }}\r\n                        onClick={() => {\r\n                          if (serviceTypeFilter.value !== \"\" && userTypeFilter.value !== \"\") {\r\n                            getCategoriesContent(page, limit, search, serviceTypeFilter.value, userTypeFilter.value);\r\n                          } else if (serviceTypeFilter.value !== \"\") {\r\n                            getCategoriesContent(page, limit, search, serviceTypeFilter.value, userTypeFilter.value);\r\n                            setUserTypeFilter({ label: \"Select\", value: \"\" });\r\n                          } else if (userTypeFilter.value !== \"\") {\r\n                            getCategoriesContent(page, limit, search, serviceTypeFilter.value, userTypeFilter.value);\r\n                            setServiceTypeFilter({ label: \"Select\", value: \"\" });\r\n                          } else {\r\n                            getCategoriesContent();\r\n                          }\r\n                        }}\r\n                      >\r\n                        Apply\r\n                      </Button>\r\n                      {/* &emsp; */}\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        className=\"buttoncss\"\r\n                        style={{ backgroundColor: \"#0059cd\", color: \"#fff\" }}\r\n                        onClick={() => {\r\n                          getCategoriesContent(1, 10, \"\", \"\", \"\");\r\n                          setUserTypeFilter({ label: \"Select\", value: \"\" });\r\n                          setServiceTypeFilter({ label: \"Select\", value: \"\" });\r\n                        }}\r\n                      >\r\n                        RESET\r\n                      </Button>\r\n                      <Tooltip title={<span style={{ color: \"white\", fontSize: \"16px\" }}>Add Promocode</span>} arrow>\r\n                        <IconButton\r\n                          className=\"buttoncss\"\r\n                          style={{ backgroundColor: \"#0059cd\", color: \"#fff\" }}\r\n                          onClick={() => {\r\n                            // props.history.push({\r\n                            //   pathname: \"/adminPanel/AddEditPromocode\",\r\n                            // });\r\n                            setSelectedPromoCodeData(null);\r\n                            setModalState({ isAddEditPromoCode: true });\r\n                          }}\r\n                        >\r\n                          <AddIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    </div>\r\n                  \r\n                  </div>\r\n                </Paper>\r\n\r\n                {/* //new design */}\r\n\r\n                {/* <br /> */}\r\n\r\n                {/* status end */}\r\n\r\n                <Paper>\r\n                  <TableContainer className={classes.container} style={{ minHeight: tableData.length > 0 ? \"50vh\" : \"\" }}>\r\n                    <Table className={classes.table} stickyHeader>\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell style={{ fontWeight: \"bold\" }}>Sr. No.</TableCell>\r\n                          <TableCell style={{ fontWeight: \"bold\" }}> Promocode Name</TableCell>\r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Service Type</TableCell>\r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Offer Code</TableCell>\r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Discount Type</TableCell>\r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Discount Amount</TableCell>\r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Minimum Ride Value</TableCell>\r\n                          <TableCell\r\n                            style={{\r\n                              textAlign: \"center\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            Start Date\r\n                          </TableCell>\r\n                          <TableCell\r\n                            style={{\r\n                              textAlign: \"center\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            End Date\r\n                          </TableCell>\r\n\r\n                          <TableCell\r\n                            style={{\r\n                              textAlign: \"center\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            Status\r\n                          </TableCell>\r\n                          <TableCell\r\n                            style={{\r\n                              textAlign: \"center\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            Description\r\n                          </TableCell>\r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Actions</TableCell>\r\n                          {/* <TableCell>User Type</TableCell>\r\n                              <TableCell>Status</TableCell> */}\r\n                        </TableRow>\r\n                      </TableHead>\r\n\r\n                      <TableBody>\r\n                        {/* {isLoading ? (\r\n                          <TableRow>\r\n                            <Skeleton\r\n                              style={{ width: \"70vw\", borderRadius: \"20px\" }}\r\n                              highlightColor=\"#fff\"\r\n                              height=\"1rem\"\r\n                              count={2}\r\n                              baseColor=\"#ebebeb\"\r\n                            />\r\n                          </TableRow>\r\n                        ) : (\r\n                          false\r\n                        )} */}\r\n                        {tableData\r\n                          // .slice(\r\n                          //   page * rowsPerPage,\r\n                          //   page * rowsPerPage + rowsPerPage\r\n                          // )\r\n                          // .reverse()\r\n                          .map((category, index) => (\r\n                            <TableRow hover key={index}>\r\n                              <TableCell component=\"th\" scope=\"row\" className={classes.textMiddle}>\r\n                                {index + 1 + page * rowsPerPage}\r\n                              </TableCell>\r\n                              <TableCell className={classes.textMiddle}>{get(category, \"offerName\", \"N/A\")}</TableCell>\r\n\r\n                              <TableCell style={{ textAlign: \"center\" }}>\r\n                                {serviceType.map((ele, i) =>\r\n                                  ele._id === category?.serviceTypeId\r\n                                    ? ele.title === \"Taxi Single\"\r\n                                      ? \"Single Taxi\"\r\n                                      : ele.title\r\n                                    : false\r\n                                )}\r\n                              </TableCell>\r\n                              <TableCell className={classes.textMiddle} style={{ textAlign: \"center\" }}>\r\n                                {get(category, \"offerCode\", \"N/A\")}\r\n                              </TableCell>\r\n                              <TableCell className={classes.textMiddle} style={{ textAlign: \"center\" }}>\r\n                                {/* <Switch\r\n                                  checked={category.baseRate}\r\n                                  onChange={(e) =>\r\n                                    handleSwitchChange(e, category)\r\n                                  }\r\n                                /> */}\r\n                                {/* <IOSSwitch\r\n                                  onChange={(e) => {\r\n                                    statusSwitch(e, category);\r\n                                  }}\r\n                                  checked={category.isActive}\r\n                                /> */}\r\n                                {category?.discountType == 0 ? \"Flat\" : \"Percentage\"}\r\n                              </TableCell>\r\n                              <TableCell className={classes.textMiddle} style={{ textAlign: \"center\" }}>\r\n                                {get(category, \"discountAmount\", \"N/A\")}\r\n                              </TableCell>\r\n                              <TableCell className={classes.textMiddle} style={{ textAlign: \"center\" }}>\r\n                                {get(category, \"minimumOrderLimit\", \"N/A\")}\r\n                              </TableCell>\r\n                              <TableCell className={classes.textMiddle} style={{ textAlign: \"center\" }}>\r\n                                {category.startDate ? moment(category.startDate).format(\"DD/MM/YYYY\") : \"N/A\"}\r\n                                {/* {category.startDate\r\n                                  ? new Date(category.startDate)\r\n                                      // .toUTCString()\r\n                                      .getUTCDate() +\r\n                                    \"/\" +\r\n                                    (new Date(category.startDate)\r\n                                      // .toUTCString()\r\n                                      .getUTCMonth() +\r\n                                      1) +\r\n                                    \"/\" +\r\n                                    new Date(category.startDate)\r\n                                      // .toUTCString()\r\n                                      .getUTCFullYear()\r\n                                  : // moment.utc(category.createdAt).format(\"L\")\r\n                                    \"N/A\"} */}\r\n                              </TableCell>\r\n                              <TableCell className={classes.textMiddle} style={{ textAlign: \"center\" }}>\r\n                                {category.endDate ? moment(category.endDate).format(\"DD/MM/YYYY\") : \"N/A\"}\r\n                                {/* {category.endDate\r\n                                  ? new Date(category.endDate)\r\n                                      // .toUTCString()\r\n                                      .getUTCDate() +\r\n                                    \"/\" +\r\n                                    (new Date(category.endDate)\r\n                                      // .toUTCString()\r\n                                      .getUTCMonth() +\r\n                                      1) +\r\n                                    \"/\" +\r\n                                    new Date(category.endDate)\r\n                                      // .toUTCString()\r\n                                      .getUTCFullYear()\r\n                                  : // moment.utc(category.createdAt).format(\"L\")\r\n                                    \"N/A\"} */}\r\n                              </TableCell>\r\n                              <TableCell className={classes.textMiddle} style={{ textAlign: \"center\" }}>\r\n                                <Tooltip\r\n                                  title={\r\n                                    <span className=\"TooltipCustomSize\">{`${\r\n                                      category?.status == 1 ? \"Active\" : \"Inactive\"\r\n                                    }`}</span>\r\n                                  }\r\n                                  arrow\r\n                                >\r\n                                  <Button>\r\n                                    <IOSSwitch\r\n                                      onChange={(e) => {\r\n                                        statusSwitch(e, category);\r\n                                      }}\r\n                                      checked={category.status == 1 ? true : false}\r\n                                    />\r\n                                  </Button>\r\n                                </Tooltip>\r\n                                {/* {category?.status == 1 ? (\r\n                                  <span\r\n                                    style={{\r\n                                      backgroundColor: \"mediumseagreen\",\r\n                                      color: \"white\",\r\n                                      padding: \"7px 20px\",\r\n                                      borderRadius: \"100px\",\r\n                                      boxShadow: \"0 0.5em 1.5em -0.5em #14a73e98\",\r\n                                    }}\r\n                                  >\r\n                                    Active\r\n                                  </span>\r\n                                ) : (\r\n                                  <span\r\n                                    style={{\r\n                                      backgroundColor: \"red\",\r\n                                      color: \"white\",\r\n                                      padding: \"7px 20px\",\r\n                                      borderRadius: \"100px\",\r\n                                      boxShadow: \"0 0.5em 1.5em -0.5em #EE4B2B\",\r\n                                    }}\r\n                                  >\r\n                                    Inactive\r\n                                  </span>\r\n                                )} */}\r\n                              </TableCell>\r\n                              {/* <Tooltip title={showDesc ? \"Click to View\" : \"Click to Hide\"} arrow> */}\r\n                              <TableCell\r\n                                className={classes.textMiddle}\r\n                                style={{\r\n                                  textAlign: \"center\",\r\n                                  whiteSpace: \"nowrap\",\r\n                                  // whiteSpace: showDesc ? \"nowrap\" : \"\",\r\n                                  // overflow: showDesc ? \"hidden\" : \"\",\r\n                                  // textOverflow: showDesc ? \"ellipsis\" : \"\",\r\n                                  // maxWidth: \"200px\",\r\n                                  // cursor: \"pointer\",\r\n                                }}\r\n                                // onClick={() => {\r\n                                //   setShowDescription(!showDesc);\r\n                                // }}\r\n                              >\r\n                                {get(category, \"description\", \"N/A\").slice(0, 5)}...\r\n                                <VisibilityIcon\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  onClick={() => {\r\n                                    setShowDescription({ ...showDesc, show: true, data: get(category, \"description\", \"N/A\") });\r\n                                  }}\r\n                                />\r\n                              </TableCell>\r\n                              {/* </Tooltip> */}\r\n\r\n                              <TableCell className={classes.textMiddle} style={{ textAlign: \"center\", whiteSpace: \"nowrap\" }}>\r\n                                <Button\r\n                                  onClick={() => {\r\n                                    setSelectedPromoCodeData(category);\r\n                                    setModalState({ isAddEditPromoCode: true });\r\n                                  }}\r\n                                  className=\"EditButton\"\r\n                                >\r\n                                  <Tooltip title={<span className=\"TooltipCustomSize\">Edit</span>} arrow>\r\n                                    <EditIcon />\r\n                                  </Tooltip>\r\n                                </Button>\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  {tableData.length === 0 ? (\r\n                    <NoDataFound TextToDisplay=\"No Data Found.\" fontSize=\"24px\" Loading={isLoading} />\r\n                  ) : (\r\n                    false\r\n                  )}\r\n                  <TablePagination\r\n                   style={{position:\"fixed\",bottom:4,backgroundColor:\"white\",right:27}}\r\n                    rowsPerPageOptions={totalUserListCount >= 100 ? [10, 25, 100] : totalUserListCount > 10 ? [10, 25] : [10]}\r\n                    component=\"div\"\r\n                    count={totalUserListCount}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            </div>\r\n          </Paper>\r\n        </div>\r\n        <Dialog\r\n          open={showDesc.show}\r\n          // onClose={handleClose}\r\n          className={\"\"}\r\n          fullWidth={true}\r\n        >\r\n          <DialogTitle style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <h4 className=\"\"></h4>\r\n          </DialogTitle>\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            {/* <img\r\n              src={imageUrl}\r\n              alt=\"...\"\r\n              style={{ width: \"50px\", height: \"50px\" }}\r\n            /> */}\r\n          </div>\r\n          <Close\r\n            onClick={() => setShowDescription({ ...showDesc, show: false, data: \"\" })}\r\n            style={{\r\n              position: \"absolute\",\r\n              right: \"5\",\r\n              top: \"5\",\r\n              cursor: \"pointer\",\r\n              color: \"white\",\r\n              backgroundColor: \"red\",\r\n              borderRadius: \"50%\",\r\n            }}\r\n          />\r\n          <DialogContent>\r\n            {/* <DialogContentText > */}\r\n\r\n            <div className=\"my-3\">\r\n              <h5 style={{ textAlign: \"center\" }}>Description</h5>\r\n              <br />\r\n              {showDesc.data}\r\n              <br />\r\n            </div>\r\n            {/* </DialogContentText> */}\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n\r\n      {/* AddEdit promocode */}\r\n      <Modal\r\n        maxWidth=\"lg\"\r\n        width=\"840px\"\r\n        isOpen={modalState.isAddEditPromoCode}\r\n        // onClose={() => {\r\n        //   setModalState({\r\n        //     isAddEditPromoCode: false,\r\n        //   });\r\n        //   setSelectedPromoCodeData(null);\r\n        // }}\r\n        onClose={(event, reason) => {\r\n          if (reason && (reason === \"backdropClick\" || \"escapeKeyDown\")) {\r\n            console.log(reason);\r\n            setModalState({\r\n              isAddEditPromoCode: true,\r\n            });\r\n          } else {\r\n            setModalState({\r\n              isAddEditPromoCode: false,\r\n            });\r\n            setSelectedPromoCodeData(null);\r\n          }\r\n          // setModalState({\r\n          //   isAddEditTaxiSingle: false,\r\n          // });\r\n          // setSelectedTaxiDataAddEdit(null);\r\n        }}\r\n        backgroundModal={false}\r\n        backgroundModalContent={false}\r\n        title={\r\n          <div>\r\n            <div\r\n              className=\"my-3\"\r\n              style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"22px\", fontFamily: \"'DM Sans', sans-serif\" }}\r\n            >\r\n              {selectedPromoCodeData === null ? `Add PromoCode` : `Edit PromoCode`}\r\n            </div>\r\n            <div className=\"closeicon\">\r\n              <AiOutlineClose\r\n                style={{\r\n                  fontSize: \"1.5rem\",\r\n                  position: \"absolute\",\r\n                  top: 16,\r\n                  right: 16,\r\n                  color: \"#fff\",\r\n                  borderRadius: \"50%\",\r\n                  backgroundColor: \"red\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => {\r\n                  setModalState({\r\n                    isAddEditPromoCode: false,\r\n                  });\r\n                  setSelectedPromoCodeData(null);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        }\r\n        content={\r\n          <>\r\n            <Formik\r\n              validationSchema={!selectedPromoCodeData ? validationSchema : validationSchema2}\r\n              initialValues={{\r\n                // name: get(state, \"title\", \"\"),\r\n                // file1: get(state, \"icon\", \"\"),\r\n                serviceType: get(selectedPromoCodeData, \"serviceTypeId\", \"\"),\r\n                offerType: get(selectedPromoCodeData, \"OfferType\", \"\"),\r\n                offerName: get(selectedPromoCodeData, \"offerName\", \"\"),\r\n                offerCode: get(selectedPromoCodeData, \"offerCode\", \"\"),\r\n                discountAmount: get(selectedPromoCodeData, \"discountAmount\", \"\"),\r\n                discountType: get(selectedPromoCodeData, \"discountType\", \"\"),\r\n                startDate: !selectedPromoCodeData ? \"\" : new Date(selectedPromoCodeData.startDate),\r\n                endDate: !selectedPromoCodeData ? \"\" : new Date(selectedPromoCodeData.endDate),\r\n                userLimit: get(selectedPromoCodeData, \"userLimit\", \"\"),\r\n                minimumOrderLimit: get(selectedPromoCodeData, \"minimumOrderLimit\", \"\"),\r\n                description: get(selectedPromoCodeData, \"description\", \"\"),\r\n                // description: get(state, \"description\", \"\"),\r\n              }}\r\n              onSubmit={(values) => {\r\n                console.log(values);\r\n                if (selectedPromoCodeData && selectedPromoCodeData !== null) {\r\n                  EditPromocode(values);\r\n                } else {\r\n                  addNewPromocode(values);\r\n                }\r\n              }}\r\n            >\r\n              {({ values, setFieldValue }) => (\r\n                <Form style={{ width: \"100%\" }}>\r\n                  <div className=\"container \">\r\n                    <div className=\"row my-4 justify-center\">\r\n                      <div className={\"col-6 d-flex flex-column \"}>\r\n                        <div className=\"h5 \">Service Type</div>\r\n\r\n                        <Field\r\n                          name=\"serviceType\"\r\n                          as=\"select\"\r\n                          className=\"form-control\"\r\n                          style={{\r\n                            // width: \"90%\",\r\n                            height: \"40px\",\r\n                            borderRadius: \"5px\",\r\n                            border: \"1px solid #ced4da\",\r\n                            padding: \"0.5rem\",\r\n                            fontWeight: \"bold\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select Service Type</option>\r\n                          {serviceType.map((ele, i) => (\r\n                            <option key={i} value={ele._id}>\r\n                              {ele.title === \"Taxi Single\" ? \"Single Taxi\" : ele.title}\r\n                            </option>\r\n                          ))}\r\n                        </Field>\r\n                        <KErrorMessage name=\"serviceType\" />\r\n                      </div>\r\n                      <div className=\"col-6 d-flex flex-column \" style={{}}>\r\n                        <div className=\" h5  \">Offer Type</div>\r\n\r\n                        <Field\r\n                          name=\"offerType\"\r\n                          as=\"select\"\r\n                          className=\"form-control\"\r\n                          style={{\r\n                            // width: \"90%\",\r\n                            height: \"40px\",\r\n                            borderRadius: \"5px\",\r\n                            border: \"1px solid #ced4da\",\r\n                            padding: \"0.5rem\",\r\n                            fontWeight: \"bold\",\r\n                            cursor: !selectedPromoCodeData ? \"\" : \"not-allowed\",\r\n                          }}\r\n                          disabled={!selectedPromoCodeData ? false : true}\r\n                        >\r\n                          <option value=\"\">Select Offer Type</option>\r\n                          <option value=\"0\">New User</option>\r\n                          <option value=\"1\">Existing User</option>\r\n                        </Field>\r\n                        <KErrorMessage name=\"offerType\" />\r\n                      </div>\r\n                    </div>\r\n                    {/* 1 */}\r\n                    <div className=\"row my-4 justify-center \">\r\n                      <div className=\"col-6 d-flex flex-column \">\r\n                        <div className=\"h5 \">Offer Name</div>\r\n\r\n                        <Field\r\n                          name=\"offerName\"\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          style={{\r\n                            // width: \"70%\",\r\n                            height: \"40px\",\r\n                            borderRadius: \"5px\",\r\n                            border: \"1px solid #ced4da\",\r\n                            padding: \"0.5rem\",\r\n                            fontWeight: \"bold\",\r\n                          }}\r\n                        />\r\n                        <KErrorMessage name=\"offerName\" />\r\n                      </div>\r\n                      <div className=\"col-6 d-flex flex-column \">\r\n                        <div className=\"h5 \">Offer Code</div>\r\n\r\n                        <div className=\"d-flex flex-row align-items-center\">\r\n                          {\" \"}\r\n                          <Field\r\n                            name=\"offerCode\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            style={{\r\n                              // width: \"70%\",\r\n                              flex: 1,\r\n                              height: \"40px\",\r\n                              borderRadius: \"5px\",\r\n                              border: \"1px solid #ced4da\",\r\n                              padding: \"0.5rem\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                            readOnly\r\n                          />\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                              generateOfferCode(values).then((res) => setFieldValue(\"offerCode\", res));\r\n                            }}\r\n                            style={{\r\n                              // width: \"50%\",\r\n                              // height: \"40px\",\r\n                              flex: 1,\r\n                              borderRadius: \"5px\",\r\n                              border: \"1px solid #ced4da\",\r\n                              padding: \"0.3rem\",\r\n                              // paddingRight: \"0.5rem\",\r\n                              fontWeight: \"bold\",\r\n                              fontSize: \"16px\",\r\n                              backgroundColor:\r\n                                values.serviceType && values.offerType && values.offerName ? \"#0059cd\" : \"#c4c4c4\",\r\n                              color: \"#fff\",\r\n                            }}\r\n                            disabled={values.serviceType && values.offerType && values.offerName ? false : true}\r\n                          >\r\n                            Generate Code\r\n                          </button>\r\n                        </div>\r\n\r\n                        <KErrorMessage name=\"offerCode\" />\r\n                      </div>\r\n                    </div>\r\n                    {/* 2 */}\r\n                    <div className=\"row my-4 justify-center \">\r\n                      <div className=\"col-6 d-flex flex-column \">\r\n                        <div className=\"h5 \">Discount Type</div>\r\n\r\n                        <Field\r\n                          name=\"discountType\"\r\n                          as=\"select\"\r\n                          className=\"form-control\"\r\n                          style={{\r\n                            // width: \"70%\",\r\n                            height: \"40px\",\r\n                            borderRadius: \"5px\",\r\n                            border: \"1px solid #ced4da\",\r\n                            padding: \"0.5rem\",\r\n                            fontWeight: \"bold\",\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Select Discount Type</option>\r\n                          <option value=\"0\">Flat</option>\r\n                          <option value=\"1\">Percentage</option>\r\n                        </Field>\r\n                        <KErrorMessage name=\"discountType\" />\r\n                      </div>\r\n                      <div className=\"col-6 d-flex flex-column \">\r\n                        <div className=\"h5 \">Discount Amount{values.discountType == \"1\" ? \"(%)\" : \"\"}</div>\r\n\r\n                        <Field\r\n                          name=\"discountAmount\"\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          style={{\r\n                            // width: \"70%\",\r\n                            height: \"40px\",\r\n                            borderRadius: \"5px\",\r\n                            border: \"1px solid #ced4da\",\r\n                            padding: \"0.5rem\",\r\n                            fontWeight: \"bold\",\r\n                          }}\r\n                          // min={1}\r\n                          // max={values.discountType == \"1\" ? 99 : 999999}\r\n                        />\r\n                        {console.log(values.discountType == \"1\")}\r\n                        <KErrorMessage name=\"discountAmount\" />\r\n                      </div>\r\n                    </div>\r\n                    {/* 3 */}\r\n                    <div className=\"row my-4 justify-center \">\r\n                      <div className=\"col-6 d-flex flex-column  childDate\">\r\n                        <div className=\"h5 \">Start Date</div>\r\n\r\n                        <DatePicker\r\n                          minDate={new Date()}\r\n                          value={values.startDate}\r\n                          // value={startDate}\r\n                          dateFormat=\"DD/MM/YYYY\"\r\n                          onChange={(date) => {\r\n                            setStartDate(date);\r\n                            setFieldValue(\"startDate\", date);\r\n                          }}\r\n                          required\r\n                        />\r\n                        {/* <Field\r\n                                  type=\"date\"\r\n                                  name=\"startDate\"\r\n                                  className=\"form-control\"\r\n                                  style={{\r\n                                    width: \"70%\",\r\n                                    height: \"40px\",\r\n                                    borderRadius: \"5px\",\r\n                                    border: \"1px solid #ced4da\",\r\n                                    padding: \"0.5rem\",\r\n                                  }}\r\n                                /> */}\r\n                      </div>\r\n                      <div className=\"col-6 d-flex flex-column  childDate\">\r\n                        <div className=\"h5 \">End Date</div>\r\n\r\n                        <DatePicker\r\n                          disabled={!startDate ? true : false}\r\n                          minDate={values.startDate}\r\n                          value={values.endDate}\r\n                          dateFormat=\"DD/MM/YYYY\"\r\n                          onChange={(date) => {\r\n                            setEndDate(date);\r\n                            setFieldValue(\"endDate\", date);\r\n                          }}\r\n                          required\r\n                        />\r\n                        {/* <Field\r\n                                  type=\"date\"\r\n                                  name=\"endDate\"\r\n                                  className=\"form-control\"\r\n                                  style={{\r\n                                    width: \"70%\",\r\n                                    height: \"40px\",\r\n                                    borderRadius: \"5px\",\r\n                                    border: \"1px solid #ced4da\",\r\n                                    padding: \"0.5rem\",\r\n                                  }}\r\n                                  min={values.startDate}\r\n                                />\r\n                                {console.log(new Date(values.endDate))} */}\r\n                      </div>\r\n                    </div>\r\n                    {/* 4 */}\r\n                    <div className=\"row my-4 justify-center \">\r\n                      <div className=\"col-6 d-flex flex-column \">\r\n                        <div className=\"h5 \">No. of User Limit</div>\r\n\r\n                        <Field\r\n                          name=\"userLimit\"\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          style={{\r\n                            // width: \"70%\",\r\n                            height: \"40px\",\r\n                            borderRadius: \"5px\",\r\n                            border: \"1px solid #ced4da\",\r\n                            padding: \"0.5rem\",\r\n                            fontWeight: \"bold\",\r\n                            cursor: !selectedPromoCodeData ? \"\" : \"not-allowed\",\r\n                          }}\r\n                          disabled={!selectedPromoCodeData ? false : true}\r\n                        />\r\n                        <KErrorMessage name=\"userLimit\" />\r\n                      </div>\r\n                      <div className=\"col-6 d-flex flex-column \">\r\n                        <div className=\"h5 \">Minimum Ride Value </div>\r\n\r\n                        <Field\r\n                          name=\"minimumOrderLimit\"\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          style={{\r\n                            // width: \"70%\",\r\n                            height: \"40px\",\r\n                            borderRadius: \"5px\",\r\n                            border: \"1px solid #ced4da\",\r\n                            padding: \"0.5rem\",\r\n                            fontWeight: \"bold\",\r\n                          }}\r\n                        />\r\n                        <KErrorMessage name=\"minimumOrderLimit\" />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row my-4 justify center\">\r\n                      <div className=\"col-12 d-flex flex-column\">\r\n                        <div className=\"h5\">Description</div>\r\n                        <Field\r\n                          name=\"description\"\r\n                          // type=\"text\"\r\n                          as=\"textarea\"\r\n                          className=\"form-control\"\r\n                          style={{\r\n                            // width: \"70%\",\r\n                            height: \"100px\",\r\n                            borderRadius: \"5px\",\r\n                            border: \"1px solid #ced4da\",\r\n                            padding: \"0.5rem\",\r\n                            fontWeight: \"bold\",\r\n                          }}\r\n                        />\r\n                        <div>\r\n                          <span style={{ fontFamily: \"'DM Sans', sans-serif\", fontVariant: \"small-caps\" }}>\r\n                            {values.description.length}/150\r\n                          </span>\r\n                        </div>\r\n                        <KErrorMessage name=\"description\" />\r\n                      </div>\r\n                    </div>\r\n                    <br /> <br />\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                    >\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"buttoncss\"\r\n                        style={{\r\n                          borderRadius: \"1.5rem\",\r\n                          border: \"none\",\r\n                          fontSize: \"1rem\",\r\n                          width: \"15vw\",\r\n                          height: \"5vh\",\r\n                          backgroundColor: \"#0059cd\",\r\n                          color: \"#fff\",\r\n                        }}\r\n                      >\r\n                        SAVE\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </>\r\n        }\r\n      />\r\n\r\n      {/* {isLoading && (\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1400,\r\n            background: \"#0003\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <PuffLoader\r\n            color=\"#0059cd\"\r\n            loading={isLoading}\r\n            size={100}\r\n            // aria-label=\"Loading Spinner\"\r\n            // data-testid=\"loader\"\r\n          />\r\n        </div>\r\n      )} */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n"],"sourceRoot":""}