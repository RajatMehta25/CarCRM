{"version":3,"sources":["pages/Subscription_Management/Subscription_Management.js"],"names":["useStyles","makeStyles","theme","root","flexWrap","margin","spacing","extendedIcon","marginRight","paperHeading","padding","table","minWidth","textMiddle","verticalAlign","iconMargin","color","backgroundColor","iconcolor","headingButton","display","flexDirection","justifyContent","headingAlignment","alignItems","width","gap","textAlign","Marginbutton","container","paperPaddingRightLeft","Android12Switch","styled","Switch","borderRadius","content","position","top","transform","height","backgroundImage","encodeURIComponent","palette","getContrastText","primary","main","left","right","boxShadow","Subscription_Management","props","classes","state","location","useState","tableData","setTableData","userType","setUserType","changeid","setChangeId","colorid","setColorid","React","page","setPage","rowsPerPage","setRowsPerPage","useEffect","getUserTypes","getSubscriptionPlans","a","axios","get","data","console","log","id","plan","newTableData","filter","item","_id","orderBy","o","Date","createdAt","getTime","setSearchedData","titleFind","find","title","Operation","searchedData","deleteSubscription","post","planId","toast","success","message","POSITION","TOP_RIGHT","statusSwitch","e","category","is_blocked","target","checked","Fragment","className","elevation","classNames","style","onChange","searchVal","searchedVal","filteredRows","row","name","planName","toLowerCase","includes","requestSearch","onCancelSearch","placeholder","variant","onClick","history","push","pathname","map","type","i","aria-label","key","stickyHeader","fontWeight","slice","index","component","scope","planType","planPrice","arrow","border","rowsPerPageOptions","count","length","onPageChange","event","newPage","onRowsPerPageChange","value"],"mappings":"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","file":"static/js/40.1a6e6d74.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport classNames from \"classnames\";\r\nimport axios from \"../../axios\";\r\nimport { toast } from \"react-toastify\";\r\n// import Switch from '@mui/material/Switch';\r\n// import { styled } from '@mui/material/styles';\r\n\r\nimport {\r\n  Button,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Switch,\r\n  styled,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\n\r\n// import { Delete } from '@material-ui/icons';\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport BlockIcon from \"@material-ui/icons/Block\";\r\n// import ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n\r\n// For Table\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport { orderBy } from \"lodash\";\r\n\r\n//history\r\nimport { useHistory } from \"react-router-dom\";\r\n// import AddEditCategory from \"../AccountManagement/Account_Details\";\r\n\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { DeleteOutline, WidgetsOutlined } from \"@material-ui/icons\";\r\nimport \"./Subscription_Management.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexWrap: \"wrap\",\r\n    // marginTop: '5rem',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  paperHeading: {\r\n    padding: \"1rem 0rem\",\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  textMiddle: {\r\n    verticalAlign: \"middle !important\",\r\n  },\r\n  iconMargin: {\r\n    margin: \"0.5rem\",\r\n    color: \"#fff\",\r\n    backgroundColor: \"#696969\",\r\n  },\r\n  iconcolor: {\r\n    margin: \"0.5rem\",\r\n    color: \"#fff\",\r\n    backgroundColor: \"#0e3f37 !important\",\r\n  },\r\n  headingButton: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    padding: \"10px\",\r\n  },\r\n  headingAlignment: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    // padding: \"0 2rem 0 2rem\"\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n    [\"@media (max-width:780px)\"]: {\r\n      // eslint-disable-line no-useless-computed-key\r\n      flexDirection: \"column\",\r\n      width: \"100%\",\r\n      gap: \"1rem\",\r\n      justifyContent: \"center\",\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n  Marginbutton: {\r\n    margin: \"0.5rem\",\r\n  },\r\n  container: {\r\n    // maxHeight: \"58vh\",\r\n  },\r\n  paperPaddingRightLeft: {\r\n    padding: \"0rem 1rem\",\r\n  },\r\n}));\r\n\r\nconst Android12Switch = styled(Switch)(({ theme }) => ({\r\n  padding: 8,\r\n  \"& .MuiSwitch-track\": {\r\n    borderRadius: 22 / 2,\r\n    \"&:before, &:after\": {\r\n      content: '\"\"',\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      transform: \"translateY(-50%)\",\r\n      width: 16,\r\n      height: 16,\r\n    },\r\n    \"&:before\": {\r\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n        theme.palette.getContrastText(theme.palette.primary.main)\r\n      )}\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"/></svg>')`,\r\n      left: 12,\r\n    },\r\n    \"&:after\": {\r\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n        theme.palette.getContrastText(theme.palette.primary.main)\r\n      )}\" d=\"M19,13H5V11H19V13Z\" /></svg>')`,\r\n      right: 12,\r\n    },\r\n  },\r\n  \"& .MuiSwitch-thumb\": {\r\n    boxShadow: \"none\",\r\n    width: 16,\r\n    height: 16,\r\n    margin: 2,\r\n  },\r\n}));\r\nexport default function Subscription_Management(props) {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    location: { state },\r\n  } = props;\r\n  // const history=useHistory();\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  //User Type\r\n  const [userType, setUserType] = useState([]);\r\n  // capture ID on click\r\n  const [changeid, setChangeId] = useState(null);\r\n  // status switch\r\n  // const [checked, setChecked] = useState(true);\r\n\r\n  // color for button\r\n  const [colorid, setColorid] = useState(\"\");\r\n  // title name\r\n  const [titlename, setTitle] = useState(\"\");\r\n  // For Pagination\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    // console.log(event);\r\n    // console.log(newPage);\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserTypes();\r\n    getSubscriptionPlans();\r\n  }, []);\r\n\r\n  //get content\r\n\r\n  const getUserTypes = async () => {\r\n    try {\r\n      const { data } = await axios.get(\"/admin/get_users_types\");\r\n      // console.log(data);\r\n      setUserType(data.userType);\r\n\r\n      console.log(data.userType);\r\n    } catch (error) {\r\n      console.log(error);\r\n      // setIsloading(false);\r\n    }\r\n  };\r\n  // get data\r\n\r\n  const getSubscriptionPlans = async (id) => {\r\n    try {\r\n      if (id && id !== \"\") {\r\n        const { data } = await axios.get(\"/admin/get_subscription_plans\");\r\n        console.log(data);\r\n        console.log(data.plan);\r\n        let newTableData = data.plan.filter((item) => item.userType._id === id);\r\n        setTableData(\r\n          orderBy(newTableData, (o) => new Date(o.createdAt).getTime(), [\r\n            \"desc\",\r\n          ])\r\n        );\r\n        setSearchedData(newTableData);\r\n\r\n        setColorid(id);\r\n        console.log(data.plan);\r\n      } else {\r\n        const { data } = await axios.get(\"/admin/get_subscription_plans\");\r\n        console.log(data);\r\n        console.log(data.plan);\r\n        if (state && state !== \"undefined\") {\r\n          console.log(state);\r\n          console.log(data.plan);\r\n          let newTableData = data.plan.filter(\r\n            (item) => item.userType._id === state\r\n          );\r\n          console.log(newTableData);\r\n          let titleFind = data.plan.find((item) => item.userType._id === state)\r\n            ?.userType.title;\r\n          // let whenNoTitle=userType.find((item) => item._id === state).title\r\n          // console.log(whenNoTitle);\r\n          console.log(titleFind);\r\n          setTableData(\r\n            orderBy(newTableData, (o) => new Date(o.createdAt).getTime(), [\r\n              \"desc\",\r\n            ])\r\n          );\r\n          setSearchedData(newTableData);\r\n          setColorid(state);\r\n          switch (state) {\r\n            case \"61b0df509d05e9e75bdf4fc3\":\r\n              setChangeId({\r\n                userType: { title: \"Individual User\", _id: state },\r\n                Operation: \"Add\",\r\n              });\r\n              break;\r\n            case \"61b0df509d05e9e75bdf4fc4\":\r\n              setChangeId({\r\n                userType: { title: \"Agent Reprensentative\", _id: state },\r\n                Operation: \"Add\",\r\n              });\r\n              break;\r\n            case \"61b0df509d05e9e75bdf4fc5\":\r\n              setChangeId({\r\n                userType: {\r\n                  title: \"Management Company Representative\",\r\n                  _id: state,\r\n                },\r\n                Operation: \"Add\",\r\n              });\r\n              break;\r\n            case \"61b0df509d05e9e75bdf4fc6\":\r\n              setChangeId({\r\n                userType: { title: \"Lawyer\", _id: state },\r\n                Operation: \"Add\",\r\n              });\r\n              break;\r\n            case \"61b0df509d05e9e75bdf4fc7\":\r\n              setChangeId({\r\n                userType: { title: \"Production\", _id: state },\r\n                Operation: \"Add\",\r\n              });\r\n              break;\r\n            case \"61b0df509d05e9e75bdf4fc8\":\r\n              setChangeId({\r\n                userType: { title: \"Subscriber Staff Member\", _id: state },\r\n                Operation: \"Add\",\r\n              });\r\n              break;\r\n            default:\r\n              setChangeId({\r\n                userType: { title: titleFind, _id: state },\r\n                Operation: \"Add\",\r\n              });\r\n              break;\r\n          }\r\n        } else {\r\n          let newTableData = data.plan.filter(\r\n            (item) => item.userType._id === \"61b0df509d05e9e75bdf4fc3\"\r\n          );\r\n          setTableData(\r\n            orderBy(newTableData, (o) => new Date(o.createdAt).getTime(), [\r\n              \"desc\",\r\n            ])\r\n          );\r\n          setSearchedData(newTableData);\r\n          setChangeId({\r\n            userType: {\r\n              title: \"Individual User\",\r\n              _id: \"61b0df509d05e9e75bdf4fc3\",\r\n            },\r\n            Operation: \"Add\",\r\n          });\r\n          setColorid(\"61b0df509d05e9e75bdf4fc3\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  //edit  categories attribute\r\n\r\n  // delete category\r\n\r\n  // For Search\r\n  const [searched, setSearched] = useState(\"\");\r\n  const [searchedData, setSearchedData] = useState([]);\r\n\r\n  const requestSearch = (searchedVal) => {\r\n    console.log(searchedVal);\r\n\r\n    const filteredRows = searchedData.filter((row) => {\r\n      let name = row.planName;\r\n      return name.toLowerCase().includes(searchedVal.toLowerCase());\r\n      console.log(name);\r\n    });\r\n    setTableData(filteredRows);\r\n  };\r\n\r\n  const cancelSearch = () => {\r\n    getSubscriptionPlans(colorid);\r\n    // setSearched(\"\");\r\n    //  console.log(searchedData);\r\n    //  requestSearch()\r\n  };\r\n\r\n  //delete subscription\r\n  const deleteSubscription = async (id) => {\r\n    try {\r\n      const { data } = await axios.post(\"/admin/remove_subscription_plan\", {\r\n        planId: id,\r\n      });\r\n      toast.success(data.message, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n      getSubscriptionPlans(state);\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const statusSwitch = async (e, category) => {\r\n    try {\r\n      // console.log(e);\r\n      console.log(category);\r\n\r\n      const { data } = await axios.post(\"/admin/block_unblock_plan\", {\r\n        planId: category._id,\r\n        is_blocked: e.target.checked,\r\n      });\r\n      // props.history.push({\r\n      //     pathname: \"/Category_Management\",\r\n      //   });\r\n      getSubscriptionPlans(category.userType._id);\r\n      toast.success(data.message, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n      // console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    // console.log(e.target.checked);\r\n    // console.log(checked);\r\n    // console.log(id);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className={classes.root}>\r\n          <Paper>\r\n            <div className={classes.paperPaddingRightLeft}>\r\n              <div className=\"py-4\">\r\n                <Paper\r\n                  elevation={0}\r\n                  className={classNames(\r\n                    classes.paperHeading,\r\n                    classes.headingAlignment\r\n                  )}\r\n                >\r\n                  <h3 style={{}}>Subscription Management</h3>\r\n                  <SearchBar\r\n                    // value={searched}\r\n                    className=\"heightfix\"\r\n                    onChange={(searchVal) => requestSearch(searchVal)}\r\n                    onCancelSearch={() => cancelSearch()}\r\n                    placeholder=\"Plan Name\"\r\n                  />\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className=\"buttoncss\"\r\n                    style={{ backgroundColor: \"#0e3f37\", color: \"#fff\" }}\r\n                    onClick={() => {\r\n                      props.history.push({\r\n                        pathname: \"/adminPanel/AddEditSubscription\",\r\n                        state: changeid,\r\n                      });\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    ADD Subscription\r\n                  </Button>\r\n                </Paper>\r\n\r\n                {/* //new design */}\r\n                <Paper\r\n                  elevation={0}\r\n                  className={classNames(\r\n                    classes.paperHeading,\r\n                    classes.headingButton\r\n                  )}\r\n                >\r\n                  <div>\r\n                    {userType.map((type, i) => (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        //color=\"primary\"\r\n                        aria-label=\"add\"\r\n                        className={\r\n                          classes.iconMargin +\r\n                          \" \" +\r\n                          (colorid === type._id ? classes.iconcolor : \"\")\r\n                        }\r\n                        key={i + 1}\r\n                        onClick={() => {\r\n                          // localStorage.removeItem('savemaindata');\r\n                          // showStatusButton(type._id)\r\n                          // getCategory(type._id)\r\n                          //                           setChangeId(type._id)\r\n\r\n                          // localStorage.removeItem('maindata')\r\n                          setChangeId({\r\n                            userType: { title: type.title, _id: type._id },\r\n                            Operation: \"Add\",\r\n                          });\r\n                          console.log(type._id);\r\n                          getSubscriptionPlans(type._id);\r\n                        }}\r\n                      >\r\n                        {type.title}\r\n                      </Button>\r\n                    ))}\r\n                  </div>\r\n                </Paper>\r\n\r\n                {/* <br /> */}\r\n\r\n                {/* status end */}\r\n\r\n                <Paper>\r\n                  <TableContainer className={classes.container}>\r\n                    <Table className={classes.table} stickyHeader>\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell\r\n                            style={{ fontWeight: \"bold\", textAlign: \"center\" }}\r\n                          >\r\n                            Sr. No.\r\n                          </TableCell>\r\n                          <TableCell\r\n                            style={{ fontWeight: \"bold\", textAlign: \"center\" }}\r\n                          >\r\n                            Plan Name\r\n                          </TableCell>\r\n                          <TableCell\r\n                            style={{ fontWeight: \"bold\", textAlign: \"center\" }}\r\n                          >\r\n                            Plan Type\r\n                          </TableCell>\r\n                          <TableCell\r\n                            style={{ fontWeight: \"bold\", textAlign: \"center\" }}\r\n                          >\r\n                            Price\r\n                          </TableCell>\r\n                          <TableCell\r\n                            style={{ fontWeight: \"bold\", textAlign: \"center\" }}\r\n                          >\r\n                            Status\r\n                          </TableCell>\r\n                          <TableCell\r\n                            style={{ textAlign: \"center\", fontWeight: \"bold\" }}\r\n                          >\r\n                            Actions\r\n                          </TableCell>\r\n                          {/* <TableCell>User Type</TableCell>\r\n                              <TableCell>Status</TableCell> */}\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {tableData\r\n                          .slice(\r\n                            page * rowsPerPage,\r\n                            page * rowsPerPage + rowsPerPage\r\n                          )\r\n                          .map((category, index) => (\r\n                            <TableRow key={index}>\r\n                              <TableCell\r\n                                component=\"th\"\r\n                                scope=\"row\"\r\n                                className={classes.textMiddle}\r\n                                style={{ textAlign: \"center\" }}\r\n                              >\r\n                                {index + 1 + page * rowsPerPage}\r\n                              </TableCell>\r\n                              <TableCell\r\n                                className={classes.textMiddle}\r\n                                style={{ textAlign: \"center\" }}\r\n                              >\r\n                                {category.planName}\r\n                              </TableCell>\r\n\r\n                              <TableCell style={{ textAlign: \"center\" }}>\r\n                                {category.planType}\r\n                              </TableCell>\r\n                              <TableCell style={{ textAlign: \"center\" }}>\r\n                                {`$` + category.planPrice}\r\n                              </TableCell>\r\n                              <TableCell style={{ textAlign: \"center\" }}>\r\n                                <Tooltip title=\"Active/Inactive\" arrow>\r\n                                  <Android12Switch\r\n                                    onChange={(e) => {\r\n                                      statusSwitch(e, category);\r\n                                    }}\r\n                                    checked={category.is_blocked}\r\n                                  />\r\n                                </Tooltip>\r\n                              </TableCell>\r\n\r\n                              <TableCell\r\n                                className={classes.textMiddle}\r\n                                style={{ textAlign: \"center\" }}\r\n                              >\r\n                                <Button\r\n                                  onClick={() => {\r\n                                    props.history.push({\r\n                                      pathname:\r\n                                        \"/adminPanel/AddEditSubscription\",\r\n                                      state: category,\r\n                                    });\r\n                                  }}\r\n                                  className=\"\"\r\n                                  style={{\r\n                                    border: \"1.5px solid #c4c4c4\",\r\n                                    margin: \"0.5rem\",\r\n                                    color: \"#0e3f37\",\r\n                                  }}\r\n                                >\r\n                                  <Tooltip title=\"Edit Plan\" arrow>\r\n                                    <EditIcon />\r\n                                  </Tooltip>\r\n                                </Button>\r\n                                {/* <Button onClick={()=>BlockCategory} style={{backgroundColor:\"#696969\"}} >Manage</Button> */}\r\n\r\n                                {/* <Button  className=\"\" style={{border:\"1.5px solid #c4c4c4\",margin:\"0.5rem\",color:\"#0e3f37\"}} > <Tooltip title=\"Manage Category\" arrow><WidgetsOutlined /></Tooltip></Button> */}\r\n                                {/* <Button onClick={()=>BlockCategory} style={{backgroundColor:\"#696969\"}} >Manage</Button> */}\r\n\r\n                                <Button\r\n                                  className=\"\"\r\n                                  onClick={() => {\r\n                                    deleteSubscription(category._id);\r\n                                  }}\r\n                                  style={{\r\n                                    border: \"1.5px solid #c4c4c4\",\r\n                                    margin: \"0.5rem\",\r\n                                    color: \"#696969\",\r\n                                  }}\r\n                                >\r\n                                  <Tooltip title=\"Delete Plan\" arrow>\r\n                                    <DeleteOutline />\r\n                                  </Tooltip>\r\n                                </Button>\r\n                                {/* <Button onClick={()=>BlockCategory} style={{backgroundColor:\"#696969\"}} >Manage</Button> */}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={tableData.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            </div>\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"],"sourceRoot":""}