{"version":3,"sources":["pages/BannerManagement/BannerManagement.js"],"names":["useStyles","makeStyles","theme","root","flexWrap","margin","spacing","extendedIcon","marginRight","paperHeading","padding","table","minWidth","textMiddle","verticalAlign","iconMargin","color","backgroundColor","iconcolor","headingButton","display","flexDirection","justifyContent","headingAlignment","alignItems","width","gap","textAlign","Marginbutton","container","paperPaddingRightLeft","IOSSwitch","styled","props","focusVisibleClassName","disableRipple","height","transitionDuration","transform","palette","mode","opacity","border","grey","boxSizing","borderRadius","transition","transitions","create","duration","BannerManagement","classes","useState","tableData","setTableData","isLoading","setIsLoading","React","page","setPage","rowsPerPage","setRowsPerPage","settotalUserListCount","limit","search","setSearch","useUploadImage","ImageUploadUrl","uploadForm","isSuccess","progress","selectedBannerData","setSelectedBannerData","isAddEditBanner","modalState","setModalState","useEffect","getCategoriesContent","a","axios","get","data","console","log","totalDocs","length","status","DeleteBanner","category","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","delete","_id","toast","success","position","POSITION","TOP_RIGHT","error","statusSwitch","e","put","isActive","target","checked","message","call","timer","d","myDeb","toLowerCase","imageVerificationAlert","condition","customClass","addNewBanner","values","post","image","ImageLink","EditBannerImage","DeleteImage","imageID","split","Axios","Fragment","className","elevation","style","classNames","fontSize","arrow","onClick","minHeight","stickyHeader","size","fontWeight","slice","map","index","hover","key","component","scope","moment","createdAt","format","overflow","small","large","alt","hideDownload","hideZoom","onChange","whiteSpace","TextToDisplay","Loading","bottom","right","rowsPerPageOptions","count","onPageChange","event","newPage","onRowsPerPageChange","value","maxWidth","isOpen","onClose","reason","backgroundModal","backgroundModalContent","fontFamily","top","cursor","content","initialValues","file1","validate","handleValidateAddEditBannerData","onSubmit","formikBag","name","field","type","undefined","accept","files","file","img","Image","URL","createObjectURL","src","onload","setFieldValue","touched","errors","placeholder"],"mappings":"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","file":"static/js/48.13941012.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport classNames from \"classnames\";\r\nimport axios from \"../../axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// import Switch from '@mui/material/Switch';\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n// import { styled } from '@mui/material/styles';\r\n// import Skeleton from \"react-loading-skeleton\";\r\n// import \"react-loading-skeleton/dist/skeleton.css\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Switch,\r\n  styled,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\n\r\n// import { Delete } from '@material-ui/icons';\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport BlockIcon from \"@material-ui/icons/Block\";\r\n// import ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n\r\n// For Table\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport { orderBy, get } from \"lodash\";\r\n\r\n//history\r\nimport { useHistory } from \"react-router-dom\";\r\n// import AddEditCategory from \"../AccountManagement/Account_Details\";\r\n\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { DeleteOutline, WidgetsOutlined } from \"@material-ui/icons\";\r\nimport ModalImage from \"react-modal-image\";\r\nimport { Input, Modal } from \"../../components/index\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport { useUploadImage } from \"../../services/Imagecustomhook\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Axios from \"axios\";\r\nimport { handleValidateAddEditBannerData } from \"../../utils/validators\";\r\nimport NoDataFound from \"../../components/NoDataFound\";\r\nimport PuffLoader from \"react-spinners/PuffLoader\";\r\nimport { ImageUploadUrl } from \"../../statics/constants\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexWrap: \"wrap\",\r\n    // marginTop: '5rem',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  paperHeading: {\r\n    padding: \"0rem 0rem\",\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  textMiddle: {\r\n    verticalAlign: \"middle !important\",\r\n  },\r\n  iconMargin: {\r\n    margin: \"0.5rem\",\r\n    color: \"#fff\",\r\n    backgroundColor: \"#696969\",\r\n  },\r\n  iconcolor: {\r\n    margin: \"0.5rem\",\r\n    color: \"#fff\",\r\n    backgroundColor: \"#0e3f37 !important\",\r\n  },\r\n  headingButton: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    padding: \"10px\",\r\n  },\r\n  headingAlignment: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    // padding: \"0 2rem 0 2rem\"\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n    [\"@media (max-width:780px)\"]: {\r\n      // eslint-disable-line no-useless-computed-key\r\n      flexDirection: \"column\",\r\n      width: \"100%\",\r\n      gap: \"1rem\",\r\n      justifyContent: \"center\",\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n  Marginbutton: {\r\n    margin: \"0.5rem\",\r\n  },\r\n  container: {\r\n    // maxHeight: \"58vh\",\r\n    // height:\"auto\"\r\n  },\r\n  paperPaddingRightLeft: {\r\n    padding: \"0rem 1rem\",\r\n  },\r\n}));\r\n\r\nconst IOSSwitch = styled((props) => <Switch focusVisibleClassName=\".Mui-focusVisible\" disableRipple {...props} />)(\r\n  ({ theme }) => ({\r\n    width: 42,\r\n    height: 26,\r\n    padding: 0,\r\n    \"& .MuiSwitch-switchBase\": {\r\n      padding: 0,\r\n      margin: 2,\r\n      transitionDuration: \"300ms\",\r\n      \"&.Mui-checked\": {\r\n        transform: \"translateX(16px)\",\r\n        color: \"#fff\",\r\n        \"& + .MuiSwitch-track\": {\r\n          backgroundColor: theme.palette.mode === \"dark\" ? \"#32cd32\" : \"#32cd32\",\r\n          opacity: 1,\r\n          border: 0,\r\n        },\r\n        \"&.Mui-disabled + .MuiSwitch-track\": {\r\n          opacity: 0.5,\r\n        },\r\n      },\r\n      \"&.Mui-focusVisible .MuiSwitch-thumb\": {\r\n        color: \"#33cf4d\",\r\n        border: \"6px solid #fff\",\r\n      },\r\n      \"&.Mui-disabled .MuiSwitch-thumb\": {\r\n        color: theme.palette.mode === \"light\" ? theme.palette.grey[100] : theme.palette.grey[600],\r\n      },\r\n      \"&.Mui-disabled + .MuiSwitch-track\": {\r\n        opacity: theme.palette.mode === \"light\" ? 0.7 : 0.3,\r\n      },\r\n    },\r\n    \"& .MuiSwitch-thumb\": {\r\n      boxSizing: \"border-box\",\r\n      width: 22,\r\n      height: 22,\r\n    },\r\n    \"& .MuiSwitch-track\": {\r\n      borderRadius: 26 / 2,\r\n      backgroundColor: theme.palette.mode === \"light\" ? \"#E9E9EA\" : \"#f70f07\",\r\n      opacity: 1,\r\n      transition: theme.transitions.create([\"background-color\"], {\r\n        duration: 500,\r\n      }),\r\n    },\r\n  })\r\n);\r\n\r\nexport default function BannerManagement(props) {\r\n  const classes = useStyles();\r\n\r\n  // const history=useHistory();\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // status switch\r\n  // const [checked, setChecked] = useState(true);\r\n\r\n  // For Pagination\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [totalUserListCount, settotalUserListCount] = useState(4);\r\n  const [limit, setLimit] = useState(10);\r\n  const [search, setSearch] = useState(\"\");\r\n  //\r\n  const { isSuccess, uploadForm, progress } = useUploadImage(`${ImageUploadUrl}/fileUpload`);\r\n  const [selectedBannerData, setSelectedBannerData] = useState(null);\r\n  const [modalState, setModalState] = useState({\r\n    isAddEditBanner: \"\",\r\n  });\r\n  //\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    // console.log(event);\r\n    // console.log(newPage);\r\n    // console.log(newPage);\r\n    // console.log({ event, newPage });\r\n    // getCategoriesContent(newPage + 1, rowsPerPage, search);\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    // getCategoriesContent(0, event.target.value, search);\r\n    // setRowsPerPage(parseInt(event.target.value, 10));\r\n    // console.log({ event });\r\n    // setPage(0);\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCategoriesContent();\r\n  }, []);\r\n\r\n  //get content\r\n  const getCategoriesContent = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const { data } = await axios.get(\r\n        // `/private/courierCategory?page=${page}&limit=${limit}&search=${search}`\r\n        // `/private/tip`\r\n        `/private/banner`\r\n      );\r\n      console.log(data);\r\n      setTableData([...data.data]);\r\n      //   setSearchedData(data.data.docs);\r\n      setSearch(search);\r\n      settotalUserListCount(data.data.totalDocs);\r\n      setIsLoading(false);\r\n      if (data.data.length === 0 || data.status === 500) {\r\n        // toast.error(\"No Data Found\", {\r\n        //   position: toast.POSITION.TOP_RIGHT,\r\n        // });\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  // edit category itself\r\n\r\n  const EditBanner = (category) => {\r\n    props.history.push({\r\n      pathname: \"/adminPanel/AddEditBanner\",\r\n      state: category,\r\n    });\r\n  };\r\n\r\n  //edit  categories attribute\r\n\r\n  const EditAttributeContent = (category) => {\r\n    console.log(tableData);\r\n    props.history.push({\r\n      pathname: \"/EditCategoryAttributes\",\r\n      state: category,\r\n    });\r\n\r\n    // delete category\r\n  };\r\n  const DeleteBanner = async (category) => {\r\n    try {\r\n      Swal.fire({\r\n        title: \"Are you sure?\",\r\n        text: \"You won't be able to revert this!\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, delete it!\",\r\n      }).then(async (result) => {\r\n        if (result.isConfirmed) {\r\n          const { data } = await axios.delete(\r\n            `/private/banner/${category._id}`\r\n            // , {\r\n            // icon: category.icon,\r\n            // title: category.title,\r\n            // }\r\n          );\r\n          console.log(data);\r\n          getCategoriesContent();\r\n          toast.success(\"Deleted\", {\r\n            position: toast.POSITION.TOP_RIGHT,\r\n          });\r\n          // Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n        } else {\r\n          toast.error(\"You have cancelled the operation\", {\r\n            position: toast.POSITION.TOP_RIGHT,\r\n          });\r\n        }\r\n      });\r\n      // if (window.confirm(\"Are you sure you want to delete this Banner?\")) {\r\n      //   const { data } = await axios.delete(\r\n      //     `/private/banner/${category._id}`\r\n      //     // , {\r\n      //     // icon: category.icon,\r\n      //     // title: category.title,\r\n      //     // }\r\n      //   );\r\n      //   console.log(data);\r\n      //   getCategoriesContent();\r\n      //   toast.success(\"Deleted\", {\r\n      //     position: toast.POSITION.TOP_RIGHT,\r\n      //   });\r\n      // } else {\r\n      //   toast.error(\"You have cancelled the operation\", {\r\n      //     position: toast.POSITION.TOP_RIGHT,\r\n      //   });\r\n      // }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(error, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    }\r\n  };\r\n\r\n  // status switch\r\n\r\n  const statusSwitch = async (e, category) => {\r\n    try {\r\n      //   console.log(id);\r\n\r\n      const { data } = await axios.put(`/private/banner/${category._id}`, {\r\n        // percentage: category.percentage,\r\n        isActive: e.target.checked,\r\n      });\r\n      // props.history.push({\r\n      //     pathname: \"/Category_Management\",\r\n      //   });\r\n\r\n      getCategoriesContent();\r\n      toast.success(data.message, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // For Search\r\n  const [searched, setSearched] = useState(\"\");\r\n  const [searchedData, setSearchedData] = useState([]);\r\n\r\n  const requestSearch = (searchedVal) => {\r\n    console.log(searchedVal);\r\n\r\n    const filteredRows = searchedData.filter((row) => {\r\n      let name = row.sect_name;\r\n      return name.toLowerCase().includes(searchedVal.toLowerCase());\r\n    });\r\n    setTableData(filteredRows);\r\n  };\r\n\r\n  const cancelSearch = () => {\r\n    getCategoriesContent(page, limit, \"\");\r\n    // setSearched(\"\");\r\n    //  console.log(searchedData);\r\n    //  requestSearch()\r\n  };\r\n  const EditPetCategory = (category) => {\r\n    props.history.push({\r\n      pathname: \"/adminPanel/AddEditPetCategory\",\r\n      state: category,\r\n    });\r\n  };\r\n\r\n  const BlockPackageCategory = async (id) => {\r\n    if (window.confirm(\"Are you sure you want to block this package category?\")) {\r\n      try {\r\n        // console.log(category);\r\n        const { data } = await axios.delete(`/private/courierCategory/${id}?status=block`);\r\n        console.log(data);\r\n        getCategoriesContent(page, limit, search);\r\n        toast.success(\"Package Blocked\", {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      toast.error(\"Operation Cancelled\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    }\r\n  };\r\n\r\n  const UnBlockPackageCategory = async (id) => {\r\n    if (window.confirm(\"Are you sure you want to unblock this package category?\")) {\r\n      try {\r\n        // console.log(category);\r\n        const { data } = await axios.delete(`/private/courierCategory/${id}?status=unblock`);\r\n        console.log(data);\r\n        getCategoriesContent(page, limit, search);\r\n        toast.success(\"Package Unblocked\", {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      toast.error(\"Operation Cancelled\", {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    }\r\n  };\r\n  const getPackageFare = async () => {\r\n    try {\r\n      const { data } = await axios.get(`/private/courier`);\r\n      props.history.push({\r\n        pathname: \"/adminPanel/FarePackage\",\r\n        state: data.data,\r\n      });\r\n      console.log(data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  function myDeb(call, d = 1000) {\r\n    let timer;\r\n    return function (...args) {\r\n      clearTimeout(timer);\r\n      timer = setTimeout(() => {\r\n        call(...args);\r\n      }, d);\r\n    };\r\n  }\r\n\r\n  const SearchPackage = myDeb((search) => {\r\n    getCategoriesContent(page, limit, search.toLowerCase());\r\n  });\r\n\r\n  const sortData = () => {\r\n    let data = tableData.sort((objA, objB) => new Date(objB.createdAt) - new Date(objA.createdAt));\r\n    return data;\r\n  };\r\n  const imageVerificationAlert = (condition) => {\r\n    if (condition) {\r\n      Swal.fire({\r\n        customClass: {\r\n          container: \"my_swal\",\r\n        },\r\n        icon: \"success\",\r\n        title: \"Success.\",\r\n        text: \"Image Dimensions Accepted!\",\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        customClass: {\r\n          container: \"my_swal\",\r\n        },\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: \"Image Dimensions not Accepted!\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const addNewBanner = async (values) => {\r\n    try {\r\n      console.log(values);\r\n\r\n      const { data } = await axios.post(`/private/banner`, {\r\n        image: values.ImageLink,\r\n        isActive: true,\r\n        // description: values.description,\r\n      });\r\n      // props.history.push({\r\n      //   pathname: \"/adminPanel/BannerManagement\",\r\n      // });\r\n      getCategoriesContent();\r\n      toast.success(data.message, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n      setSelectedBannerData(\"\");\r\n      setModalState({ isAddEditBanner: false });\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // Edit Category . update api\r\n\r\n  const EditBannerImage = async (values) => {\r\n    if (selectedBannerData?.image === values.ImageLink) {\r\n      try {\r\n        console.log(values);\r\n\r\n        const { data } = await axios.put(`/private/banner/${selectedBannerData._id}`, {\r\n          image: values.ImageLink,\r\n          isActive: selectedBannerData.isActive,\r\n          // description: values.description || state.description,\r\n          // is_active: state.is_active,\r\n        });\r\n        getCategoriesContent();\r\n        toast.success(data.message, {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n        setSelectedBannerData(\"\");\r\n        setModalState({ isAddEditBanner: false });\r\n        console.log(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      try {\r\n        console.log(values);\r\n\r\n        const { data } = await axios.put(`/private/banner/${selectedBannerData._id}`, {\r\n          image: values.ImageLink,\r\n          isActive: selectedBannerData.isActive,\r\n          // description: values.description || state.description,\r\n          // is_active: state.is_active,\r\n        });\r\n        await DeleteImage();\r\n        getCategoriesContent();\r\n        toast.success(data.message, {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n        });\r\n        setSelectedBannerData(\"\");\r\n        setModalState({ isAddEditBanner: false });\r\n        console.log(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n  const DeleteImage = async () => {\r\n    let imageID = !selectedBannerData ? \"\" : selectedBannerData?.image.split(\"/\")[3];\r\n    console.log(imageID);\r\n    try {\r\n      const { data } = await Axios.get(`http://18.221.140.83:3000/fileDelete/${imageID}`);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className={classes.root}>\r\n          <Paper elevation={0} style={{ backgroundColor: \"transparent\" }}>\r\n            <div className={classes.paperPaddingRightLeft}>\r\n              <div className=\"\">\r\n                <Paper\r\n                  elevation={0}\r\n                  style={{ backgroundColor: \"transparent\" }}\r\n                  className={classNames(classes.paperHeading, classes.headingAlignment)}\r\n                >\r\n                  <h3 style={{}}> </h3>\r\n                  <div></div>\r\n                  {/* <SearchBar\r\n                    style={{ width: \"30%\", marginTop: 70 }}\r\n                    // value={searched}\r\n                    className=\"heightfix\"\r\n                    onChange={(searchVal) => SearchPackage(searchVal)}\r\n                    onCancelSearch={() => cancelSearch()}\r\n                    placeholder=\"Search by Tip\"\r\n                  /> */}\r\n                  {/* <Button\r\n                    variant=\"contained\"\r\n                    className=\"buttoncss\"\r\n                    style={{ backgroundColor: \"#0059cd\", color: \"#fff\" }}\r\n                    onClick={() => {\r\n                      getPackageFare();\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    <WidgetsOutlined />\r\n                    &nbsp; Manage fare\r\n                  </Button> */}\r\n                  {/* <Button\r\n                    variant=\"contained\"\r\n                    className=\"buttoncss\"\r\n                    style={{ backgroundColor: \"#0059cd\", color: \"#fff\" }}\r\n                    onClick={() => {\r\n                      props.history.push({\r\n                        pathname: \"/adminPanel/AddEditBanner\",\r\n                      });\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    Add Banner\r\n                  </Button> */}\r\n                  {/* <Tooltip title=\"Add Banner\" arrow>\r\n                    <IconButton\r\n                      className=\"buttoncss\"\r\n                      style={{ backgroundColor: \"#006FFF\", color: \"#fff\" }}\r\n                      onClick={() => {\r\n                        props.history.push({\r\n                          pathname: \"/adminPanel/AddEditBanner\",\r\n                        });\r\n                      }}\r\n                    >\r\n                      <AddIcon />\r\n                    </IconButton>\r\n                  </Tooltip> */}\r\n                  <Tooltip title={<span style={{ color: \"white\", fontSize: \"16px\" }}>Add Banner</span>} arrow>\r\n                    <IconButton\r\n                      className=\"buttoncss mb-3\"\r\n                      style={{ backgroundColor: \"#0059cd\", color: \"#fff\" }}\r\n                      onClick={() => {\r\n                        // props.history.push({\r\n                        //   pathname: \"/adminPanel/AddEditBanner\",\r\n                        // });\r\n                        setSelectedBannerData(null);\r\n                        setModalState({ isAddEditBanner: true });\r\n                      }}\r\n                    >\r\n                      <AddIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </Paper>\r\n\r\n                {/* //new design */}\r\n\r\n                {/* <br /> */}\r\n\r\n                {/* status end */}\r\n\r\n                <Paper>\r\n                  <TableContainer className={classes.container} style={{ minHeight: tableData.length > 0 ? \"50vh\" : \"\" }}>\r\n                    <Table className={classes.table} stickyHeader size=\"small\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell style={{ fontWeight: \"bold\" }}>Sr. No.</TableCell>\r\n                          {/* <TableCell style={{ fontWeight: \"bold\" }}>\r\n                            {\" \"}\r\n                            Tip Name\r\n                          </TableCell> */}\r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Date</TableCell>\r\n                          {/* <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Service Type</TableCell> */}\r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Banner Image</TableCell>\r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Status</TableCell>\r\n                          <TableCell style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Actions</TableCell>\r\n                          {/* <TableCell>User Type</TableCell>\r\n                              <TableCell>Status</TableCell> */}\r\n                        </TableRow>\r\n                      </TableHead>\r\n\r\n                      <TableBody>\r\n                        {/* {isLoading ? (\r\n                          <TableRow>\r\n                            <Skeleton\r\n                              style={{ width: \"70vw\", borderRadius: \"20px\" }}\r\n                              highlightColor=\"#fff\"\r\n                              height=\"1rem\"\r\n                              count={2}\r\n                              baseColor=\"#ebebeb\"\r\n                            />\r\n                          </TableRow>\r\n                        ) : (\r\n                          false\r\n                        )} */}\r\n                        {tableData\r\n                          // sortData()\r\n                          .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                          //   .reverse()\r\n                          .map((category, index) => (\r\n                            <TableRow hover key={index}>\r\n                              <TableCell component=\"th\" scope=\"row\" className={classes.textMiddle}>\r\n                                {index + 1 + page * rowsPerPage}\r\n                              </TableCell>\r\n                              <TableCell className={classes.textMiddle} style={{ textAlign: \"center\" }}>\r\n                                {moment(category?.createdAt).format(\"DD/MM/YYYY\")}\r\n                              </TableCell>\r\n                              <TableCell\r\n                                className={classes.textMiddle}\r\n                                style={{ textAlign: \"center\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}\r\n                              >\r\n                                <div\r\n                                  className=\"\"\r\n                                  style={{\r\n                                    width: \"70px\",\r\n                                    height: \"70px\",\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"center\",\r\n                                    alignItems: \"center\",\r\n                                    overflow: \"hidden\",\r\n                                  }}\r\n                                >\r\n                                  <ModalImage\r\n                                    small={category?.image}\r\n                                    large={category?.image}\r\n                                    alt=\"Banner Image\"\r\n                                    hideDownload\r\n                                    hideZoom\r\n                                  />\r\n                                </div>\r\n                              </TableCell>\r\n                              <TableCell className={classes.textMiddle} style={{ textAlign: \"center\" }}>\r\n                                <Tooltip\r\n                                  title={<span style={{ fontSize: \"16px\" }}>{category.isActive ? \"Active\" : \"Inactive\"}</span>}\r\n                                  arrow\r\n                                >\r\n                                  <Button>\r\n                                    <IOSSwitch\r\n                                      onChange={(e) => {\r\n                                        statusSwitch(e, category);\r\n                                      }}\r\n                                      checked={category.isActive ? true : false}\r\n                                    />\r\n                                  </Button>\r\n                                </Tooltip>\r\n                              </TableCell>\r\n\r\n                              <TableCell className={classes.textMiddle} style={{ textAlign: \"center\", whiteSpace: \"nowrap\" }}>\r\n                                <Button\r\n                                  onClick={() => {\r\n                                    setSelectedBannerData(category);\r\n                                    setModalState({ isAddEditBanner: true });\r\n                                  }}\r\n                                  className=\"EditButton mx-2\"\r\n                                >\r\n                                  <Tooltip title={<span style={{ fontSize: \"16px\" }}>Manage</span>} arrow>\r\n                                    <EditIcon />\r\n                                  </Tooltip>\r\n                                </Button>\r\n                                {/* <Button\r\n                                  onClick={() =>\r\n                                    category.isBlock === \"block\"\r\n                                      ? UnBlockPackageCategory(category._id)\r\n                                      : BlockPackageCategory(category._id)\r\n                                  }\r\n                                  className=\"\"\r\n                                  style={{\r\n                                    border: \"1.5px solid #F6F6F6\",\r\n                                    margin: \"0.5rem\",\r\n                                    color:\r\n                                      category.isBlock === \"block\"\r\n                                        ? \"red\"\r\n                                        : \"#696969\",\r\n                                  }}\r\n                                >\r\n                                  <Tooltip title=\"Block/Unblock\" arrow>\r\n                                    <BlockIcon />\r\n                                  </Tooltip>\r\n                                </Button> */}\r\n\r\n                                {/* <Button onClick={()=>BlockCategory} style={{backgroundColor:\"#696969\"}} >Manage</Button> */}\r\n                                {/* <Button\r\n                                  onClick={() => {\r\n                                    props.history.push({\r\n                                      pathname: \"/EditCategoryAttributes\",\r\n                                      state: category._id,\r\n                                    });\r\n                                  }}\r\n                                  className=\"\"\r\n                                  style={{\r\n                                    border: \"1.5px solid #F6F6F6\",\r\n                                    margin: \"0.5rem\",\r\n                                    color: \"#0e3f37\",\r\n                                  }}\r\n                                >\r\n                                  {\" \"}\r\n                                  <Tooltip title=\"Manage Category\" arrow>\r\n                                    <WidgetsOutlined />\r\n                                  </Tooltip>\r\n                                </Button> */}\r\n                                {/* <Button onClick={()=>BlockCategory} style={{backgroundColor:\"#696969\"}} >Manage</Button> */}\r\n                                <Button\r\n                                  className=\"DeleteButton\"\r\n                                  onClick={() => DeleteBanner(category)}\r\n                                  style={\r\n                                    {\r\n                                      // border: \"1.5px solid #c4c4c4\",\r\n                                      // margin: \"0.5rem\",\r\n                                      // color: \"#696969\",\r\n                                    }\r\n                                  }\r\n                                >\r\n                                  <Tooltip title={<span style={{ fontSize: \"16px\" }}>Delete</span>} arrow>\r\n                                    <DeleteOutline />\r\n                                  </Tooltip>\r\n                                </Button>\r\n                                {/* <Button onClick={()=>BlockCategory} style={{backgroundColor:\"#696969\"}} >Manage</Button> */}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  {tableData.length === 0 ? (\r\n                    <NoDataFound TextToDisplay=\"No Data Found.\" fontSize=\"24px\" Loading={isLoading} />\r\n                  ) : (\r\n                    false\r\n                  )}\r\n                  <TablePagination\r\n                   style={{position:\"fixed\",bottom:4,backgroundColor:\"white\",right:27}}\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={tableData.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            </div>\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n      {/* AddEdit Banner */}\r\n      <Modal\r\n        maxWidth=\"lg\"\r\n        width=\"840px\"\r\n        isOpen={modalState.isAddEditBanner}\r\n        onClose={(event, reason) => {\r\n          if (reason && (reason === \"backdropClick\" || \"escapeKeyDown\")) {\r\n            console.log(reason);\r\n            setModalState({\r\n              isAddEditBanner: true,\r\n            });\r\n          } else {\r\n            setModalState({\r\n              isAddEditBanner: false,\r\n            });\r\n            setSelectedBannerData(null);\r\n          }\r\n          // setModalState({\r\n          //   isAddEditTaxiSingle: false,\r\n          // });\r\n          // setSelectedTaxiDataAddEdit(null);\r\n        }}\r\n        backgroundModal={false}\r\n        backgroundModalContent={false}\r\n        title={\r\n          <div>\r\n            <div\r\n              className=\"my-3\"\r\n              style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"22px\", fontFamily: \"'DM Sans', sans-serif\" }}\r\n            >\r\n              {selectedBannerData === null ? \"Add Vehicle Type\" : \"Edit Vehicle Type\"}\r\n            </div>\r\n            <div className=\"closeicon\">\r\n              <AiOutlineClose\r\n                style={{\r\n                  fontSize: \"1.5rem\",\r\n                  position: \"absolute\",\r\n                  top: 16,\r\n                  right: 16,\r\n                  color: \"#fff\",\r\n                  borderRadius: \"50%\",\r\n                  backgroundColor: \"red\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => {\r\n                  setModalState({\r\n                    isAddEditBanner: false,\r\n                  });\r\n                  setSelectedBannerData(null);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        }\r\n        content={\r\n          <>\r\n            <Formik\r\n              // validationSchema={validationSchema}\r\n              initialValues={{\r\n                isActive: get(selectedBannerData, \"isActive\", \"\"),\r\n                file1: \"\",\r\n                ImageLink: get(selectedBannerData, \"image\", \"\"),\r\n                // description: get(selectedBannerData, \"description\", \"\"),\r\n              }}\r\n              validate={(values) => handleValidateAddEditBannerData(values, selectedBannerData)}\r\n              onSubmit={(values) => {\r\n                console.log(values);\r\n                if (selectedBannerData !== null) {\r\n                  EditBannerImage(values);\r\n                  // EditTaxiSingle(values);\r\n                } else {\r\n                  addNewBanner(values);\r\n                  // addNewTaxiSingle(values);\r\n                  console.log(\"gadbad\");\r\n                }\r\n              }}\r\n            >\r\n              {(formikBag) => (\r\n                <Form style={{ width: \"100%\" }}>\r\n                  <div className=\"container\">\r\n                    {/* <div className=\"row my-3 justify-content-center\" style={{ fontSize: \"22px\", fontWeight: \"bold\" }}>\r\n                      <div className=\"col-6 d-flex flex-column \"> Manage Trip Fare</div>\r\n                      <div className=\"col-6 d-flex flex-column \"></div>\r\n                    </div> */}\r\n\r\n                    <div className=\"row my-3\">\r\n                      <div className=\"col-md-6\">\r\n                        <label>\r\n                          Banner Image<span style={{ color: \"#85BB65\", fontWeight: \"bold\" }}>(292x140)</span>:\r\n                        </label>\r\n                        <Field name=\"file1\">\r\n                          {({ field }) => (\r\n                            <Input\r\n                              {...field}\r\n                              type=\"file\"\r\n                              value={undefined}\r\n                              // onChange={(e) => {\r\n                              //   formikBag.setFieldValue(\"file1\", e.target.value);\r\n                              // }}\r\n                              accept=\"image/png, image/jpeg , image/jpg\"\r\n                              onChange={async (e) => {\r\n                                // if (!selectedTaxiDataAddEdit) {\r\n                                const [file] = e.target.files;\r\n                                console.log(file);\r\n                                if (file) {\r\n                                  const img = new Image();\r\n                                  console.log(URL.createObjectURL(file));\r\n                                  img.src = URL.createObjectURL(file);\r\n                                  img.onload = async () => {\r\n                                    if (img.width === 292 && img.height === 140) {\r\n                                      // alert(\"Image Dimensions accepted\");\r\n                                      imageVerificationAlert(true);\r\n                                      let data = await uploadForm(file);\r\n                                      formikBag.setFieldValue(\"file1\", file);\r\n                                      formikBag.setFieldValue(\"ImageLink\", data);\r\n                                      //  setProfileImagepath(data);\r\n                                    } else {\r\n                                      // alert(\"Image Dimensions not accepted\");\r\n                                      imageVerificationAlert(false);\r\n                                      formikBag.setFieldValue(\"file1\", \"\");\r\n                                      formikBag.setFieldValue(\"ImageLink\", \"\");\r\n                                      //  setProfileImagepath(\"\");\r\n                                    }\r\n                                  };\r\n                                }\r\n                                // } else {\r\n                                //   const [file] = e.target.files;\r\n                                //   console.log(file);\r\n                                //   if (file) {\r\n                                //     const img = new Image();\r\n                                //     console.log(URL.createObjectURL(file));\r\n                                //     img.src = URL.createObjectURL(file);\r\n                                //     img.onload = async () => {\r\n                                //       if (img.width === 145 && img.height === 145) {\r\n                                //         // alert(\"Image Dimensions accepted\");\r\n                                //         imageVerificationAlert(true);\r\n                                //         let data = await uploadForm(file);\r\n                                //         formikBag.setFieldValue(\"file1\", file);\r\n                                //         formikBag.setFieldValue(\"ImageLink\", data);\r\n                                //         // DeleteImage();\r\n                                //         //  setProfileImagepath(data);\r\n                                //       } else {\r\n                                //         // alert(\"Image Dimensions not accepted\");\r\n                                //         imageVerificationAlert(false);\r\n                                //         formikBag.setFieldValue(\"file1\", \"\");\r\n                                //         formikBag.setFieldValue(\"ImageLink\", \"\");\r\n                                //         //  setProfileImagepath(\"\");\r\n                                //       }\r\n                                //     };\r\n                                //   }\r\n                                // }\r\n                              }}\r\n                              error={formikBag.touched.file1 && formikBag.errors.file1 ? formikBag.errors.file1 : null}\r\n                              className=\"form-control\"\r\n                              placeholder={\"Enter Banner Image\"}\r\n                            />\r\n                          )}\r\n                        </Field>\r\n                      </div>\r\n\r\n                      <div className=\"col-md-6\">\r\n                        {/* <label>Preview:</label> */}\r\n                        <Field name=\"ImageLink\">\r\n                          {({ field }) => (\r\n                            <>\r\n                              <img\r\n                                {...field}\r\n                                alt=\"banner image\"\r\n                                src={formikBag.values.ImageLink}\r\n                                style={{\r\n                                  width: 240,\r\n                                  height: 140,\r\n                                }}\r\n                                // error={\r\n                                //   formikBag.touched.description && formikBag.errors.description\r\n                                //     ? formikBag.errors.description\r\n                                //     : null\r\n                                // }\r\n                                className=\"form-control\"\r\n                                // placeholder={\"Enter Description\"}\r\n                              />\r\n                            </>\r\n                          )}\r\n                        </Field>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"buttoncss\"\r\n                      style={{\r\n                        borderRadius: \"1.5rem\",\r\n                        border: \"none\",\r\n                        fontSize: \"1rem\",\r\n                        width: \"10vw\",\r\n                        height: \"5vh\",\r\n                        backgroundColor: \"#006FFF\",\r\n                        color: \"#fff\",\r\n                        margin: \"2rem 0rem\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      //  disabled={formikBag.values.ImageLink && !formikBag.errors ? false : true}\r\n                    >\r\n                      SAVE\r\n                    </button>\r\n                    {console.log(formikBag.errors)}\r\n                  </div>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </>\r\n        }\r\n      />\r\n      {/* {isLoading && (\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1400,\r\n            background: \"#0003\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <PuffLoader\r\n            color=\"#0059cd\"\r\n            loading={isLoading}\r\n            size={100}\r\n            // aria-label=\"Loading Spinner\"\r\n            // data-testid=\"loader\"\r\n          />\r\n        </div>\r\n      )} */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n"],"sourceRoot":""}